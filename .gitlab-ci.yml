# GitLab CI/CD Pipeline für Potenzmengenkonstruktion
# Auto-Build & Deploy bei Änderungen + Trigger von Commons Updates

stages:
  - build
  - deploy

variables:
  NODE_VERSION: "18"
  APP_NAME: "potenzmengenkonstruktion"
  DEPLOY_PATH: "/usr/share/nginx/html/Potenzmengenkonstruktion"
  COMMONS_REPO_URL: "git+ssh://git@git.w-hs.de:pi-lab/thi/commons.git"

# Build Stage - Holt neueste Commons Library und baut App
build_app:
  stage: build
  before_script:
    - echo "Node.js version:" && node --version && npm --version
    # SSH Setup für Commons Repository
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan git.w-hs.de >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "Installing dependencies and updating commons library..."
    - npm ci --cache .npm --prefer-offline
    - echo "Building application..."
    - npm run build
    - echo "Build completed successfully"
    - ls -la dist/
  artifacts:
    paths:
      - dist/$APP_NAME/
    expire_in: 1 hour
  cache:
    paths:
      - .npm/
      - node_modules/
  only:
    - main
    - develop
    - /^release\/.*$/

# Deploy Stage - App auf nginx Server deployen
deploy_to_server:
  stage: deploy
  before_script:
    # SSH Setup für Deployment Server
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$DEPLOY_SERVER_HOST_KEY" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "Deploying to nginx server..."
    
    # Backup erstellen (falls vorhanden)
    - |
      ssh $DEPLOY_USER@$DEPLOY_HOST "
        if [ -d '$DEPLOY_PATH' ]; then
          sudo cp -r '$DEPLOY_PATH' '${DEPLOY_PATH}.backup.$(date +%Y%m%d-%H%M%S)'
        fi
      "
    
    # Deploy-Ordner vorbereiten
    - ssh $DEPLOY_USER@$DEPLOY_HOST "sudo mkdir -p '$DEPLOY_PATH'"
    
    # Neue Version hochladen
    - echo "Uploading new version..."
    - scp -r dist/$APP_NAME/* $DEPLOY_USER@$DEPLOY_HOST:/tmp/Potenzmengenkonstruktion-deploy/
    
    # Dateien an finalen Ort verschieben
    - |
      ssh $DEPLOY_USER@$DEPLOY_HOST "
        sudo rm -rf '$DEPLOY_PATH'/*
        sudo mv /tmp/Potenzmengenkonstruktion-deploy/* '$DEPLOY_PATH'/
        sudo chown -R www-data:www-data '$DEPLOY_PATH'
        sudo chmod -R 755 '$DEPLOY_PATH'
        rm -rf /tmp/Potenzmengenkonstruktion-deploy
      "
    
    
    - echo "Successfully deployed to https://pi-lab.w-hs.de/Potenzmengenkonstruktion"
  dependencies:
    - build_app
  only:
    - main
  when: on_success
  environment:
    name: production
    url: https://pi-lab.w-hs.de/Potenzmengenkonstruktion