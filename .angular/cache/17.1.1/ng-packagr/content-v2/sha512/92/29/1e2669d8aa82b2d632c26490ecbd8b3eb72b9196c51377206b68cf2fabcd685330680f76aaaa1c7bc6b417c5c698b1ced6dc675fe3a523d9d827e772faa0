{"hash":"1d7eae539b67d9c1c12404a33138d23505eb4789","fesm2022":[{"exports":["AdjustableStateConnection","Arrow","BezierCurve","ConnectionType","CoreComponent","CubicBezierCurve","DefaultState","EmptyStateConnection","FooterComponent","HeaderComponent","HelpDialogComponent","InputComponent","Label","Line","MenuComponent","MoveNodeState","MoveTransitionState","Point","Rect","Result","SelfStateConnection","Size","State","StateConnection","StateEditDialogComponent","StateMachine","StateMachineViewState","StatemachineService","StatemachineviewComponent","TestcasebuttonComponent","Transition","TransitionEditState","TransitionFromState","TransitionNewStateEditState","TransitionToState"],"facadeModuleId":"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/commons.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Point.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Arrow.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/statemachine.service.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/state-edit-dialog/state-edit-dialog.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/state.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/statemachineviewstate.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/movenodestate.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/transtioneditstate.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/transitiontostate.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/transtionnewstateeditstate.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/transitionfromstate.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/movetransitionstate.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/defaultstate.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/statemachineview.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/core.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/footer/footer.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/header/header.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/input/input.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/menu/menu.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/menu/help-dialog/help-dialog.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/testcasebutton/testcasebutton.component.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/statemachine.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/Result.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/StateConnection.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Line.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/AdjustableStateConnection.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/EmptyStateConnection.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/BezierCurve.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/SelfStateConnection.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/Label.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Size.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/Transition.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Shape.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Rect.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/public-api.mjs","/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/commons.mjs"],"name":"commons","type":"chunk","dynamicImports":[],"fileName":"commons.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["*","Injectable","Component","Inject","ViewChild","Input","ViewChildren"],"@angular/common":["CommonModule","*"],"@angular/material/dialog":["*","MAT_DIALOG_DATA","MatDialogModule","MatDialogClose"],"@angular/material/icon":["MatIcon","MatIconModule","*"],"@angular/material/form-field":["MatFormFieldModule","*"],"@angular/forms":["FormsModule","*"],"@angular/material/input":["MatInputModule","*"],"@angular/material/table":["MatTableModule"],"@angular/material/checkbox":["MatCheckboxModule","*"],"@angular/material/button":["MatButtonModule","*"],"rxjs":["Subject","firstValueFrom"],"@angular/material/menu":["MatMenuModule","*"],"@angular/common/http":["*"],"@angular/material/tabs":["MatTabGroup","MatTab","MatTabBody","MatTabHeader","MatTabLabel","MatTabNav","MatTabLink"]},"imports":["@angular/core","@angular/common","@angular/material/dialog","@angular/material/icon","@angular/material/form-field","@angular/forms","@angular/material/input","@angular/material/table","@angular/material/checkbox","@angular/material/button","rxjs","@angular/material/menu","@angular/common/http","@angular/material/tabs"],"modules":{"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Point.mjs":{"code":"class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    static get zero() {\n        return new Point(0, 0);\n    }\n    distance(point) {\n        const deltaX = this.x - point.x;\n        const deltaY = this.y - point.y;\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    }\n    // Moves this point into the direction of the given point, by a specific amount.\n    moveToPoint(point, amount) {\n        const distance = this.distance(point);\n        const newDistance = distance - amount;\n        const vecP1P2x = point.x - this.x;\n        const vecP1P2y = point.y - this.y;\n        let unitVecX = 0;\n        let unitVecY = 0;\n        if (distance != 0) {\n            unitVecX = vecP1P2x / distance;\n            unitVecY = vecP1P2y / distance;\n        }\n        const newPointX = point.x - newDistance * unitVecX;\n        const newPointY = point.y - newDistance * unitVecY;\n        return new Point(newPointX, newPointY);\n    }\n    addPoint(point) {\n        return new Point(this.x + point.x, this.y + point.y);\n    }\n    get perpendicular() {\n        return new Point(this.y, -this.x);\n    }\n    toJSON() {\n        return {\n            x: this.x,\n            y: this.y,\n        };\n    }\n}","originalLength":5299,"removedExports":[],"renderedExports":["Point"],"renderedLength":1229},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Arrow.mjs":{"code":"class Arrow {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.lowerLeft = new Point(0, 0);\n        this.upperLeft = new Point(0, this.height);\n        this.centerRight = new Point(this.width, this.height / 2);\n        this.refX = 0;\n        this.refY = this.centerRight.y;\n    }\n    /// Returns an arrow for a transition\n    static { this.transition = new Arrow(7.5 * 2, 5 * 2); }\n    path() {\n        return (this.lowerLeft.x +\n            ' ' +\n            this.lowerLeft.y +\n            ', ' +\n            this.upperLeft.x +\n            ' ' +\n            this.upperLeft.y +\n            ', ' +\n            this.centerRight.x +\n            ' ' +\n            this.centerRight.y);\n    }\n}","originalLength":3694,"removedExports":[],"renderedExports":["Arrow"],"renderedLength":743},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/statemachine.service.mjs":{"code":"// Erweiterte Version von statemachine.service.ts mit Auto-Load und Observable\nclass StatemachineService {\n    constructor(dialog) {\n        this.dialog = dialog;\n        this.automatonChangedSubject = new Subject();\n        this.onAutomatonChanged = this.automatonChangedSubject.asObservable();\n        this.showDeterministicStates = false;\n        this.testCaseViewIsVisible = true;\n        // Auto-load from browser cache on service initialization\n        this.loadFromBrowserCacheOnInit();\n    }\n    loadFromBrowserCacheOnInit() {\n        try {\n            const savedData = localStorage.getItem('endlicherautomat');\n            if (savedData && this.stateMachine) {\n                const json = JSON.parse(savedData);\n                this.stateMachine = this.stateMachine.createInstanceFromJSON(json);\n                console.log('Automatisch aus Browser-Cache geladen');\n                this.automatonChangedSubject.next();\n            }\n        }\n        catch (error) {\n            console.error('Fehler beim automatischen Laden aus Browser-Cache:', error);\n        }\n    }\n    get input() {\n        return this.stateMachine.input;\n    }\n    get states() {\n        return this.stateMachine.getAllStates();\n    }\n    isFinalState(state) {\n        return this.stateMachine.isFinalState(state);\n    }\n    isStartState(state) {\n        return this.stateMachine.isStartState(state);\n    }\n    addState(x, y) {\n        const newState = this.stateMachine.addState(x, y);\n        this.automatonChangedSubject.next();\n        return newState;\n    }\n    deleteState(state) {\n        this.stateMachine.deleteState(state);\n        this.automatonChangedSubject.next();\n    }\n    addTransition(source, destination) {\n        const transition = source.addTransition(destination);\n        this.automatonChangedSubject.next();\n        return transition;\n    }\n    removeTransition(transition) {\n        transition.delete();\n        this.automatonChangedSubject.next();\n    }\n    get transitions() {\n        return this.stateMachine.getAllTransitions();\n    }\n    openStateEditDialog(state, dialog) {\n        const dialogRef = state.openEditDialog(dialog);\n        dialogRef.afterClosed().subscribe(() => {\n            this.automatonChangedSubject.next();\n        });\n        return dialogRef;\n    }\n    openTransitionEditDialog(source, destination, dialog) {\n        const dialogRef = source.addTransition(destination).openTransitionDialog(dialog);\n        dialogRef.afterClosed().subscribe(() => {\n            this.automatonChangedSubject.next();\n        });\n        return dialogRef;\n    }\n    isActiveState(state) {\n        return this.stateMachine.activeStates(this.stateMachine.input).has(state);\n    }\n    isDeterministic() {\n        return this.stateMachine.isDeterministic();\n    }\n    isStartStateDefined() {\n        return this.stateMachine.startState != undefined;\n    }\n    createNewInstance() {\n        this.stateMachine = this.stateMachine.createNewInstance();\n        this.automatonChangedSubject.next();\n        // Clear localStorage when creating new instance\n        localStorage.removeItem('endlicherautomat');\n    }\n    loadFromBrowserCache() {\n        try {\n            this.stateMachine = this.stateMachine.loadFromBrowserCache();\n            this.automatonChangedSubject.next();\n            console.log('Manuell aus Browser-Cache geladen');\n        }\n        catch (error) {\n            console.error('Fehler beim Laden aus Browser-Cache:', error);\n            alert('Fehler beim Laden aus dem Browser-Cache. Möglicherweise sind keine gespeicherten Daten vorhanden.');\n        }\n    }\n    saveToBrowserCache() {\n        try {\n            this.stateMachine.saveToBrowserCache();\n            console.log('In Browser-Cache gespeichert');\n        }\n        catch (error) {\n            console.error('Fehler beim Speichern in Browser-Cache:', error);\n        }\n    }\n    createInstanceFromJSON(configuration) {\n        this.stateMachine = this.stateMachine.createInstanceFromJSON(configuration);\n        this.automatonChangedSubject.next();\n    }\n    saveToLocalStorage() {\n        this.stateMachine.saveToLocalStorage();\n    }\n    inputChanged(input) {\n        this.stateMachine.input = input;\n    }\n    isAccepting() {\n        return this.stateMachine.isAcceptingWord(this.stateMachine.input).isAccepting;\n    }\n    setHelpDialogComponent(component) {\n        this.helpDialogComponent = component;\n    }\n    openHelpDialog() {\n        if (this.helpDialogComponent) {\n            this.dialog.open(this.helpDialogComponent, {\n                maxWidth: '70vw',\n                maxHeight: '90vh',\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineService, deps: [{ token: i2.MatDialog }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [{ type: i2.MatDialog }] });","originalLength":18151,"removedExports":[],"renderedExports":["StatemachineService"],"renderedLength":5304},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/state-edit-dialog/state-edit-dialog.component.mjs":{"code":"class StateEditDialogComponent {\n    constructor(service, dialogRef, data) {\n        this.service = service;\n        this.dialogRef = dialogRef;\n        this.data = data;\n    }\n    onEnter() {\n        this.dialogRef.close();\n    }\n    deleteState() {\n        this.service.deleteState(this.data);\n        this.dialogRef.close();\n    }\n    isStartState() {\n        return this.service.isStartState(this.data);\n    }\n    isFinalState() {\n        return this.service.isFinalState(this.data);\n    }\n    toggleStart(isChecked) {\n        this.service.stateMachine.startState = isChecked ? this.data : undefined;\n    }\n    toggleFinal(isChecked) {\n        if (isChecked) {\n            this.service.stateMachine.finalStates = new Set([\n                ...this.service.stateMachine.finalStates,\n                this.data,\n            ]);\n        }\n        else {\n            this.service.stateMachine.finalStates.delete(this.data);\n            this.service.stateMachine.finalStates = new Set([\n                ...this.service.stateMachine.finalStates\n            ]);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StateEditDialogComponent, deps: [{ token: StatemachineService }, { token: i2.MatDialogRef }, { token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: StateEditDialogComponent, isStandalone: true, selector: \"app-state-edit-dialog\", ngImport: i0, template: \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Zustand {{ data.name }} bearbeiten</h3>\\n    <div mat-dialog-content>\\n        <form>\\n            <mat-form-field>\\n                <mat-label>Zustandsname</mat-label>\\n                <input title=\\\"Zustandsname\\\" matInput type=\\\"text\\\" autocomplete=\\\"off\\\" value=\\\"{{ data.name }}\\\"\\n                    [(ngModel)]=\\\"data.name\\\" maxlength=\\\"12\\\" name=\\\"stateName-input\\\" (keydown.enter)=\\\"onEnter()\\\">\\n            </mat-form-field>\\n            <section>\\n                <mat-checkbox (change)=\\\"toggleStart($event.checked)\\\" [checked]=\\\"isStartState()\\\" name=\\\"startState\\\">\\n                    Startzustand\\n                </mat-checkbox>\\n                <br />\\n                <mat-checkbox (change)=\\\"toggleFinal($event.checked)\\\" [checked]=\\\"isFinalState()\\\" name=\\\"endState\\\">\\n                    Endzustand\\n                </mat-checkbox>\\n            </section>\\n        </form>\\n\\n        <div class=\\\"action-buttons\\\" mat-dialog-actions>\\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" (click)=\\\"deleteState()\\\" class=\\\"button-delete\\\" color=\\\"warn\\\">\\n                L\\u00F6schen\\n            </button>\\n    \\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" class=\\\"button-ok\\\">\\n                Ok\\n            </button>\\n        </div>\\n    </div>\\n    \\n</div>\", styles: [\".container{width:min-content}.action-buttons{display:flex}.button-delete,.button-ok{flex:1}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"ngmodule\", type: MatFormFieldModule }, { kind: \"component\", type: i3.MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: i3.MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i4.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { kind: \"directive\", type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i4.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"ngmodule\", type: MatInputModule }, { kind: \"directive\", type: i5.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\"], exportAs: [\"matInput\"] }, { kind: \"ngmodule\", type: MatTableModule }, { kind: \"ngmodule\", type: MatDialogModule }, { kind: \"directive\", type: i2.MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }, { kind: \"directive\", type: i2.MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: [\"id\"], exportAs: [\"matDialogTitle\"] }, { kind: \"directive\", type: i2.MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: [\"align\"] }, { kind: \"directive\", type: i2.MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\" }, { kind: \"ngmodule\", type: MatCheckboxModule }, { kind: \"component\", type: i6.MatCheckbox, selector: \"mat-checkbox\", inputs: [\"aria-label\", \"aria-labelledby\", \"aria-describedby\", \"id\", \"required\", \"labelPosition\", \"name\", \"value\", \"disableRipple\", \"tabIndex\", \"color\", \"checked\", \"disabled\", \"indeterminate\"], outputs: [\"change\", \"indeterminateChange\"], exportAs: [\"matCheckbox\"] }, { kind: \"ngmodule\", type: MatButtonModule }, { kind: \"component\", type: i7.MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", exportAs: [\"matButton\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StateEditDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-state-edit-dialog', standalone: true, imports: [MatIcon, CommonModule, MatFormFieldModule, FormsModule, MatInputModule, MatTableModule, MatDialogModule, MatCheckboxModule, MatButtonModule], template: \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Zustand {{ data.name }} bearbeiten</h3>\\n    <div mat-dialog-content>\\n        <form>\\n            <mat-form-field>\\n                <mat-label>Zustandsname</mat-label>\\n                <input title=\\\"Zustandsname\\\" matInput type=\\\"text\\\" autocomplete=\\\"off\\\" value=\\\"{{ data.name }}\\\"\\n                    [(ngModel)]=\\\"data.name\\\" maxlength=\\\"12\\\" name=\\\"stateName-input\\\" (keydown.enter)=\\\"onEnter()\\\">\\n            </mat-form-field>\\n            <section>\\n                <mat-checkbox (change)=\\\"toggleStart($event.checked)\\\" [checked]=\\\"isStartState()\\\" name=\\\"startState\\\">\\n                    Startzustand\\n                </mat-checkbox>\\n                <br />\\n                <mat-checkbox (change)=\\\"toggleFinal($event.checked)\\\" [checked]=\\\"isFinalState()\\\" name=\\\"endState\\\">\\n                    Endzustand\\n                </mat-checkbox>\\n            </section>\\n        </form>\\n\\n        <div class=\\\"action-buttons\\\" mat-dialog-actions>\\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" (click)=\\\"deleteState()\\\" class=\\\"button-delete\\\" color=\\\"warn\\\">\\n                L\\u00F6schen\\n            </button>\\n    \\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" class=\\\"button-ok\\\">\\n                Ok\\n            </button>\\n        </div>\\n    </div>\\n    \\n</div>\", styles: [\".container{width:min-content}.action-buttons{display:flex}.button-delete,.button-ok{flex:1}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }, { type: i2.MatDialogRef }, { type: State, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_DATA]\n                }] }] });","originalLength":17314,"removedExports":[],"renderedExports":["StateEditDialogComponent"],"renderedLength":8446},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/state.mjs":{"code":"class State {\n    get x() {\n        return this.origin.x;\n    }\n    set x(x) {\n        this.origin.x = x;\n    }\n    get y() {\n        return this.origin.y;\n    }\n    set y(y) {\n        this.origin.y = y;\n    }\n    static get circleRadius() {\n        return 30;\n    }\n    get r() {\n        return State.circleRadius;\n    }\n    static get innerCircleRadius() {\n        return State.circleRadius / 2;\n    }\n    constructor(origin, id) {\n        this.innerCircleHovered = false;\n        this.outerCircleHovered = false;\n        this.highlight = false;\n        this.origin = origin;\n        this.name = `S${id}`;\n        this.id = id;\n    }\n    getConnectionPointToState(destination) {\n        return destination.origin.moveToPoint(this.origin, State.circleRadius);\n    }\n    hasConnectionTo(state) {\n        return [...this.transitions].some((transition) => {\n            return transition.destination === state;\n        });\n    }\n    getTransitionTo(state) {\n        // Wenn this.transitions ein Set ist, konvertieren Sie es zu einem Array\n        return [...this.transitions].find((transition) => transition.destination === state);\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            origin: this.origin,\n            name: this.name,\n            transitions: this.transitions,\n        };\n    }\n    openEditDialog(dialog) {\n        return dialog.open(StateEditDialogComponent, { data: this });\n    }\n    addTransition(destination) {\n        // Check if transition already exists.\n        let transition = [...this.transitions].find((transition) => transition.destination == destination);\n        // If transition does not exist, create it.\n        if (transition == undefined) {\n            transition = this.makeTransition(destination);\n            this.transitions = [...this.transitions, transition];\n        }\n        return transition;\n    }\n}","originalLength":8084,"removedExports":[],"renderedExports":["State"],"renderedLength":1868},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/statemachineviewstate.mjs":{"code":"class StateMachineViewState {\n    get boundary() {\n        return this.statemachineviewComponent.svgFieldElementRef.nativeElement.getBoundingClientRect();\n    }\n    constructor(statemachineviewComponent) {\n        this.statemachineviewComponent = statemachineviewComponent;\n    }\n    changeState(state) {\n        this.statemachineviewComponent.changeState(state);\n    }\n    onMouseDown(event) { }\n    onMouseUp(event) { }\n    onMouseMove(event) { }\n    onInnerCircleMouseDown(event, state) { }\n    onInnerCircleMouseUp(event, state) { }\n    onOuterCircleMouseDown(event, state) { }\n    onOuterCircleMouseUp(event, state) { }\n    onEntireCircleMouseDown(event, state) { }\n    onEntireCircleMouseUp(event, state) { }\n    onCircleEnter(event, state) { }\n    onCircleLeave(event, state) { }\n    onInnerCircleEnter(event, state) { }\n    onInnerCircleLeave(event, state) { }\n    onOuterCircleEnter(event, state) { }\n    onOuterCircleLeave(event, state) { }\n    onAdjustableCircleMouseDown(event, transition) { }\n    onAdjustableCircleMouseUp(event, transition) { }\n    showStartConnection(state) { return false; }\n    showEndConnection(state) { return false; }\n    showDrawingTransition() { return false; }\n    drawingTransitionOrigin() { return Point.zero; }\n    drawingTransitionDestination() { return Point.zero; }\n}","originalLength":6455,"removedExports":[],"renderedExports":["StateMachineViewState"],"renderedLength":1313},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/movenodestate.mjs":{"code":"class MoveNodeState extends StateMachineViewState {\n    set movingStateX(value) {\n        this.statemachineviewComponent.zone.run(() => this.movingState.x = value);\n    }\n    set movingStateY(value) {\n        this.statemachineviewComponent.zone.run(() => this.movingState.y = value);\n    }\n    constructor(statemachineviewComponent, movingState) {\n        super(statemachineviewComponent);\n        this.movingState = movingState;\n    }\n    onMouseUp(event) {\n        this.movingState.innerCircleHovered = false;\n        this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\n    }\n    onMouseMove(event) {\n        const boundary = this.boundary;\n        if (event.x > boundary.left + State.circleRadius && event.x < boundary.right - State.circleRadius) {\n            this.movingStateX = event.clientX - boundary.left;\n        }\n        if (event.y > boundary.top + State.circleRadius && event.y < boundary.bottom - State.circleRadius) {\n            this.movingStateY = event.clientY - boundary.top;\n        }\n    }\n}","originalLength":5139,"removedExports":[],"renderedExports":["MoveNodeState"],"renderedLength":1055},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/transtioneditstate.mjs":{"code":"class TransitionEditState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transitionFrom, transitionTo, dummyTransition) {\n        super(statemachineviewComponent);\n        this.transitionFrom = transitionFrom;\n        this.transitionTo = transitionTo;\n        this.dummyTransition = dummyTransition;\n        const transitionState = new DefaultState(this.statemachineviewComponent);\n        const dialogRef = this.statemachineviewComponent\n            .statemachineService\n            .openTransitionEditDialog(this.transitionFrom, this.transitionTo, this.statemachineviewComponent.dialog);\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.dummyTransition.delete();\n            }\n            this.statemachineviewComponent.changeState(transitionState);\n            this.transitionFrom.outerCircleHovered = false;\n            this.transitionTo.outerCircleHovered = false;\n            this.transitionTo.outerCircleHovered = false;\n        });\n    }\n    onMouseUp(event) { }\n    onCircleLeave(event, state) { }\n    showDrawingTransition() { return false; }\n    showStartConnection(state) {\n        return this.transitionFrom === state;\n    }\n    showEndConnection(state) {\n        return this.transitionTo === state;\n    }\n}","originalLength":5802,"removedExports":[],"renderedExports":["TransitionEditState"],"renderedLength":1300},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/transitiontostate.mjs":{"code":"class TransitionToState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transitionFrom, transitionTo) {\n        super(statemachineviewComponent);\n        this.transitionFrom = transitionFrom;\n        this.transitionTo = transitionTo;\n        this.dummyTransition = transitionFrom.addTransition(transitionTo);\n    }\n    onMouseUp(event) {\n        const transitionState = new TransitionEditState(this.statemachineviewComponent, this.transitionFrom, this.transitionTo, this.dummyTransition);\n        this.statemachineviewComponent.changeState(transitionState);\n    }\n    onCircleLeave(event, state) {\n        if (this.dummyTransition.isEmpty()) {\n            this.dummyTransition.delete();\n        }\n        const transitionState = new TransitionFromState(this.statemachineviewComponent, this.transitionFrom);\n        this.statemachineviewComponent.changeState(transitionState);\n    }\n    showStartConnection(state) {\n        return this.transitionFrom === state;\n    }\n    showEndConnection(state) {\n        return this.transitionTo === state;\n    }\n}","originalLength":5380,"removedExports":[],"renderedExports":["TransitionToState"],"renderedLength":1076},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/transtionnewstateeditstate.mjs":{"code":"class TransitionNewStateEditState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transitionFrom, transitionTo) {\n        super(statemachineviewComponent);\n        this.transitionFrom = transitionFrom;\n        this.transitionTo = transitionTo;\n        this.dummyTransition = transitionFrom.addTransition(transitionTo);\n        const dialogRef = this.statemachineviewComponent\n            .statemachineService\n            .openTransitionEditDialog(this.transitionFrom, this.transitionTo, this.statemachineviewComponent.dialog);\n        dialogRef.afterClosed().subscribe(transitionIsEmpty => {\n            if (transitionIsEmpty) {\n                this.statemachineviewComponent.statemachineService.deleteState(this.transitionTo);\n            }\n            this.transitionFrom.outerCircleHovered = false;\n            this.transitionTo.outerCircleHovered = false;\n            this.transitionTo.innerCircleHovered = false;\n            this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\n        });\n    }\n    showStartConnection(state) {\n        return this.transitionFrom === state;\n    }\n    showEndConnection(state) {\n        return this.transitionTo === state;\n    }\n}","originalLength":5522,"removedExports":[],"renderedExports":["TransitionNewStateEditState"],"renderedLength":1236},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/transitionfromstate.mjs":{"code":"class TransitionFromState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transitionFrom) {\n        super(statemachineviewComponent);\n        this.drawingDestination = Point.zero;\n        this.transitionFrom = transitionFrom;\n    }\n    onMouseUp(event) {\n        const newState = this.statemachineviewComponent.statemachineService.addState(this.drawingDestination.x, this.drawingDestination.y);\n        const transitionState = new TransitionNewStateEditState(this.statemachineviewComponent, this.transitionFrom, newState);\n        this.statemachineviewComponent.changeState(transitionState);\n    }\n    onEntireCircleMouseDown(event, state) {\n        const boundary = this.boundary;\n        this.drawingDestination.x = event.clientX - boundary.left;\n        this.drawingDestination.y = event.clientY - boundary.top;\n    }\n    onCircleEnter(event, state) {\n        const transitionToState = new TransitionToState(this.statemachineviewComponent, this.transitionFrom, state);\n        this.changeState(transitionToState);\n    }\n    onEntireCircleMouseUp(event, state) {\n        this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\n    }\n    onMouseMove(event) {\n        const boundary = this.boundary;\n        this.drawingDestination.x = event.clientX - boundary.left;\n        this.drawingDestination.y = event.clientY - boundary.top;\n    }\n    drawingTransitionOrigin() {\n        return this.transitionFrom.origin;\n    }\n    drawingTransitionDestination() {\n        return this.drawingDestination.moveToPoint(this.transitionFrom.origin, Arrow.transition.width * 2);\n    }\n    showStartConnection(state) {\n        return this.transitionFrom === state;\n    }\n    showDrawingTransition() {\n        return true;\n    }\n}","originalLength":8562,"removedExports":[],"renderedExports":["TransitionFromState"],"renderedLength":1779},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/movetransitionstate.mjs":{"code":"class MoveTransitionState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transition) {\n        super(statemachineviewComponent);\n        this.transition = transition;\n    }\n    onMouseMove(event) {\n        const svgElement = this.statemachineviewComponent.svgFieldElementRef.nativeElement;\n        const svgRect = svgElement.getBoundingClientRect();\n        const newX = event.clientX - svgRect.left;\n        const newY = event.clientY - svgRect.top;\n        this.transition.centerPoint = new Point(newX, newY);\n    }\n    onMouseUp(event) {\n        const defaultState = new DefaultState(this.statemachineviewComponent);\n        this.statemachineviewComponent.changeState(defaultState);\n    }\n    onAdjustableCircleMouseUp(event, transition) {\n        const defaultState = new DefaultState(this.statemachineviewComponent);\n        this.statemachineviewComponent.changeState(defaultState);\n    }\n}","originalLength":4625,"removedExports":[],"renderedExports":["MoveTransitionState"],"renderedLength":923},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/interactionstate/defaultstate.mjs":{"code":"class DefaultState extends StateMachineViewState {\n    onInnerCircleMouseDown(event, state) {\n        state.innerCircleHovered = true;\n        const moveNodeState = new MoveNodeState(this.statemachineviewComponent, state);\n        this.statemachineviewComponent.changeState(moveNodeState);\n    }\n    onOuterCircleMouseDown(event, state) {\n        const transitionState = new TransitionFromState(this.statemachineviewComponent, state);\n        this.statemachineviewComponent.changeState(transitionState);\n    }\n    onInnerCircleEnter(event, state) {\n        this.statemachineviewComponent.zone.run(() => state.innerCircleHovered = true);\n    }\n    onInnerCircleLeave(event, state) {\n        this.statemachineviewComponent.zone.run(() => state.innerCircleHovered = false);\n    }\n    onOuterCircleEnter(event, state) {\n        this.statemachineviewComponent.zone.run(() => state.outerCircleHovered = true);\n    }\n    onOuterCircleLeave(event, state) {\n        this.statemachineviewComponent.zone.run(() => state.outerCircleHovered = false);\n    }\n    onAdjustableCircleMouseDown(event, transition) {\n        const moveTransitionState = new MoveTransitionState(this.statemachineviewComponent, transition);\n        this.statemachineviewComponent.changeState(moveTransitionState);\n    }\n}","originalLength":6232,"removedExports":[],"renderedExports":["DefaultState"],"renderedLength":1282},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachineview/statemachineview.component.mjs":{"code":"// Angular imports\nclass StatemachineviewComponent {\n    constructor(statemachineService, dialog, zone) {\n        this.statemachineService = statemachineService;\n        this.dialog = dialog;\n        this.zone = zone;\n        this.START_TRANSITION_ARROW_LENGTH = 55;\n        this.ARROW_LENGTH = 5;\n        this.circleRadius = State.circleRadius;\n        this.stateMachineViewState = new DefaultState(this);\n    }\n    get outerCircleRadius() {\n        return this.circleRadius + 15;\n    }\n    ngOnInit() {\n        this.addEventListeners();\n    }\n    ngOnDestroy() {\n        this.removeEventListeners();\n    }\n    onRightClick(event) {\n        event.preventDefault();\n    }\n    addEventListeners() {\n        this.mouseMoveListener = this.onMouseMove.bind(this);\n        document.addEventListener('mousemove', this.mouseMoveListener);\n        this.mouseUpListener = this.onMouseUp.bind(this);\n        document.addEventListener('mouseup', this.mouseUpListener);\n    }\n    removeEventListeners() {\n        document.removeEventListener('mousemove', this.mouseMoveListener);\n        document.removeEventListener('mouseup', this.mouseUpListener);\n    }\n    onMouseMove(event) {\n        this.stateMachineViewState.onMouseMove(event);\n    }\n    onMouseUp(event) {\n        this.stateMachineViewState.onMouseUp(event);\n    }\n    onInnerCircleMouseDown(event, state) {\n        this.stateMachineViewState.onInnerCircleMouseDown(event, state);\n    }\n    onInnerCircleMouseUp(event, state) {\n        this.stateMachineViewState.onInnerCircleMouseUp(event, state);\n    }\n    onOuterCircleMouseDown(event, state) {\n        this.stateMachineViewState.onOuterCircleMouseDown(event, state);\n    }\n    onOuterCircleMouseUp(event, state) {\n        this.stateMachineViewState.onOuterCircleMouseUp(event, state);\n    }\n    onEntireCircleMouseDown(event, state) {\n        this.stateMachineViewState.onEntireCircleMouseDown(event, state);\n    }\n    onEntireCircleMouseUp(event, state) {\n        this.stateMachineViewState.onEntireCircleMouseUp(event, state);\n    }\n    onCircleEnter(event, state) {\n        this.stateMachineViewState.onCircleEnter(event, state);\n    }\n    onCircleLeave(event, state) {\n        this.stateMachineViewState.onCircleLeave(event, state);\n    }\n    onInnerCircleEnter(event, state) {\n        this.stateMachineViewState.onInnerCircleEnter(event, state);\n    }\n    onInnerCircleLeave(event, state) {\n        this.stateMachineViewState.onInnerCircleLeave(event, state);\n    }\n    onOuterCircleEnter(event, state) {\n        this.stateMachineViewState.onOuterCircleEnter(event, state);\n    }\n    onOuterCircleLeave(event, state) {\n        this.stateMachineViewState.onOuterCircleLeave(event, state);\n    }\n    onAdjustableCircleMouseDown(event, transition) {\n        this.stateMachineViewState.onAdjustableCircleMouseDown(event, transition);\n    }\n    onAdjustableCircleMouseUp(event, transition) {\n        this.stateMachineViewState.onAdjustableCircleMouseUp(event, transition);\n    }\n    /// Returns true, if the transition from the given state is currently being drawn.\n    showStartConnection(state) {\n        return this.stateMachineViewState.showStartConnection(state);\n    }\n    /// Returns true, if the transition to the given state is currently being drawn.\n    showEndConnection(state) {\n        return this.stateMachineViewState.showEndConnection(state);\n    }\n    showDrawingTransition() {\n        return this.stateMachineViewState.showDrawingTransition();\n    }\n    drawingTransitionOrigin() {\n        return this.stateMachineViewState.drawingTransitionOrigin();\n    }\n    drawingTransitionDestination() {\n        return this.stateMachineViewState.drawingTransitionDestination();\n    }\n    get arrow() {\n        return Arrow.transition;\n    }\n    get transitions() {\n        return this.statemachineService.transitions;\n    }\n    editTransition(transition, event) {\n        event.preventDefault();\n        const source = transition.source;\n        const destination = transition.destination;\n        const dialogRef = this.statemachineService.openTransitionEditDialog(source, destination, this.dialog);\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                transition.delete();\n            }\n        });\n    }\n    openStateEditDialog(state, event) {\n        event.preventDefault();\n        this.statemachineService.openStateEditDialog(state, this.dialog);\n    }\n    drawState(event) {\n        const x = (event.clientX - event.target.getBoundingClientRect().left);\n        const y = (event.clientY - event.target.getBoundingClientRect().top);\n        this.statemachineService.addState(x, y);\n    }\n    getStates() {\n        return this.statemachineService.states;\n    }\n    isFinalState(state) {\n        return this.statemachineService.isFinalState(state);\n    }\n    isStartState(state) {\n        return this.statemachineService.isStartState(state);\n    }\n    isActiveState(state) {\n        return this.statemachineService.isActiveState(state);\n    }\n    get showDeterministicStates() {\n        return this.statemachineService.showDeterministicStates;\n    }\n    changeState(state) {\n        this.stateMachineViewState = state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineviewComponent, deps: [{ token: StatemachineService }, { token: i2.MatDialog }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: StatemachineviewComponent, isStandalone: true, selector: \"app-statemachineview\", viewQueries: [{ propertyName: \"svgFieldElementRef\", first: true, predicate: [\"svgField\"], descendants: true }], ngImport: i0, template: \"<svg id=\\\"svg-field\\\" #svgField>\\n\\n    <marker\\n    id=\\\"startStateArrowHead\\\"\\n    markerWidth=\\\"10\\\"\\n    markerHeight=\\\"7\\\"\\n    refX=\\\"6\\\"\\n    refY=\\\"2.5\\\"\\n    orient=\\\"auto\\\"\\n    fill=\\\"black\\\"\\n    >\\n    <polygon points=\\\"0 0, 7.5 2.5, 0 5\\\" />\\n    </marker>\\n\\n    <!-- Responds to double-click events on empty canvas areas -->\\n    <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"transparent\\\" (dblclick)=\\\"drawState($event)\\\"></rect>\\n\\n    <!-- Draw straight arrow from one point to another if a transition is being drawn -->\\n    <line\\n    *ngIf=\\\"showDrawingTransition()\\\"\\n    [attr.x1]=\\\"drawingTransitionOrigin().x\\\"\\n    [attr.y1]=\\\"drawingTransitionOrigin().y\\\"\\n    [attr.x2]=\\\"drawingTransitionDestination().x\\\"\\n    [attr.y2]=\\\"drawingTransitionDestination().y\\\"\\n    marker-end=\\\"url(#arrowhead)\\\"\\n    stroke=\\\"black\\\"\\n    style=\\\"stroke-width: 2px;\\\"\\n    ></line>\\n\\n    <marker\\n            id=\\\"arrowhead\\\"\\n            [attr.markerWidth]=\\\"arrow.width\\\"\\n            [attr.markerHeight]=\\\"arrow.height\\\"\\n            [attr.refX]=\\\"arrow.refX\\\"\\n            [attr.refY]=\\\"arrow.refY\\\"\\n            orient=\\\"auto\\\"\\n            fill=\\\"black\\\"\\n            markerUnits=\\\"userSpaceOnUse\\\"\\n    >\\n        <polygon [attr.points]=\\\"arrow.path()\\\" />\\n    </marker>\\n\\n    <g *ngFor=\\\"let state of getStates()\\\">\\n        <circle\\n        *ngIf=\\\"(!state.isDeterministic() && showDeterministicStates) || state.highlight\\\"\\n        [ngClass]=\\\"{\\n            'deterministic': !state.isDeterministic() && showDeterministicStates,\\n            'highlightState': state.highlight\\n          }\\\"\\n        [attr.r]=\\\"outerCircleRadius\\\"\\n        [attr.cx]=\\\"state.origin.x\\\"\\n        [attr.cy]=\\\"state.origin.y\\\"\\n        />\\n\\n        <g\\n        (mouseup)=\\\"onEntireCircleMouseUp($event, state)\\\"\\n        (mousedown)=\\\"onEntireCircleMouseDown($event, state)\\\"\\n        (mouseenter)=\\\"onCircleEnter($event, state)\\\"\\n        (mouseleave)=\\\"onCircleLeave($event, state)\\\"\\n        >\\n            <g\\n            [ngClass]=\\\"{\\n                outerCircle: true,\\n                isActive: isActiveState(state),\\n                startConnection: showStartConnection(state) || state.outerCircleHovered,\\n                endConnection: showEndConnection(state)\\n            }\\\"\\n            (mouseup)=\\\"onOuterCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onOuterCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onOuterCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onOuterCircleLeave($event, state)\\\"\\n            >\\n                <circle\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\"\\n                [attr.r]=\\\"state.r\\\">\\n                </circle>\\n\\n                <circle\\n                *ngIf=\\\"isFinalState(state)\\\"\\n                [attr.r]=\\\"state.r - 5\\\"\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\">\\n                </circle>\\n            </g>\\n\\n            <circle\\n            [ngClass]=\\\"{\\n                innerCircle: true,\\n                isActive: isActiveState(state),\\n                endConnection: showEndConnection(state) || state.innerCircleHovered\\n            }\\\"\\n            [attr.cx]=\\\"state.x\\\"\\n            [attr.cy]=\\\"state.y\\\"\\n            [attr.r]=\\\"state.r * 0.5\\\"\\n            (mouseup)=\\\"onInnerCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onInnerCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onInnerCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onInnerCircleLeave($event, state)\\\"\\n            (contextmenu)=\\\"openStateEditDialog(state, $event)\\\"\\n            >\\n            </circle>\\n        </g>\\n\\n        <text\\n        text-anchor=\\\"middle\\\"\\n        dominant-baseline=\\\"middle\\\"\\n        [attr.x]=\\\"state.x\\\"\\n        [attr.y]=\\\"state.y\\\"\\n        >\\n        {{ state.name }}\\n        </text>\\n\\n        <line\\n        *ngIf=\\\"isStartState(state)\\\"\\n        [attr.x1]=\\\"state.origin.x - state.r - START_TRANSITION_ARROW_LENGTH\\\"\\n        [attr.x2]=\\\"state.origin.x - state.r - ARROW_LENGTH\\\"\\n        [attr.y1]=\\\"state.origin.y\\\"\\n        [attr.y2]=\\\"state.origin.y\\\"\\n        marker-end=\\\"url(#startStateArrowHead)\\\"\\n        ></line>\\n    </g>\\n\\n    <g *ngFor=\\\"let transition of transitions; let i = index\\\">\\n\\n        <path\\n            [attr.d]=\\\"transition.arrow()\\\"\\n            fill=\\\"black\\\"\\n        ></path>\\n\\n        <path\\n            [attr.d]=\\\"transition.path()\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path\\n            class=\\\"invisiblePathClickable\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            [attr.d]=\\\"transition.path()\\\"\\n            [id]=\\\"'transition'+ i\\\"\\n            (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path *ngIf=\\\"transition.highlight\\\"\\n              class=\\\"highlightPath\\\"\\n          fill=\\\"none\\\"\\n          [attr.d]=\\\"transition.path()\\\"\\n          [id]=\\\"'transition'+ i\\\"\\n          (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n          (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n          (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <text\\n            *ngFor=\\\"let label of transition.labels(); let j = index\\\"\\n            [attr.x]=\\\"label.x\\\"\\n            [attr.y]=\\\"label.y\\\"\\n            [attr.font-family]=\\\"transition.fontFamily\\\"\\n            [attr.font-size]=\\\"transition.fontSize\\\"\\n            dominant-baseline=\\\"middle\\\"\\n            text-anchor=\\\"start\\\"\\n            >\\n            {{ label.text }}\\n        </text>\\n    </g>\\n</svg>\\n\\n\\n\\n\", styles: [\":host{position:relative}#svg-field{width:100%;height:100%}.toggleTestcaseView{position:absolute;top:10px;right:10px;cursor:pointer}.innerCircle{cursor:grab;stroke:transparent;fill:#fff}.outerCircle{stroke-width:2px;stroke:#000;fill:#fff}.isActive{fill:#34ec34}.startConnection,.endConnection{fill:green}text{pointer-events:none;-webkit-user-select:none;user-select:none}.transition-midpoint-indicator{opacity:0}.transition-midpoint-indicator.visible{opacity:1}.invisiblePathClickable{stroke:green;opacity:0;stroke-width:10px;cursor:move}.invisiblePathClickable:hover,.highlightPath{stroke:green;opacity:.5;stroke-width:10px}line{pointer-events:none;stroke:#000;stroke-width:3px}circle{stroke:#000;stroke-width:2px}.deterministic{fill:brown;stroke-width:0px;opacity:50%}.highlightState{fill:green;stroke-width:0px;opacity:50%}.sticky-header{position:sticky;top:0;left:0;right:0;z-index:1000;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);box-shadow:0 4px 8px #0000001a}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineviewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-statemachineview', standalone: true, imports: [CommonModule], template: \"<svg id=\\\"svg-field\\\" #svgField>\\n\\n    <marker\\n    id=\\\"startStateArrowHead\\\"\\n    markerWidth=\\\"10\\\"\\n    markerHeight=\\\"7\\\"\\n    refX=\\\"6\\\"\\n    refY=\\\"2.5\\\"\\n    orient=\\\"auto\\\"\\n    fill=\\\"black\\\"\\n    >\\n    <polygon points=\\\"0 0, 7.5 2.5, 0 5\\\" />\\n    </marker>\\n\\n    <!-- Responds to double-click events on empty canvas areas -->\\n    <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"transparent\\\" (dblclick)=\\\"drawState($event)\\\"></rect>\\n\\n    <!-- Draw straight arrow from one point to another if a transition is being drawn -->\\n    <line\\n    *ngIf=\\\"showDrawingTransition()\\\"\\n    [attr.x1]=\\\"drawingTransitionOrigin().x\\\"\\n    [attr.y1]=\\\"drawingTransitionOrigin().y\\\"\\n    [attr.x2]=\\\"drawingTransitionDestination().x\\\"\\n    [attr.y2]=\\\"drawingTransitionDestination().y\\\"\\n    marker-end=\\\"url(#arrowhead)\\\"\\n    stroke=\\\"black\\\"\\n    style=\\\"stroke-width: 2px;\\\"\\n    ></line>\\n\\n    <marker\\n            id=\\\"arrowhead\\\"\\n            [attr.markerWidth]=\\\"arrow.width\\\"\\n            [attr.markerHeight]=\\\"arrow.height\\\"\\n            [attr.refX]=\\\"arrow.refX\\\"\\n            [attr.refY]=\\\"arrow.refY\\\"\\n            orient=\\\"auto\\\"\\n            fill=\\\"black\\\"\\n            markerUnits=\\\"userSpaceOnUse\\\"\\n    >\\n        <polygon [attr.points]=\\\"arrow.path()\\\" />\\n    </marker>\\n\\n    <g *ngFor=\\\"let state of getStates()\\\">\\n        <circle\\n        *ngIf=\\\"(!state.isDeterministic() && showDeterministicStates) || state.highlight\\\"\\n        [ngClass]=\\\"{\\n            'deterministic': !state.isDeterministic() && showDeterministicStates,\\n            'highlightState': state.highlight\\n          }\\\"\\n        [attr.r]=\\\"outerCircleRadius\\\"\\n        [attr.cx]=\\\"state.origin.x\\\"\\n        [attr.cy]=\\\"state.origin.y\\\"\\n        />\\n\\n        <g\\n        (mouseup)=\\\"onEntireCircleMouseUp($event, state)\\\"\\n        (mousedown)=\\\"onEntireCircleMouseDown($event, state)\\\"\\n        (mouseenter)=\\\"onCircleEnter($event, state)\\\"\\n        (mouseleave)=\\\"onCircleLeave($event, state)\\\"\\n        >\\n            <g\\n            [ngClass]=\\\"{\\n                outerCircle: true,\\n                isActive: isActiveState(state),\\n                startConnection: showStartConnection(state) || state.outerCircleHovered,\\n                endConnection: showEndConnection(state)\\n            }\\\"\\n            (mouseup)=\\\"onOuterCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onOuterCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onOuterCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onOuterCircleLeave($event, state)\\\"\\n            >\\n                <circle\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\"\\n                [attr.r]=\\\"state.r\\\">\\n                </circle>\\n\\n                <circle\\n                *ngIf=\\\"isFinalState(state)\\\"\\n                [attr.r]=\\\"state.r - 5\\\"\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\">\\n                </circle>\\n            </g>\\n\\n            <circle\\n            [ngClass]=\\\"{\\n                innerCircle: true,\\n                isActive: isActiveState(state),\\n                endConnection: showEndConnection(state) || state.innerCircleHovered\\n            }\\\"\\n            [attr.cx]=\\\"state.x\\\"\\n            [attr.cy]=\\\"state.y\\\"\\n            [attr.r]=\\\"state.r * 0.5\\\"\\n            (mouseup)=\\\"onInnerCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onInnerCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onInnerCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onInnerCircleLeave($event, state)\\\"\\n            (contextmenu)=\\\"openStateEditDialog(state, $event)\\\"\\n            >\\n            </circle>\\n        </g>\\n\\n        <text\\n        text-anchor=\\\"middle\\\"\\n        dominant-baseline=\\\"middle\\\"\\n        [attr.x]=\\\"state.x\\\"\\n        [attr.y]=\\\"state.y\\\"\\n        >\\n        {{ state.name }}\\n        </text>\\n\\n        <line\\n        *ngIf=\\\"isStartState(state)\\\"\\n        [attr.x1]=\\\"state.origin.x - state.r - START_TRANSITION_ARROW_LENGTH\\\"\\n        [attr.x2]=\\\"state.origin.x - state.r - ARROW_LENGTH\\\"\\n        [attr.y1]=\\\"state.origin.y\\\"\\n        [attr.y2]=\\\"state.origin.y\\\"\\n        marker-end=\\\"url(#startStateArrowHead)\\\"\\n        ></line>\\n    </g>\\n\\n    <g *ngFor=\\\"let transition of transitions; let i = index\\\">\\n\\n        <path\\n            [attr.d]=\\\"transition.arrow()\\\"\\n            fill=\\\"black\\\"\\n        ></path>\\n\\n        <path\\n            [attr.d]=\\\"transition.path()\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path\\n            class=\\\"invisiblePathClickable\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            [attr.d]=\\\"transition.path()\\\"\\n            [id]=\\\"'transition'+ i\\\"\\n            (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path *ngIf=\\\"transition.highlight\\\"\\n              class=\\\"highlightPath\\\"\\n          fill=\\\"none\\\"\\n          [attr.d]=\\\"transition.path()\\\"\\n          [id]=\\\"'transition'+ i\\\"\\n          (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n          (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n          (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <text\\n            *ngFor=\\\"let label of transition.labels(); let j = index\\\"\\n            [attr.x]=\\\"label.x\\\"\\n            [attr.y]=\\\"label.y\\\"\\n            [attr.font-family]=\\\"transition.fontFamily\\\"\\n            [attr.font-size]=\\\"transition.fontSize\\\"\\n            dominant-baseline=\\\"middle\\\"\\n            text-anchor=\\\"start\\\"\\n            >\\n            {{ label.text }}\\n        </text>\\n    </g>\\n</svg>\\n\\n\\n\\n\", styles: [\":host{position:relative}#svg-field{width:100%;height:100%}.toggleTestcaseView{position:absolute;top:10px;right:10px;cursor:pointer}.innerCircle{cursor:grab;stroke:transparent;fill:#fff}.outerCircle{stroke-width:2px;stroke:#000;fill:#fff}.isActive{fill:#34ec34}.startConnection,.endConnection{fill:green}text{pointer-events:none;-webkit-user-select:none;user-select:none}.transition-midpoint-indicator{opacity:0}.transition-midpoint-indicator.visible{opacity:1}.invisiblePathClickable{stroke:green;opacity:0;stroke-width:10px;cursor:move}.invisiblePathClickable:hover,.highlightPath{stroke:green;opacity:.5;stroke-width:10px}line{pointer-events:none;stroke:#000;stroke-width:3px}circle{stroke:#000;stroke-width:2px}.deterministic{fill:brown;stroke-width:0px;opacity:50%}.highlightState{fill:green;stroke-width:0px;opacity:50%}.sticky-header{position:sticky;top:0;left:0;right:0;z-index:1000;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);box-shadow:0 4px 8px #0000001a}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }, { type: i2.MatDialog }, { type: i0.NgZone }], propDecorators: { svgFieldElementRef: [{\n                type: ViewChild,\n                args: ['svgField']\n            }] } });","originalLength":45778,"removedExports":[],"renderedExports":["StatemachineviewComponent"],"renderedLength":20801},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/core.component.mjs":{"code":"class CoreComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: CoreComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: CoreComponent, isStandalone: true, selector: \"app-core\", ngImport: i0, template: \"<app-statemachineview class=\\\"graph\\\"></app-statemachineview>\", styles: [\":host{flex-grow:1;display:flex}.graph{flex-grow:1;flex-basis:0;min-width:500px}\\n\"], dependencies: [{ kind: \"component\", type: StatemachineviewComponent, selector: \"app-statemachineview\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: CoreComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-core', standalone: true, imports: [StatemachineviewComponent], template: \"<app-statemachineview class=\\\"graph\\\"></app-statemachineview>\", styles: [\":host{flex-grow:1;display:flex}.graph{flex-grow:1;flex-basis:0;min-width:500px}\\n\"] }]\n        }] });","originalLength":2488,"removedExports":[],"renderedExports":["CoreComponent"],"renderedLength":1087},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/footer/footer.component.mjs":{"code":"class FooterComponent {\n    getCurrentYear(startYear) {\n        const currentYear = new Date().getFullYear();\n        return startYear == currentYear\n            ? currentYear + ''\n            : startYear + ' - ' + currentYear;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: FooterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: FooterComponent, isStandalone: true, selector: \"app-footer\", ngImport: i0, template: \"<footer>\\n    <span\\n    ><span>\\u00A9 {{ getCurrentYear(2023) }}</span>\\n        <span class=\\\"wh-text\\\">Westf\\u00E4lische Hochschule</span> Gelsenkirchen</span\\n    >\\n  <span class=\\\"infoLinks\\\">\\n        <a href=\\\"https://www.w-hs.de/service/impressum/\\\" target=\\\"_blank\\\"\\n        >Impressum</a\\n        >\\n        <a href=\\\"https://pi-lab2.w-hs.de/THI/Datenschutz.html\\\" target=\\\"_blank\\\"\\n        >Datenschutz</a\\n        >\\n        <a\\n          href=\\\"https://pi-lab2.w-hs.de/THI/Barrierefreiheit.html\\\"\\n          target=\\\"_blank\\\"\\n        >Barrierefreiheit</a\\n        >\\n    </span>\\n</footer>\\n\", styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0,0,.2,1);transform:scale3d(0,0,0);background-color:var(--mat-ripple-color, rgba(0, 0, 0, .1))}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:#00000052}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0!important;box-sizing:content-box!important;height:auto!important;overflow:hidden!important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0!important;box-sizing:content-box!important;height:0!important}@keyframes cdk-text-field-autofill-start{}@keyframes cdk-text-field-autofill-end{}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}.mat-focus-indicator{position:relative}.mat-focus-indicator:before{inset:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border:var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus:before{content:\\\"\\\"}.cdk-high-contrast-active{--mat-focus-indicator-display: block}.mat-mdc-focus-indicator{position:relative}.mat-mdc-focus-indicator:before{inset:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-mdc-focus-indicator-display, none);border:var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);border-radius:var(--mat-mdc-focus-indicator-border-radius, 4px)}.mat-mdc-focus-indicator:focus:before{content:\\\"\\\"}.cdk-high-contrast-active{--mat-mdc-focus-indicator-display: block}.mat-app-background{background-color:var(--mat-app-background-color, transparent);color:var(--mat-app-text-color, inherit)}html{--mat-ripple-color: rgba(0, 0, 0, .1)}html{--mat-option-selected-state-label-text-color: #4caf50;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}.mat-accent{--mat-option-selected-state-label-text-color: #ff4081;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}.mat-warn{--mat-option-selected-state-label-text-color: #f44336;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}html{--mat-optgroup-label-text-color: rgba(0, 0, 0, .87)}.mat-primary{--mat-full-pseudo-checkbox-selected-icon-color: #4caf50;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #4caf50;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}html,.mat-accent{--mat-full-pseudo-checkbox-selected-icon-color: #ff4081;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #ff4081;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}.mat-warn{--mat-full-pseudo-checkbox-selected-icon-color: #f44336;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #f44336;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}html{--mat-app-background-color: #fafafa;--mat-app-text-color: rgba(0, 0, 0, .87)}.mat-elevation-z0,.mat-mdc-elevation-specific.mat-elevation-z0{box-shadow:0 0 #0003,0 0 #00000024,0 0 #0000001f}.mat-elevation-z1,.mat-mdc-elevation-specific.mat-elevation-z1{box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}.mat-elevation-z2,.mat-mdc-elevation-specific.mat-elevation-z2{box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f}.mat-elevation-z3,.mat-mdc-elevation-specific.mat-elevation-z3{box-shadow:0 3px 3px -2px #0003,0 3px 4px #00000024,0 1px 8px #0000001f}.mat-elevation-z4,.mat-mdc-elevation-specific.mat-elevation-z4{box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f}.mat-elevation-z5,.mat-mdc-elevation-specific.mat-elevation-z5{box-shadow:0 3px 5px -1px #0003,0 5px 8px #00000024,0 1px 14px #0000001f}.mat-elevation-z6,.mat-mdc-elevation-specific.mat-elevation-z6{box-shadow:0 3px 5px -1px #0003,0 6px 10px #00000024,0 1px 18px #0000001f}.mat-elevation-z7,.mat-mdc-elevation-specific.mat-elevation-z7{box-shadow:0 4px 5px -2px #0003,0 7px 10px 1px #00000024,0 2px 16px 1px #0000001f}.mat-elevation-z8,.mat-mdc-elevation-specific.mat-elevation-z8{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.mat-elevation-z9,.mat-mdc-elevation-specific.mat-elevation-z9{box-shadow:0 5px 6px -3px #0003,0 9px 12px 1px #00000024,0 3px 16px 2px #0000001f}.mat-elevation-z10,.mat-mdc-elevation-specific.mat-elevation-z10{box-shadow:0 6px 6px -3px #0003,0 10px 14px 1px #00000024,0 4px 18px 3px #0000001f}.mat-elevation-z11,.mat-mdc-elevation-specific.mat-elevation-z11{box-shadow:0 6px 7px -4px #0003,0 11px 15px 1px #00000024,0 4px 20px 3px #0000001f}.mat-elevation-z12,.mat-mdc-elevation-specific.mat-elevation-z12{box-shadow:0 7px 8px -4px #0003,0 12px 17px 2px #00000024,0 5px 22px 4px #0000001f}.mat-elevation-z13,.mat-mdc-elevation-specific.mat-elevation-z13{box-shadow:0 7px 8px -4px #0003,0 13px 19px 2px #00000024,0 5px 24px 4px #0000001f}.mat-elevation-z14,.mat-mdc-elevation-specific.mat-elevation-z14{box-shadow:0 7px 9px -4px #0003,0 14px 21px 2px #00000024,0 5px 26px 4px #0000001f}.mat-elevation-z15,.mat-mdc-elevation-specific.mat-elevation-z15{box-shadow:0 8px 9px -5px #0003,0 15px 22px 2px #00000024,0 6px 28px 5px #0000001f}.mat-elevation-z16,.mat-mdc-elevation-specific.mat-elevation-z16{box-shadow:0 8px 10px -5px #0003,0 16px 24px 2px #00000024,0 6px 30px 5px #0000001f}.mat-elevation-z17,.mat-mdc-elevation-specific.mat-elevation-z17{box-shadow:0 8px 11px -5px #0003,0 17px 26px 2px #00000024,0 6px 32px 5px #0000001f}.mat-elevation-z18,.mat-mdc-elevation-specific.mat-elevation-z18{box-shadow:0 9px 11px -5px #0003,0 18px 28px 2px #00000024,0 7px 34px 6px #0000001f}.mat-elevation-z19,.mat-mdc-elevation-specific.mat-elevation-z19{box-shadow:0 9px 12px -6px #0003,0 19px 29px 2px #00000024,0 7px 36px 6px #0000001f}.mat-elevation-z20,.mat-mdc-elevation-specific.mat-elevation-z20{box-shadow:0 10px 13px -6px #0003,0 20px 31px 3px #00000024,0 8px 38px 7px #0000001f}.mat-elevation-z21,.mat-mdc-elevation-specific.mat-elevation-z21{box-shadow:0 10px 13px -6px #0003,0 21px 33px 3px #00000024,0 8px 40px 7px #0000001f}.mat-elevation-z22,.mat-mdc-elevation-specific.mat-elevation-z22{box-shadow:0 10px 14px -6px #0003,0 22px 35px 3px #00000024,0 8px 42px 7px #0000001f}.mat-elevation-z23,.mat-mdc-elevation-specific.mat-elevation-z23{box-shadow:0 11px 14px -7px #0003,0 23px 36px 3px #00000024,0 9px 44px 8px #0000001f}.mat-elevation-z24,.mat-mdc-elevation-specific.mat-elevation-z24{box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}.mat-theme-loaded-marker{display:none}html{--mdc-elevated-card-container-shape: 4px;--mdc-outlined-card-container-shape: 4px;--mdc-outlined-card-outline-width: 1px}html{--mdc-elevated-card-container-color: white;--mdc-elevated-card-container-elevation: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mdc-outlined-card-container-color: white;--mdc-outlined-card-outline-color: rgba(0, 0, 0, .12);--mdc-outlined-card-container-elevation: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mat-card-subtitle-text-color: rgba(0, 0, 0, .54)}html{--mdc-linear-progress-active-indicator-height: 4px;--mdc-linear-progress-track-height: 4px;--mdc-linear-progress-track-shape: 0}.mat-mdc-progress-bar{--mdc-linear-progress-active-indicator-color: #4caf50;--mdc-linear-progress-track-color: rgba(76, 175, 80, .25)}.mat-mdc-progress-bar.mat-accent{--mdc-linear-progress-active-indicator-color: #ff4081;--mdc-linear-progress-track-color: rgba(255, 64, 129, .25)}.mat-mdc-progress-bar.mat-warn{--mdc-linear-progress-active-indicator-color: #f44336;--mdc-linear-progress-track-color: rgba(244, 67, 54, .25)}html{--mdc-plain-tooltip-container-shape: 4px;--mdc-plain-tooltip-supporting-text-line-height: 16px}html{--mdc-plain-tooltip-container-color: #616161;--mdc-plain-tooltip-supporting-text-color: #fff}html{--mdc-filled-text-field-active-indicator-height: 1px;--mdc-filled-text-field-focus-active-indicator-height: 2px;--mdc-filled-text-field-container-shape: 4px;--mdc-outlined-text-field-outline-width: 1px;--mdc-outlined-text-field-focus-outline-width: 2px;--mdc-outlined-text-field-container-shape: 4px}html{--mdc-filled-text-field-caret-color: #4caf50;--mdc-filled-text-field-focus-active-indicator-color: #4caf50;--mdc-filled-text-field-focus-label-text-color: rgba(76, 175, 80, .87);--mdc-filled-text-field-container-color: whitesmoke;--mdc-filled-text-field-disabled-container-color: #fafafa;--mdc-filled-text-field-label-text-color: rgba(0, 0, 0, .6);--mdc-filled-text-field-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-filled-text-field-input-text-color: rgba(0, 0, 0, .87);--mdc-filled-text-field-disabled-input-text-color: rgba(0, 0, 0, .38);--mdc-filled-text-field-input-text-placeholder-color: rgba(0, 0, 0, .6);--mdc-filled-text-field-error-focus-label-text-color: #f44336;--mdc-filled-text-field-error-label-text-color: #f44336;--mdc-filled-text-field-error-caret-color: #f44336;--mdc-filled-text-field-active-indicator-color: rgba(0, 0, 0, .42);--mdc-filled-text-field-disabled-active-indicator-color: rgba(0, 0, 0, .06);--mdc-filled-text-field-hover-active-indicator-color: rgba(0, 0, 0, .87);--mdc-filled-text-field-error-active-indicator-color: #f44336;--mdc-filled-text-field-error-focus-active-indicator-color: #f44336;--mdc-filled-text-field-error-hover-active-indicator-color: #f44336;--mdc-outlined-text-field-caret-color: #4caf50;--mdc-outlined-text-field-focus-outline-color: #4caf50;--mdc-outlined-text-field-focus-label-text-color: rgba(76, 175, 80, .87);--mdc-outlined-text-field-label-text-color: rgba(0, 0, 0, .6);--mdc-outlined-text-field-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-input-text-color: rgba(0, 0, 0, .87);--mdc-outlined-text-field-disabled-input-text-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-input-text-placeholder-color: rgba(0, 0, 0, .6);--mdc-outlined-text-field-error-caret-color: #f44336;--mdc-outlined-text-field-error-focus-label-text-color: #f44336;--mdc-outlined-text-field-error-label-text-color: #f44336;--mdc-outlined-text-field-outline-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-disabled-outline-color: rgba(0, 0, 0, .06);--mdc-outlined-text-field-hover-outline-color: rgba(0, 0, 0, .87);--mdc-outlined-text-field-error-focus-outline-color: #f44336;--mdc-outlined-text-field-error-hover-outline-color: #f44336;--mdc-outlined-text-field-error-outline-color: #f44336;--mat-form-field-focus-select-arrow-color: rgba(76, 175, 80, .87);--mat-form-field-disabled-input-text-placeholder-color: rgba(0, 0, 0, .38);--mat-form-field-state-layer-color: rgba(0, 0, 0, .87);--mat-form-field-error-text-color: #f44336;--mat-form-field-select-option-text-color: inherit;--mat-form-field-select-disabled-option-text-color: GrayText;--mat-form-field-enabled-select-arrow-color: rgba(0, 0, 0, .54);--mat-form-field-disabled-select-arrow-color: rgba(0, 0, 0, .38);--mat-form-field-hover-state-layer-opacity: .04;--mat-form-field-focus-state-layer-opacity: .12}.mat-mdc-form-field.mat-accent{--mdc-filled-text-field-caret-color: #ff4081;--mdc-filled-text-field-focus-active-indicator-color: #ff4081;--mdc-filled-text-field-focus-label-text-color: rgba(255, 64, 129, .87);--mdc-outlined-text-field-caret-color: #ff4081;--mdc-outlined-text-field-focus-outline-color: #ff4081;--mdc-outlined-text-field-focus-label-text-color: rgba(255, 64, 129, .87);--mat-form-field-focus-select-arrow-color: rgba(255, 64, 129, .87)}.mat-mdc-form-field.mat-warn{--mdc-filled-text-field-caret-color: #f44336;--mdc-filled-text-field-focus-active-indicator-color: #f44336;--mdc-filled-text-field-focus-label-text-color: rgba(244, 67, 54, .87);--mdc-outlined-text-field-caret-color: #f44336;--mdc-outlined-text-field-focus-outline-color: #f44336;--mdc-outlined-text-field-focus-label-text-color: rgba(244, 67, 54, .87);--mat-form-field-focus-select-arrow-color: rgba(244, 67, 54, .87)}html{--mat-form-field-container-height: 56px;--mat-form-field-filled-label-display: block;--mat-form-field-container-vertical-padding: 16px;--mat-form-field-filled-with-label-container-padding-top: 24px;--mat-form-field-filled-with-label-container-padding-bottom: 8px}html{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(76, 175, 80, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html .mat-mdc-form-field.mat-accent{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(255, 64, 129, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html .mat-mdc-form-field.mat-warn{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(244, 67, 54, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html{--mat-autocomplete-background-color: white}html{--mdc-dialog-container-elevation-shadow: 0px 11px 15px -7px rgba(0, 0, 0, .2), 0px 24px 38px 3px rgba(0, 0, 0, .14), 0px 9px 46px 8px rgba(0, 0, 0, .12);--mdc-dialog-container-shadow-color: #000;--mdc-dialog-container-shape: 4px}html{--mdc-dialog-container-color: white;--mdc-dialog-subhead-color: rgba(0, 0, 0, .87);--mdc-dialog-supporting-text-color: rgba(0, 0, 0, .6)}.mat-mdc-standard-chip{--mdc-chip-container-shape-family: rounded;--mdc-chip-container-shape-radius: 16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family: rounded;--mdc-chip-with-avatar-avatar-shape-radius: 14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size: 28px;--mdc-chip-with-icon-icon-size: 18px}.mat-mdc-standard-chip{--mdc-chip-disabled-label-text-color: #212121;--mdc-chip-elevated-container-color: #e0e0e0;--mdc-chip-elevated-disabled-container-color: #e0e0e0;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: #212121;--mdc-chip-with-icon-icon-color: #212121;--mdc-chip-with-icon-disabled-icon-color: #212121;--mdc-chip-with-icon-selected-icon-color: #212121;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;--mdc-chip-with-trailing-icon-trailing-icon-color: #212121}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-primary,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-primary{--mdc-chip-disabled-label-text-color: rgba(0, 0, 0, .87);--mdc-chip-elevated-container-color: #4caf50;--mdc-chip-elevated-disabled-container-color: #4caf50;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-disabled-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-selected-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-trailing-icon-trailing-icon-color: rgba(0, 0, 0, .87)}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-accent,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-accent{--mdc-chip-disabled-label-text-color: white;--mdc-chip-elevated-container-color: #ff4081;--mdc-chip-elevated-disabled-container-color: #ff4081;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: white;--mdc-chip-with-icon-icon-color: white;--mdc-chip-with-icon-disabled-icon-color: white;--mdc-chip-with-icon-selected-icon-color: white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;--mdc-chip-with-trailing-icon-trailing-icon-color: white}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-warn,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-warn{--mdc-chip-disabled-label-text-color: white;--mdc-chip-elevated-container-color: #f44336;--mdc-chip-elevated-disabled-container-color: #f44336;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: white;--mdc-chip-with-icon-icon-color: white;--mdc-chip-with-icon-disabled-icon-color: white;--mdc-chip-with-icon-selected-icon-color: white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;--mdc-chip-with-trailing-icon-trailing-icon-color: white}.mat-mdc-chip.mat-mdc-standard-chip{--mdc-chip-container-height: 32px}.mdc-switch{--mdc-switch-disabled-handle-opacity: .38;--mdc-switch-disabled-selected-icon-opacity: .38;--mdc-switch-disabled-track-opacity: .12;--mdc-switch-disabled-unselected-icon-opacity: .38;--mdc-switch-handle-height: 20px;--mdc-switch-handle-shape: 10px;--mdc-switch-handle-width: 20px;--mdc-switch-selected-icon-size: 18px;--mdc-switch-track-height: 14px;--mdc-switch-track-shape: 7px;--mdc-switch-track-width: 36px;--mdc-switch-unselected-icon-size: 18px;--mdc-switch-state-layer-size: 40px;--mdc-switch-selected-focus-state-layer-opacity: .12;--mdc-switch-selected-hover-state-layer-opacity: .04;--mdc-switch-selected-pressed-state-layer-opacity: .1;--mdc-switch-unselected-focus-state-layer-opacity: .12;--mdc-switch-unselected-hover-state-layer-opacity: .04;--mdc-switch-unselected-pressed-state-layer-opacity: .1}.mat-mdc-slide-toggle{--mdc-switch-selected-focus-state-layer-color: #43a047;--mdc-switch-selected-handle-color: #43a047;--mdc-switch-selected-hover-state-layer-color: #43a047;--mdc-switch-selected-pressed-state-layer-color: #43a047;--mdc-switch-selected-focus-handle-color: #1b5e20;--mdc-switch-selected-hover-handle-color: #1b5e20;--mdc-switch-selected-pressed-handle-color: #1b5e20;--mdc-switch-selected-focus-track-color: #81c784;--mdc-switch-selected-hover-track-color: #81c784;--mdc-switch-selected-pressed-track-color: #81c784;--mdc-switch-selected-track-color: #81c784;--mdc-switch-disabled-selected-handle-color: #424242;--mdc-switch-disabled-selected-icon-color: #fff;--mdc-switch-disabled-selected-track-color: #424242;--mdc-switch-disabled-unselected-handle-color: #424242;--mdc-switch-disabled-unselected-icon-color: #fff;--mdc-switch-disabled-unselected-track-color: #424242;--mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);--mdc-switch-handle-elevation-shadow: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mdc-switch-handle-shadow-color: black;--mdc-switch-disabled-handle-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mdc-switch-selected-icon-color: #fff;--mdc-switch-unselected-focus-handle-color: #212121;--mdc-switch-unselected-focus-state-layer-color: #424242;--mdc-switch-unselected-focus-track-color: #e0e0e0;--mdc-switch-unselected-handle-color: #616161;--mdc-switch-unselected-hover-handle-color: #212121;--mdc-switch-unselected-hover-state-layer-color: #424242;--mdc-switch-unselected-hover-track-color: #e0e0e0;--mdc-switch-unselected-icon-color: #fff;--mdc-switch-unselected-pressed-handle-color: #212121;--mdc-switch-unselected-pressed-state-layer-color: #424242;--mdc-switch-unselected-pressed-track-color: #e0e0e0;--mdc-switch-unselected-track-color: #e0e0e0;--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:#00000061}.mat-mdc-slide-toggle.mat-accent{--mdc-switch-selected-focus-state-layer-color: #d81b60;--mdc-switch-selected-handle-color: #d81b60;--mdc-switch-selected-hover-state-layer-color: #d81b60;--mdc-switch-selected-pressed-state-layer-color: #d81b60;--mdc-switch-selected-focus-handle-color: #880e4f;--mdc-switch-selected-hover-handle-color: #880e4f;--mdc-switch-selected-pressed-handle-color: #880e4f;--mdc-switch-selected-focus-track-color: #f06292;--mdc-switch-selected-hover-track-color: #f06292;--mdc-switch-selected-pressed-track-color: #f06292;--mdc-switch-selected-track-color: #f06292}.mat-mdc-slide-toggle.mat-warn{--mdc-switch-selected-focus-state-layer-color: #e53935;--mdc-switch-selected-handle-color: #e53935;--mdc-switch-selected-hover-state-layer-color: #e53935;--mdc-switch-selected-pressed-state-layer-color: #e53935;--mdc-switch-selected-focus-handle-color: #b71c1c;--mdc-switch-selected-hover-handle-color: #b71c1c;--mdc-switch-selected-pressed-handle-color: #b71c1c;--mdc-switch-selected-focus-track-color: #e57373;--mdc-switch-selected-hover-track-color: #e57373;--mdc-switch-selected-pressed-track-color: #e57373;--mdc-switch-selected-track-color: #e57373}.mat-mdc-slide-toggle{--mdc-switch-state-layer-size: 48px}html{--mdc-radio-disabled-selected-icon-opacity: .38;--mdc-radio-disabled-unselected-icon-opacity: .38;--mdc-radio-state-layer-size: 40px}.mat-mdc-radio-button{--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-radio-button.mat-primary{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #4caf50;--mdc-radio-selected-hover-icon-color: #4caf50;--mdc-radio-selected-icon-color: #4caf50;--mdc-radio-selected-pressed-icon-color: #4caf50;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #4caf50;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}.mat-mdc-radio-button.mat-accent{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #ff4081;--mdc-radio-selected-hover-icon-color: #ff4081;--mdc-radio-selected-icon-color: #ff4081;--mdc-radio-selected-pressed-icon-color: #ff4081;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #ff4081;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}.mat-mdc-radio-button.mat-warn{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #f44336;--mdc-radio-selected-hover-icon-color: #f44336;--mdc-radio-selected-icon-color: #f44336;--mdc-radio-selected-pressed-icon-color: #f44336;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #f44336;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}html{--mdc-radio-state-layer-size: 40px}html{--mat-slider-value-indicator-width: auto;--mat-slider-value-indicator-height: 32px;--mat-slider-value-indicator-caret-display: block;--mat-slider-value-indicator-border-radius: 4px;--mat-slider-value-indicator-padding: 0 12px;--mat-slider-value-indicator-text-transform: none;--mat-slider-value-indicator-container-transform: translateX(-50%);--mdc-slider-active-track-height: 6px;--mdc-slider-active-track-shape: 9999px;--mdc-slider-handle-height: 20px;--mdc-slider-handle-shape: 50%;--mdc-slider-handle-width: 20px;--mdc-slider-inactive-track-height: 4px;--mdc-slider-inactive-track-shape: 9999px;--mdc-slider-with-overlap-handle-outline-width: 1px;--mdc-slider-with-tick-marks-active-container-opacity: .6;--mdc-slider-with-tick-marks-container-shape: 50%;--mdc-slider-with-tick-marks-container-size: 2px;--mdc-slider-with-tick-marks-inactive-container-opacity: .6}html{--mdc-slider-handle-color: #4caf50;--mdc-slider-focus-handle-color: #4caf50;--mdc-slider-hover-handle-color: #4caf50;--mdc-slider-active-track-color: #4caf50;--mdc-slider-inactive-track-color: #4caf50;--mdc-slider-with-tick-marks-inactive-container-color: #4caf50;--mdc-slider-with-tick-marks-active-container-color: rgba(0, 0, 0, .87);--mdc-slider-disabled-active-track-color: #000;--mdc-slider-disabled-handle-color: #000;--mdc-slider-disabled-inactive-track-color: #000;--mdc-slider-label-container-color: #000;--mdc-slider-label-label-text-color: #fff;--mdc-slider-with-overlap-handle-outline-color: #fff;--mdc-slider-with-tick-marks-disabled-container-color: #000;--mdc-slider-handle-elevation: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mat-slider-ripple-color: #4caf50;--mat-slider-hover-state-layer-color: rgba(76, 175, 80, .05);--mat-slider-focus-state-layer-color: rgba(76, 175, 80, .2);--mat-slider-value-indicator-opacity: .6}html .mat-accent{--mat-slider-ripple-color: #ff4081;--mat-slider-hover-state-layer-color: rgba(255, 64, 129, .05);--mat-slider-focus-state-layer-color: rgba(255, 64, 129, .2);--mdc-slider-handle-color: #ff4081;--mdc-slider-focus-handle-color: #ff4081;--mdc-slider-hover-handle-color: #ff4081;--mdc-slider-active-track-color: #ff4081;--mdc-slider-inactive-track-color: #ff4081;--mdc-slider-with-tick-marks-inactive-container-color: #ff4081;--mdc-slider-with-tick-marks-active-container-color: white}html .mat-warn{--mat-slider-ripple-color: #f44336;--mat-slider-hover-state-layer-color: rgba(244, 67, 54, .05);--mat-slider-focus-state-layer-color: rgba(244, 67, 54, .2);--mdc-slider-handle-color: #f44336;--mdc-slider-focus-handle-color: #f44336;--mdc-slider-hover-handle-color: #f44336;--mdc-slider-active-track-color: #f44336;--mdc-slider-inactive-track-color: #f44336;--mdc-slider-with-tick-marks-inactive-container-color: #f44336;--mdc-slider-with-tick-marks-active-container-color: white}html{--mat-menu-container-shape: 4px}html{--mat-menu-item-label-text-color: rgba(0, 0, 0, .87);--mat-menu-item-icon-color: rgba(0, 0, 0, .87);--mat-menu-item-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-menu-item-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-menu-container-color: white}html{--mdc-list-list-item-container-shape: 0;--mdc-list-list-item-leading-avatar-shape: 50%;--mdc-list-list-item-container-color: transparent;--mdc-list-list-item-selected-container-color: transparent;--mdc-list-list-item-leading-avatar-color: transparent;--mdc-list-list-item-leading-icon-size: 24px;--mdc-list-list-item-leading-avatar-size: 40px;--mdc-list-list-item-trailing-icon-size: 24px;--mdc-list-list-item-disabled-state-layer-color: transparent;--mdc-list-list-item-disabled-state-layer-opacity: 0;--mdc-list-list-item-disabled-label-text-opacity: .38;--mdc-list-list-item-disabled-leading-icon-opacity: .38;--mdc-list-list-item-disabled-trailing-icon-opacity: .38}html{--mdc-list-list-item-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, .54);--mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, .38);--mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-disabled-label-text-color: black;--mdc-list-list-item-disabled-leading-icon-color: black;--mdc-list-list-item-disabled-trailing-icon-color: black;--mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-hover-state-layer-color: black;--mdc-list-list-item-hover-state-layer-opacity: .04;--mdc-list-list-item-focus-state-layer-color: black;--mdc-list-list-item-focus-state-layer-opacity: .12}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #4caf50;--mdc-radio-selected-hover-icon-color: #4caf50;--mdc-radio-selected-icon-color: #4caf50;--mdc-radio-selected-pressed-icon-color: #4caf50}.mat-accent .mdc-list-item__start,.mat-accent .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #ff4081;--mdc-radio-selected-hover-icon-color: #ff4081;--mdc-radio-selected-icon-color: #ff4081;--mdc-radio-selected-pressed-icon-color: #ff4081}.mat-warn .mdc-list-item__start,.mat-warn .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #f44336;--mdc-radio-selected-hover-icon-color: #f44336;--mdc-radio-selected-icon-color: #f44336;--mdc-radio-selected-pressed-icon-color: #f44336}.mat-mdc-list-option{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #000;--mdc-checkbox-selected-focus-icon-color: #4caf50;--mdc-checkbox-selected-hover-icon-color: #4caf50;--mdc-checkbox-selected-icon-color: #4caf50;--mdc-checkbox-selected-pressed-icon-color: #4caf50;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #4caf50;--mdc-checkbox-selected-hover-state-layer-color: #4caf50;--mdc-checkbox-selected-pressed-state-layer-color: #4caf50;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-option.mat-accent{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #ff4081;--mdc-checkbox-selected-hover-icon-color: #ff4081;--mdc-checkbox-selected-icon-color: #ff4081;--mdc-checkbox-selected-pressed-icon-color: #ff4081;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #ff4081;--mdc-checkbox-selected-hover-state-layer-color: #ff4081;--mdc-checkbox-selected-pressed-state-layer-color: #ff4081;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-option.mat-warn{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #f44336;--mdc-checkbox-selected-hover-icon-color: #f44336;--mdc-checkbox-selected-icon-color: #f44336;--mdc-checkbox-selected-pressed-icon-color: #f44336;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #f44336;--mdc-checkbox-selected-hover-state-layer-color: #f44336;--mdc-checkbox-selected-pressed-state-layer-color: #f44336;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:#4caf50}.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end{opacity:1}html{--mdc-list-list-item-one-line-container-height: 48px;--mdc-list-list-item-two-line-container-height: 64px;--mdc-list-list-item-three-line-container-height: 88px}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-state-layer-size: 40px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}html{--mat-paginator-container-text-color: rgba(0, 0, 0, .87);--mat-paginator-container-background-color: white;--mat-paginator-enabled-icon-color: rgba(0, 0, 0, .54);--mat-paginator-disabled-icon-color: rgba(0, 0, 0, .12)}html{--mat-paginator-container-size: 56px}.mat-mdc-paginator{--mat-form-field-container-height: 40px;--mat-form-field-filled-label-display: none;--mat-form-field-container-vertical-padding: 8px;--mat-form-field-filled-with-label-container-padding-top: 8px;--mat-form-field-filled-with-label-container-padding-bottom: 8px}html{--mdc-tab-indicator-active-indicator-height: 2px;--mdc-tab-indicator-active-indicator-shape: 0;--mdc-secondary-navigation-tab-container-height: 48px;--mat-tab-header-divider-color: transparent;--mat-tab-header-divider-height: 0}.mat-mdc-tab-group,.mat-mdc-tab-nav-bar{--mdc-tab-indicator-active-indicator-color: #4caf50;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #4caf50;--mat-tab-header-active-ripple-color: #4caf50;--mat-tab-header-inactive-ripple-color: #4caf50;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #4caf50;--mat-tab-header-active-hover-label-text-color: #4caf50;--mat-tab-header-active-focus-indicator-color: #4caf50;--mat-tab-header-active-hover-indicator-color: #4caf50}.mat-mdc-tab-group.mat-accent,.mat-mdc-tab-nav-bar.mat-accent{--mdc-tab-indicator-active-indicator-color: #ff4081;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #ff4081;--mat-tab-header-active-ripple-color: #ff4081;--mat-tab-header-inactive-ripple-color: #ff4081;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #ff4081;--mat-tab-header-active-hover-label-text-color: #ff4081;--mat-tab-header-active-focus-indicator-color: #ff4081;--mat-tab-header-active-hover-indicator-color: #ff4081}.mat-mdc-tab-group.mat-warn,.mat-mdc-tab-nav-bar.mat-warn{--mdc-tab-indicator-active-indicator-color: #f44336;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #f44336;--mat-tab-header-active-ripple-color: #f44336;--mat-tab-header-inactive-ripple-color: #f44336;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #f44336;--mat-tab-header-active-hover-label-text-color: #f44336;--mat-tab-header-active-focus-indicator-color: #f44336;--mat-tab-header-active-hover-indicator-color: #f44336}.mat-mdc-tab-group.mat-background-primary,.mat-mdc-tab-nav-bar.mat-background-primary{--mat-tab-header-with-background-background-color: #4caf50;--mat-tab-header-with-background-foreground-color: rgba(0, 0, 0, .87)}.mat-mdc-tab-group.mat-background-accent,.mat-mdc-tab-nav-bar.mat-background-accent{--mat-tab-header-with-background-background-color: #ff4081;--mat-tab-header-with-background-foreground-color: white}.mat-mdc-tab-group.mat-background-warn,.mat-mdc-tab-nav-bar.mat-background-warn{--mat-tab-header-with-background-background-color: #f44336;--mat-tab-header-with-background-foreground-color: white}.mat-mdc-tab-header{--mdc-secondary-navigation-tab-container-height: 48px}html{--mdc-checkbox-disabled-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-state-layer-opacity: .16;--mdc-checkbox-selected-hover-state-layer-opacity: .04;--mdc-checkbox-selected-pressed-state-layer-opacity: .16;--mdc-checkbox-unselected-focus-state-layer-opacity: .16;--mdc-checkbox-unselected-hover-state-layer-opacity: .04;--mdc-checkbox-unselected-pressed-state-layer-opacity: .16}html{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #ff4081;--mdc-checkbox-selected-hover-icon-color: #ff4081;--mdc-checkbox-selected-icon-color: #ff4081;--mdc-checkbox-selected-pressed-icon-color: #ff4081;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #ff4081;--mdc-checkbox-selected-hover-state-layer-color: #ff4081;--mdc-checkbox-selected-pressed-state-layer-color: #ff4081;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox{--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-checkbox.mat-primary{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #000;--mdc-checkbox-selected-focus-icon-color: #4caf50;--mdc-checkbox-selected-hover-icon-color: #4caf50;--mdc-checkbox-selected-icon-color: #4caf50;--mdc-checkbox-selected-pressed-icon-color: #4caf50;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #4caf50;--mdc-checkbox-selected-hover-state-layer-color: #4caf50;--mdc-checkbox-selected-pressed-state-layer-color: #4caf50;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox.mat-warn{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #f44336;--mdc-checkbox-selected-hover-icon-color: #f44336;--mdc-checkbox-selected-icon-color: #f44336;--mdc-checkbox-selected-pressed-icon-color: #f44336;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #f44336;--mdc-checkbox-selected-hover-state-layer-color: #f44336;--mdc-checkbox-selected-pressed-state-layer-color: #f44336;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{color:#00000061}html{--mdc-checkbox-state-layer-size: 40px}html{--mdc-text-button-container-shape: 4px;--mdc-text-button-keep-touch-target: false;--mdc-filled-button-container-shape: 4px;--mdc-filled-button-keep-touch-target: false;--mdc-protected-button-container-shape: 4px;--mdc-protected-button-keep-touch-target: false;--mdc-outlined-button-keep-touch-target: false;--mdc-outlined-button-outline-width: 1px;--mdc-outlined-button-container-shape: 4px}html{--mdc-text-button-label-text-color: #000;--mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mat-text-button-state-layer-color: #000;--mat-text-button-disabled-state-layer-color: #000;--mat-text-button-ripple-color: rgba(0, 0, 0, .1);--mat-text-button-hover-state-layer-opacity: .04;--mat-text-button-focus-state-layer-opacity: .12;--mat-text-button-pressed-state-layer-opacity: .12;--mdc-filled-button-container-color: white;--mdc-filled-button-label-text-color: #000;--mdc-filled-button-disabled-container-color: rgba(0, 0, 0, .12);--mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mat-filled-button-state-layer-color: #000;--mat-filled-button-disabled-state-layer-color: #000;--mat-filled-button-ripple-color: rgba(0, 0, 0, .1);--mat-filled-button-hover-state-layer-opacity: .04;--mat-filled-button-focus-state-layer-opacity: .12;--mat-filled-button-pressed-state-layer-opacity: .12;--mdc-protected-button-container-color: white;--mdc-protected-button-label-text-color: #000;--mdc-protected-button-disabled-container-color: rgba(0, 0, 0, .12);--mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-protected-button-container-elevation-shadow: 0px 3px 1px -2px rgba(0, 0, 0, .2), 0px 2px 2px 0px rgba(0, 0, 0, .14), 0px 1px 5px 0px rgba(0, 0, 0, .12);--mdc-protected-button-disabled-container-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mdc-protected-button-focus-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, .2), 0px 4px 5px 0px rgba(0, 0, 0, .14), 0px 1px 10px 0px rgba(0, 0, 0, .12);--mdc-protected-button-hover-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, .2), 0px 4px 5px 0px rgba(0, 0, 0, .14), 0px 1px 10px 0px rgba(0, 0, 0, .12);--mdc-protected-button-pressed-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-protected-button-container-shadow-color: #000;--mat-protected-button-state-layer-color: #000;--mat-protected-button-disabled-state-layer-color: #000;--mat-protected-button-ripple-color: rgba(0, 0, 0, .1);--mat-protected-button-hover-state-layer-opacity: .04;--mat-protected-button-focus-state-layer-opacity: .12;--mat-protected-button-pressed-state-layer-opacity: .12;--mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, .12);--mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-outlined-button-label-text-color: #000;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #000;--mat-outlined-button-disabled-state-layer-color: #000;--mat-outlined-button-ripple-color: rgba(0, 0, 0, .1);--mat-outlined-button-hover-state-layer-opacity: .04;--mat-outlined-button-focus-state-layer-opacity: .12;--mat-outlined-button-pressed-state-layer-opacity: .12}.mat-mdc-button.mat-primary{--mdc-text-button-label-text-color: #4caf50;--mat-text-button-state-layer-color: #4caf50;--mat-text-button-ripple-color: rgba(76, 175, 80, .1)}.mat-mdc-button.mat-accent{--mdc-text-button-label-text-color: #ff4081;--mat-text-button-state-layer-color: #ff4081;--mat-text-button-ripple-color: rgba(255, 64, 129, .1)}.mat-mdc-button.mat-warn{--mdc-text-button-label-text-color: #f44336;--mat-text-button-state-layer-color: #f44336;--mat-text-button-ripple-color: rgba(244, 67, 54, .1)}.mat-mdc-unelevated-button.mat-primary{--mdc-filled-button-container-color: #4caf50;--mdc-filled-button-label-text-color: #000;--mat-filled-button-state-layer-color: #000;--mat-filled-button-ripple-color: rgba(0, 0, 0, .1)}.mat-mdc-unelevated-button.mat-accent{--mdc-filled-button-container-color: #ff4081;--mdc-filled-button-label-text-color: #fff;--mat-filled-button-state-layer-color: #fff;--mat-filled-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-unelevated-button.mat-warn{--mdc-filled-button-container-color: #f44336;--mdc-filled-button-label-text-color: #fff;--mat-filled-button-state-layer-color: #fff;--mat-filled-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-raised-button.mat-primary{--mdc-protected-button-container-color: #4caf50;--mdc-protected-button-label-text-color: #000;--mat-protected-button-state-layer-color: #000;--mat-protected-button-ripple-color: rgba(0, 0, 0, .1)}.mat-mdc-raised-button.mat-accent{--mdc-protected-button-container-color: #ff4081;--mdc-protected-button-label-text-color: #fff;--mat-protected-button-state-layer-color: #fff;--mat-protected-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-raised-button.mat-warn{--mdc-protected-button-container-color: #f44336;--mdc-protected-button-label-text-color: #fff;--mat-protected-button-state-layer-color: #fff;--mat-protected-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-outlined-button.mat-primary{--mdc-outlined-button-label-text-color: #4caf50;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #4caf50;--mat-outlined-button-ripple-color: rgba(76, 175, 80, .1)}.mat-mdc-outlined-button.mat-accent{--mdc-outlined-button-label-text-color: #ff4081;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #ff4081;--mat-outlined-button-ripple-color: rgba(255, 64, 129, .1)}.mat-mdc-outlined-button.mat-warn{--mdc-outlined-button-label-text-color: #f44336;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #f44336;--mat-outlined-button-ripple-color: rgba(244, 67, 54, .1)}html{--mdc-text-button-container-height: 36px;--mdc-filled-button-container-height: 36px;--mdc-outlined-button-container-height: 36px;--mdc-protected-button-container-height: 36px}html{--mdc-icon-button-state-layer-size: 48px;--mdc-icon-button-icon-size: 24px}html{--mdc-icon-button-icon-color: inherit;--mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, .38);--mat-icon-button-state-layer-color: #000;--mat-icon-button-disabled-state-layer-color: #000;--mat-icon-button-ripple-color: rgba(0, 0, 0, .1);--mat-icon-button-hover-state-layer-opacity: .04;--mat-icon-button-focus-state-layer-opacity: .12;--mat-icon-button-pressed-state-layer-opacity: .12}html .mat-mdc-icon-button.mat-primary{--mdc-icon-button-icon-color: #4caf50;--mat-icon-button-state-layer-color: #4caf50;--mat-icon-button-ripple-color: rgba(76, 175, 80, .1)}html .mat-mdc-icon-button.mat-accent{--mdc-icon-button-icon-color: #ff4081;--mat-icon-button-state-layer-color: #ff4081;--mat-icon-button-ripple-color: rgba(255, 64, 129, .1)}html .mat-mdc-icon-button.mat-warn{--mdc-icon-button-icon-color: #f44336;--mat-icon-button-state-layer-color: #f44336;--mat-icon-button-ripple-color: rgba(244, 67, 54, .1)}.mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size: 48px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:12px}html{--mdc-fab-container-shape: 50%;--mdc-fab-icon-size: 24px}html{--mdc-fab-container-color: white;--mdc-fab-container-elevation-shadow: 0px 3px 5px -1px rgba(0, 0, 0, .2), 0px 6px 10px 0px rgba(0, 0, 0, .14), 0px 1px 18px 0px rgba(0, 0, 0, .12);--mdc-fab-focus-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-fab-hover-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-fab-pressed-container-elevation-shadow: 0px 7px 8px -4px rgba(0, 0, 0, .2), 0px 12px 17px 2px rgba(0, 0, 0, .14), 0px 5px 22px 4px rgba(0, 0, 0, .12);--mdc-fab-container-shadow-color: #000;--mat-fab-foreground-color: black;--mat-fab-state-layer-color: #000;--mat-fab-disabled-state-layer-color: #000;--mat-fab-ripple-color: rgba(0, 0, 0, .1);--mat-fab-hover-state-layer-opacity: .04;--mat-fab-focus-state-layer-opacity: .12;--mat-fab-pressed-state-layer-opacity: .12;--mat-fab-disabled-state-container-color: rgba(0, 0, 0, .12);--mat-fab-disabled-state-foreground-color: rgba(0, 0, 0, .38);--mdc-extended-fab-container-elevation-shadow: 0px 3px 5px -1px rgba(0, 0, 0, .2), 0px 6px 10px 0px rgba(0, 0, 0, .14), 0px 1px 18px 0px rgba(0, 0, 0, .12);--mdc-extended-fab-focus-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-extended-fab-hover-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-extended-fab-pressed-container-elevation-shadow: 0px 7px 8px -4px rgba(0, 0, 0, .2), 0px 12px 17px 2px rgba(0, 0, 0, .14), 0px 5px 22px 4px rgba(0, 0, 0, .12);--mdc-extended-fab-container-shadow-color: #000}html .mat-mdc-fab.mat-primary,html .mat-mdc-mini-fab.mat-primary{--mdc-fab-container-color: #4caf50;--mat-fab-foreground-color: #000;--mat-fab-state-layer-color: #000;--mat-fab-ripple-color: rgba(0, 0, 0, .1)}html .mat-mdc-fab.mat-accent,html .mat-mdc-mini-fab.mat-accent{--mdc-fab-container-color: #ff4081;--mat-fab-foreground-color: #fff;--mat-fab-state-layer-color: #fff;--mat-fab-ripple-color: rgba(255, 255, 255, .1)}html .mat-mdc-fab.mat-warn,html .mat-mdc-mini-fab.mat-warn{--mdc-fab-container-color: #f44336;--mat-fab-foreground-color: #fff;--mat-fab-state-layer-color: #fff;--mat-fab-ripple-color: rgba(255, 255, 255, .1)}html{--mdc-snackbar-container-shape: 4px}html{--mdc-snackbar-container-color: #333333;--mdc-snackbar-supporting-text-color: rgba(255, 255, 255, .87);--mat-snack-bar-button-color: #ff4081}html{--mat-table-row-item-outline-width: 1px}html{--mat-table-background-color: white;--mat-table-header-headline-color: rgba(0, 0, 0, .87);--mat-table-row-item-label-text-color: rgba(0, 0, 0, .87);--mat-table-row-item-outline-color: rgba(0, 0, 0, .12)}html{--mat-table-header-container-height: 56px;--mat-table-footer-container-height: 52px;--mat-table-row-item-container-height: 52px}html{--mdc-circular-progress-active-indicator-width: 4px;--mdc-circular-progress-size: 48px}html{--mdc-circular-progress-active-indicator-color: #4caf50}html .mat-accent{--mdc-circular-progress-active-indicator-color: #ff4081}html .mat-warn{--mdc-circular-progress-active-indicator-color: #f44336}.mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform .2s ease-in-out;transform:scale(.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:Roboto,sans-serif;font-family:var(--mat-badge-text-font, Roboto, sans-serif);font-size:12px;font-size:var(--mat-badge-text-size, 12px);font-weight:600;font-weight:var(--mat-badge-text-weight, 600)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px;font-size:9px;font-size:var(--mat-badge-small-size-text-size, 9px)}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px;font-size:24px;font-size:var(--mat-badge-large-size-text-size, 24px)}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}html{--mat-badge-background-color: #4caf50;--mat-badge-text-color: rgba(0, 0, 0, .87);--mat-badge-disabled-state-background-color: #b9b9b9;--mat-badge-disabled-state-text-color: rgba(0, 0, 0, .38)}.mat-badge-accent{--mat-badge-background-color: #ff4081;--mat-badge-text-color: white}.mat-badge-warn{--mat-badge-background-color: #f44336;--mat-badge-text-color: white}html{--mat-bottom-sheet-container-shape: 4px}html{--mat-bottom-sheet-container-text-color: rgba(0, 0, 0, .87);--mat-bottom-sheet-container-background-color: white}html{--mat-legacy-button-toggle-height: 36px;--mat-legacy-button-toggle-shape: 2px;--mat-legacy-button-toggle-focus-state-layer-opacity: 1;--mat-standard-button-toggle-shape: 4px;--mat-standard-button-toggle-hover-state-layer-opacity: .04;--mat-standard-button-toggle-focus-state-layer-opacity: .12}html{--mat-legacy-button-toggle-text-color: rgba(0, 0, 0, .38);--mat-legacy-button-toggle-state-layer-color: rgba(0, 0, 0, .12);--mat-legacy-button-toggle-selected-state-text-color: rgba(0, 0, 0, .54);--mat-legacy-button-toggle-selected-state-background-color: #e0e0e0;--mat-legacy-button-toggle-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-legacy-button-toggle-disabled-state-background-color: #eeeeee;--mat-legacy-button-toggle-disabled-selected-state-background-color: #bdbdbd;--mat-standard-button-toggle-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-background-color: white;--mat-standard-button-toggle-state-layer-color: black;--mat-standard-button-toggle-selected-state-background-color: #e0e0e0;--mat-standard-button-toggle-selected-state-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-standard-button-toggle-disabled-state-background-color: white;--mat-standard-button-toggle-disabled-selected-state-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-disabled-selected-state-background-color: #bdbdbd;--mat-standard-button-toggle-divider-color: #e0e0e0}html{--mat-standard-button-toggle-height: 48px}html{--mat-datepicker-calendar-date-selected-state-text-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-selected-state-background-color: #4caf50;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(76, 175, 80, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-focus-state-background-color: rgba(76, 175, 80, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(76, 175, 80, .3);--mat-datepicker-toggle-active-state-icon-color: #4caf50;--mat-datepicker-calendar-date-in-range-state-background-color: rgba(76, 175, 80, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;--mat-datepicker-toggle-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-body-label-text-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-period-button-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-navigation-button-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-header-divider-color: rgba(0, 0, 0, .12);--mat-datepicker-calendar-header-text-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-date-today-outline-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-date-today-disabled-state-outline-color: rgba(0, 0, 0, .18);--mat-datepicker-calendar-date-text-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-outline-color: transparent;--mat-datepicker-calendar-date-disabled-state-text-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-date-preview-state-outline-color: rgba(0, 0, 0, .24);--mat-datepicker-range-input-separator-color: rgba(0, 0, 0, .87);--mat-datepicker-range-input-disabled-state-separator-color: rgba(0, 0, 0, .38);--mat-datepicker-range-input-disabled-state-text-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-container-background-color: white;--mat-datepicker-calendar-container-text-color: rgba(0, 0, 0, .87)}.mat-datepicker-content.mat-accent{--mat-datepicker-calendar-date-selected-state-text-color: white;--mat-datepicker-calendar-date-selected-state-background-color: #ff4081;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(255, 64, 129, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: white;--mat-datepicker-calendar-date-focus-state-background-color: rgba(255, 64, 129, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(255, 64, 129, .3);--mat-datepicker-calendar-date-in-range-state-background-color: rgba(255, 64, 129, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e}.mat-datepicker-content.mat-warn{--mat-datepicker-calendar-date-selected-state-text-color: white;--mat-datepicker-calendar-date-selected-state-background-color: #f44336;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(244, 67, 54, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: white;--mat-datepicker-calendar-date-focus-state-background-color: rgba(244, 67, 54, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(244, 67, 54, .3);--mat-datepicker-calendar-date-in-range-state-background-color: rgba(244, 67, 54, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e}.mat-datepicker-toggle-active.mat-accent{--mat-datepicker-toggle-active-state-icon-color: #ff4081}.mat-datepicker-toggle-active.mat-warn{--mat-datepicker-toggle-active-state-icon-color: #f44336}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size: 40px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:8px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target{display:none}html{--mat-divider-width: 1px}html{--mat-divider-color: rgba(0, 0, 0, .12)}html{--mat-expansion-container-shape: 4px}html{--mat-expansion-container-background-color: white;--mat-expansion-container-text-color: rgba(0, 0, 0, .87);--mat-expansion-actions-divider-color: rgba(0, 0, 0, .12);--mat-expansion-header-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-expansion-header-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-expansion-header-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-expansion-header-text-color: rgba(0, 0, 0, .87);--mat-expansion-header-description-color: rgba(0, 0, 0, .54);--mat-expansion-header-indicator-color: rgba(0, 0, 0, .54)}html{--mat-expansion-header-collapsed-state-height: 48px;--mat-expansion-header-expanded-state-height: 64px}html{--mat-icon-color: inherit}.mat-icon.mat-primary{--mat-icon-color: #4caf50}.mat-icon.mat-accent{--mat-icon-color: #ff4081}.mat-icon.mat-warn{--mat-icon-color: #f44336}html{--mat-sidenav-container-shape: 0}html{--mat-sidenav-container-divider-color: rgba(0, 0, 0, .12);--mat-sidenav-container-background-color: white;--mat-sidenav-container-text-color: rgba(0, 0, 0, .87);--mat-sidenav-content-background-color: #fafafa;--mat-sidenav-content-text-color: rgba(0, 0, 0, .87);--mat-sidenav-scrim-color: rgba(0, 0, 0, .6)}html{--mat-stepper-header-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-selected-state-icon-background-color: #4caf50;--mat-stepper-header-selected-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-done-state-icon-background-color: #4caf50;--mat-stepper-header-done-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-edit-state-icon-background-color: #4caf50;--mat-stepper-header-edit-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-container-color: white;--mat-stepper-line-color: rgba(0, 0, 0, .12);--mat-stepper-header-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-stepper-header-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-stepper-header-label-text-color: rgba(0, 0, 0, .54);--mat-stepper-header-optional-label-text-color: rgba(0, 0, 0, .54);--mat-stepper-header-selected-state-label-text-color: rgba(0, 0, 0, .87);--mat-stepper-header-error-state-label-text-color: #f44336;--mat-stepper-header-icon-background-color: rgba(0, 0, 0, .54);--mat-stepper-header-error-state-icon-foreground-color: #f44336;--mat-stepper-header-error-state-icon-background-color: transparent}html .mat-step-header.mat-accent{--mat-stepper-header-icon-foreground-color: white;--mat-stepper-header-selected-state-icon-background-color: #ff4081;--mat-stepper-header-selected-state-icon-foreground-color: white;--mat-stepper-header-done-state-icon-background-color: #ff4081;--mat-stepper-header-done-state-icon-foreground-color: white;--mat-stepper-header-edit-state-icon-background-color: #ff4081;--mat-stepper-header-edit-state-icon-foreground-color: white}html .mat-step-header.mat-warn{--mat-stepper-header-icon-foreground-color: white;--mat-stepper-header-selected-state-icon-background-color: #f44336;--mat-stepper-header-selected-state-icon-foreground-color: white;--mat-stepper-header-done-state-icon-background-color: #f44336;--mat-stepper-header-done-state-icon-foreground-color: white;--mat-stepper-header-edit-state-icon-background-color: #f44336;--mat-stepper-header-edit-state-icon-foreground-color: white}html{--mat-stepper-header-height: 72px}html{--mat-sort-arrow-color: #757575}html{--mat-toolbar-container-background-color: whitesmoke;--mat-toolbar-container-text-color: rgba(0, 0, 0, .87)}.mat-toolbar.mat-primary{--mat-toolbar-container-background-color: #4caf50;--mat-toolbar-container-text-color: rgba(0, 0, 0, .87)}.mat-toolbar.mat-accent{--mat-toolbar-container-background-color: #ff4081;--mat-toolbar-container-text-color: white}.mat-toolbar.mat-warn{--mat-toolbar-container-background-color: #f44336;--mat-toolbar-container-text-color: white}html{--mat-toolbar-standard-height: 64px;--mat-toolbar-mobile-height: 56px}html{--mat-tree-container-background-color: white;--mat-tree-node-text-color: rgba(0, 0, 0, .87)}html{--mat-tree-node-min-height: 48px}header{display:block;background:#202020;background-position:30px center;background-repeat:no-repeat;background-size:auto 40%;margin:0;padding-top:35px;padding-bottom:-20px;min-height:50px;text-align:center;color:#fff}header #appTitle{font-size:xx-large;font-weight:bolder;color:#65a800}body{font-family:Roboto,Helvetica Neue,sans-serif;background-color:#65a800;margin:0;padding:0;overflow-y:hidden;overflow-x:hidden;-webkit-user-select:none;user-select:none}footer{display:block;background-color:#202020;min-width:100%;width:auto;margin:0;padding:2px 0;color:#fff;font-size:smaller;text-align:left}footer .wh-text{color:#65a800;margin:0 10px}footer .infoLinks{text-align:right;position:fixed;right:0;margin-right:30px}footer .infoLinks a{color:#fff;margin-left:10px;text-decoration:none}footer .infoLinks a:hover{color:#65a800}\\n\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: FooterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-footer', standalone: true, imports: [], template: \"<footer>\\n    <span\\n    ><span>\\u00A9 {{ getCurrentYear(2023) }}</span>\\n        <span class=\\\"wh-text\\\">Westf\\u00E4lische Hochschule</span> Gelsenkirchen</span\\n    >\\n  <span class=\\\"infoLinks\\\">\\n        <a href=\\\"https://www.w-hs.de/service/impressum/\\\" target=\\\"_blank\\\"\\n        >Impressum</a\\n        >\\n        <a href=\\\"https://pi-lab2.w-hs.de/THI/Datenschutz.html\\\" target=\\\"_blank\\\"\\n        >Datenschutz</a\\n        >\\n        <a\\n          href=\\\"https://pi-lab2.w-hs.de/THI/Barrierefreiheit.html\\\"\\n          target=\\\"_blank\\\"\\n        >Barrierefreiheit</a\\n        >\\n    </span>\\n</footer>\\n\", styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0,0,.2,1);transform:scale3d(0,0,0);background-color:var(--mat-ripple-color, rgba(0, 0, 0, .1))}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:#00000052}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0!important;box-sizing:content-box!important;height:auto!important;overflow:hidden!important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0!important;box-sizing:content-box!important;height:0!important}@keyframes cdk-text-field-autofill-start{}@keyframes cdk-text-field-autofill-end{}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}.mat-focus-indicator{position:relative}.mat-focus-indicator:before{inset:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border:var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus:before{content:\\\"\\\"}.cdk-high-contrast-active{--mat-focus-indicator-display: block}.mat-mdc-focus-indicator{position:relative}.mat-mdc-focus-indicator:before{inset:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-mdc-focus-indicator-display, none);border:var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);border-radius:var(--mat-mdc-focus-indicator-border-radius, 4px)}.mat-mdc-focus-indicator:focus:before{content:\\\"\\\"}.cdk-high-contrast-active{--mat-mdc-focus-indicator-display: block}.mat-app-background{background-color:var(--mat-app-background-color, transparent);color:var(--mat-app-text-color, inherit)}html{--mat-ripple-color: rgba(0, 0, 0, .1)}html{--mat-option-selected-state-label-text-color: #4caf50;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}.mat-accent{--mat-option-selected-state-label-text-color: #ff4081;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}.mat-warn{--mat-option-selected-state-label-text-color: #f44336;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}html{--mat-optgroup-label-text-color: rgba(0, 0, 0, .87)}.mat-primary{--mat-full-pseudo-checkbox-selected-icon-color: #4caf50;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #4caf50;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}html,.mat-accent{--mat-full-pseudo-checkbox-selected-icon-color: #ff4081;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #ff4081;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}.mat-warn{--mat-full-pseudo-checkbox-selected-icon-color: #f44336;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #f44336;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}html{--mat-app-background-color: #fafafa;--mat-app-text-color: rgba(0, 0, 0, .87)}.mat-elevation-z0,.mat-mdc-elevation-specific.mat-elevation-z0{box-shadow:0 0 #0003,0 0 #00000024,0 0 #0000001f}.mat-elevation-z1,.mat-mdc-elevation-specific.mat-elevation-z1{box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}.mat-elevation-z2,.mat-mdc-elevation-specific.mat-elevation-z2{box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f}.mat-elevation-z3,.mat-mdc-elevation-specific.mat-elevation-z3{box-shadow:0 3px 3px -2px #0003,0 3px 4px #00000024,0 1px 8px #0000001f}.mat-elevation-z4,.mat-mdc-elevation-specific.mat-elevation-z4{box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f}.mat-elevation-z5,.mat-mdc-elevation-specific.mat-elevation-z5{box-shadow:0 3px 5px -1px #0003,0 5px 8px #00000024,0 1px 14px #0000001f}.mat-elevation-z6,.mat-mdc-elevation-specific.mat-elevation-z6{box-shadow:0 3px 5px -1px #0003,0 6px 10px #00000024,0 1px 18px #0000001f}.mat-elevation-z7,.mat-mdc-elevation-specific.mat-elevation-z7{box-shadow:0 4px 5px -2px #0003,0 7px 10px 1px #00000024,0 2px 16px 1px #0000001f}.mat-elevation-z8,.mat-mdc-elevation-specific.mat-elevation-z8{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.mat-elevation-z9,.mat-mdc-elevation-specific.mat-elevation-z9{box-shadow:0 5px 6px -3px #0003,0 9px 12px 1px #00000024,0 3px 16px 2px #0000001f}.mat-elevation-z10,.mat-mdc-elevation-specific.mat-elevation-z10{box-shadow:0 6px 6px -3px #0003,0 10px 14px 1px #00000024,0 4px 18px 3px #0000001f}.mat-elevation-z11,.mat-mdc-elevation-specific.mat-elevation-z11{box-shadow:0 6px 7px -4px #0003,0 11px 15px 1px #00000024,0 4px 20px 3px #0000001f}.mat-elevation-z12,.mat-mdc-elevation-specific.mat-elevation-z12{box-shadow:0 7px 8px -4px #0003,0 12px 17px 2px #00000024,0 5px 22px 4px #0000001f}.mat-elevation-z13,.mat-mdc-elevation-specific.mat-elevation-z13{box-shadow:0 7px 8px -4px #0003,0 13px 19px 2px #00000024,0 5px 24px 4px #0000001f}.mat-elevation-z14,.mat-mdc-elevation-specific.mat-elevation-z14{box-shadow:0 7px 9px -4px #0003,0 14px 21px 2px #00000024,0 5px 26px 4px #0000001f}.mat-elevation-z15,.mat-mdc-elevation-specific.mat-elevation-z15{box-shadow:0 8px 9px -5px #0003,0 15px 22px 2px #00000024,0 6px 28px 5px #0000001f}.mat-elevation-z16,.mat-mdc-elevation-specific.mat-elevation-z16{box-shadow:0 8px 10px -5px #0003,0 16px 24px 2px #00000024,0 6px 30px 5px #0000001f}.mat-elevation-z17,.mat-mdc-elevation-specific.mat-elevation-z17{box-shadow:0 8px 11px -5px #0003,0 17px 26px 2px #00000024,0 6px 32px 5px #0000001f}.mat-elevation-z18,.mat-mdc-elevation-specific.mat-elevation-z18{box-shadow:0 9px 11px -5px #0003,0 18px 28px 2px #00000024,0 7px 34px 6px #0000001f}.mat-elevation-z19,.mat-mdc-elevation-specific.mat-elevation-z19{box-shadow:0 9px 12px -6px #0003,0 19px 29px 2px #00000024,0 7px 36px 6px #0000001f}.mat-elevation-z20,.mat-mdc-elevation-specific.mat-elevation-z20{box-shadow:0 10px 13px -6px #0003,0 20px 31px 3px #00000024,0 8px 38px 7px #0000001f}.mat-elevation-z21,.mat-mdc-elevation-specific.mat-elevation-z21{box-shadow:0 10px 13px -6px #0003,0 21px 33px 3px #00000024,0 8px 40px 7px #0000001f}.mat-elevation-z22,.mat-mdc-elevation-specific.mat-elevation-z22{box-shadow:0 10px 14px -6px #0003,0 22px 35px 3px #00000024,0 8px 42px 7px #0000001f}.mat-elevation-z23,.mat-mdc-elevation-specific.mat-elevation-z23{box-shadow:0 11px 14px -7px #0003,0 23px 36px 3px #00000024,0 9px 44px 8px #0000001f}.mat-elevation-z24,.mat-mdc-elevation-specific.mat-elevation-z24{box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}.mat-theme-loaded-marker{display:none}html{--mdc-elevated-card-container-shape: 4px;--mdc-outlined-card-container-shape: 4px;--mdc-outlined-card-outline-width: 1px}html{--mdc-elevated-card-container-color: white;--mdc-elevated-card-container-elevation: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mdc-outlined-card-container-color: white;--mdc-outlined-card-outline-color: rgba(0, 0, 0, .12);--mdc-outlined-card-container-elevation: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mat-card-subtitle-text-color: rgba(0, 0, 0, .54)}html{--mdc-linear-progress-active-indicator-height: 4px;--mdc-linear-progress-track-height: 4px;--mdc-linear-progress-track-shape: 0}.mat-mdc-progress-bar{--mdc-linear-progress-active-indicator-color: #4caf50;--mdc-linear-progress-track-color: rgba(76, 175, 80, .25)}.mat-mdc-progress-bar.mat-accent{--mdc-linear-progress-active-indicator-color: #ff4081;--mdc-linear-progress-track-color: rgba(255, 64, 129, .25)}.mat-mdc-progress-bar.mat-warn{--mdc-linear-progress-active-indicator-color: #f44336;--mdc-linear-progress-track-color: rgba(244, 67, 54, .25)}html{--mdc-plain-tooltip-container-shape: 4px;--mdc-plain-tooltip-supporting-text-line-height: 16px}html{--mdc-plain-tooltip-container-color: #616161;--mdc-plain-tooltip-supporting-text-color: #fff}html{--mdc-filled-text-field-active-indicator-height: 1px;--mdc-filled-text-field-focus-active-indicator-height: 2px;--mdc-filled-text-field-container-shape: 4px;--mdc-outlined-text-field-outline-width: 1px;--mdc-outlined-text-field-focus-outline-width: 2px;--mdc-outlined-text-field-container-shape: 4px}html{--mdc-filled-text-field-caret-color: #4caf50;--mdc-filled-text-field-focus-active-indicator-color: #4caf50;--mdc-filled-text-field-focus-label-text-color: rgba(76, 175, 80, .87);--mdc-filled-text-field-container-color: whitesmoke;--mdc-filled-text-field-disabled-container-color: #fafafa;--mdc-filled-text-field-label-text-color: rgba(0, 0, 0, .6);--mdc-filled-text-field-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-filled-text-field-input-text-color: rgba(0, 0, 0, .87);--mdc-filled-text-field-disabled-input-text-color: rgba(0, 0, 0, .38);--mdc-filled-text-field-input-text-placeholder-color: rgba(0, 0, 0, .6);--mdc-filled-text-field-error-focus-label-text-color: #f44336;--mdc-filled-text-field-error-label-text-color: #f44336;--mdc-filled-text-field-error-caret-color: #f44336;--mdc-filled-text-field-active-indicator-color: rgba(0, 0, 0, .42);--mdc-filled-text-field-disabled-active-indicator-color: rgba(0, 0, 0, .06);--mdc-filled-text-field-hover-active-indicator-color: rgba(0, 0, 0, .87);--mdc-filled-text-field-error-active-indicator-color: #f44336;--mdc-filled-text-field-error-focus-active-indicator-color: #f44336;--mdc-filled-text-field-error-hover-active-indicator-color: #f44336;--mdc-outlined-text-field-caret-color: #4caf50;--mdc-outlined-text-field-focus-outline-color: #4caf50;--mdc-outlined-text-field-focus-label-text-color: rgba(76, 175, 80, .87);--mdc-outlined-text-field-label-text-color: rgba(0, 0, 0, .6);--mdc-outlined-text-field-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-input-text-color: rgba(0, 0, 0, .87);--mdc-outlined-text-field-disabled-input-text-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-input-text-placeholder-color: rgba(0, 0, 0, .6);--mdc-outlined-text-field-error-caret-color: #f44336;--mdc-outlined-text-field-error-focus-label-text-color: #f44336;--mdc-outlined-text-field-error-label-text-color: #f44336;--mdc-outlined-text-field-outline-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-disabled-outline-color: rgba(0, 0, 0, .06);--mdc-outlined-text-field-hover-outline-color: rgba(0, 0, 0, .87);--mdc-outlined-text-field-error-focus-outline-color: #f44336;--mdc-outlined-text-field-error-hover-outline-color: #f44336;--mdc-outlined-text-field-error-outline-color: #f44336;--mat-form-field-focus-select-arrow-color: rgba(76, 175, 80, .87);--mat-form-field-disabled-input-text-placeholder-color: rgba(0, 0, 0, .38);--mat-form-field-state-layer-color: rgba(0, 0, 0, .87);--mat-form-field-error-text-color: #f44336;--mat-form-field-select-option-text-color: inherit;--mat-form-field-select-disabled-option-text-color: GrayText;--mat-form-field-enabled-select-arrow-color: rgba(0, 0, 0, .54);--mat-form-field-disabled-select-arrow-color: rgba(0, 0, 0, .38);--mat-form-field-hover-state-layer-opacity: .04;--mat-form-field-focus-state-layer-opacity: .12}.mat-mdc-form-field.mat-accent{--mdc-filled-text-field-caret-color: #ff4081;--mdc-filled-text-field-focus-active-indicator-color: #ff4081;--mdc-filled-text-field-focus-label-text-color: rgba(255, 64, 129, .87);--mdc-outlined-text-field-caret-color: #ff4081;--mdc-outlined-text-field-focus-outline-color: #ff4081;--mdc-outlined-text-field-focus-label-text-color: rgba(255, 64, 129, .87);--mat-form-field-focus-select-arrow-color: rgba(255, 64, 129, .87)}.mat-mdc-form-field.mat-warn{--mdc-filled-text-field-caret-color: #f44336;--mdc-filled-text-field-focus-active-indicator-color: #f44336;--mdc-filled-text-field-focus-label-text-color: rgba(244, 67, 54, .87);--mdc-outlined-text-field-caret-color: #f44336;--mdc-outlined-text-field-focus-outline-color: #f44336;--mdc-outlined-text-field-focus-label-text-color: rgba(244, 67, 54, .87);--mat-form-field-focus-select-arrow-color: rgba(244, 67, 54, .87)}html{--mat-form-field-container-height: 56px;--mat-form-field-filled-label-display: block;--mat-form-field-container-vertical-padding: 16px;--mat-form-field-filled-with-label-container-padding-top: 24px;--mat-form-field-filled-with-label-container-padding-bottom: 8px}html{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(76, 175, 80, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html .mat-mdc-form-field.mat-accent{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(255, 64, 129, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html .mat-mdc-form-field.mat-warn{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(244, 67, 54, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html{--mat-autocomplete-background-color: white}html{--mdc-dialog-container-elevation-shadow: 0px 11px 15px -7px rgba(0, 0, 0, .2), 0px 24px 38px 3px rgba(0, 0, 0, .14), 0px 9px 46px 8px rgba(0, 0, 0, .12);--mdc-dialog-container-shadow-color: #000;--mdc-dialog-container-shape: 4px}html{--mdc-dialog-container-color: white;--mdc-dialog-subhead-color: rgba(0, 0, 0, .87);--mdc-dialog-supporting-text-color: rgba(0, 0, 0, .6)}.mat-mdc-standard-chip{--mdc-chip-container-shape-family: rounded;--mdc-chip-container-shape-radius: 16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family: rounded;--mdc-chip-with-avatar-avatar-shape-radius: 14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size: 28px;--mdc-chip-with-icon-icon-size: 18px}.mat-mdc-standard-chip{--mdc-chip-disabled-label-text-color: #212121;--mdc-chip-elevated-container-color: #e0e0e0;--mdc-chip-elevated-disabled-container-color: #e0e0e0;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: #212121;--mdc-chip-with-icon-icon-color: #212121;--mdc-chip-with-icon-disabled-icon-color: #212121;--mdc-chip-with-icon-selected-icon-color: #212121;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;--mdc-chip-with-trailing-icon-trailing-icon-color: #212121}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-primary,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-primary{--mdc-chip-disabled-label-text-color: rgba(0, 0, 0, .87);--mdc-chip-elevated-container-color: #4caf50;--mdc-chip-elevated-disabled-container-color: #4caf50;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-disabled-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-selected-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-trailing-icon-trailing-icon-color: rgba(0, 0, 0, .87)}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-accent,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-accent{--mdc-chip-disabled-label-text-color: white;--mdc-chip-elevated-container-color: #ff4081;--mdc-chip-elevated-disabled-container-color: #ff4081;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: white;--mdc-chip-with-icon-icon-color: white;--mdc-chip-with-icon-disabled-icon-color: white;--mdc-chip-with-icon-selected-icon-color: white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;--mdc-chip-with-trailing-icon-trailing-icon-color: white}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-warn,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-warn{--mdc-chip-disabled-label-text-color: white;--mdc-chip-elevated-container-color: #f44336;--mdc-chip-elevated-disabled-container-color: #f44336;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: white;--mdc-chip-with-icon-icon-color: white;--mdc-chip-with-icon-disabled-icon-color: white;--mdc-chip-with-icon-selected-icon-color: white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;--mdc-chip-with-trailing-icon-trailing-icon-color: white}.mat-mdc-chip.mat-mdc-standard-chip{--mdc-chip-container-height: 32px}.mdc-switch{--mdc-switch-disabled-handle-opacity: .38;--mdc-switch-disabled-selected-icon-opacity: .38;--mdc-switch-disabled-track-opacity: .12;--mdc-switch-disabled-unselected-icon-opacity: .38;--mdc-switch-handle-height: 20px;--mdc-switch-handle-shape: 10px;--mdc-switch-handle-width: 20px;--mdc-switch-selected-icon-size: 18px;--mdc-switch-track-height: 14px;--mdc-switch-track-shape: 7px;--mdc-switch-track-width: 36px;--mdc-switch-unselected-icon-size: 18px;--mdc-switch-state-layer-size: 40px;--mdc-switch-selected-focus-state-layer-opacity: .12;--mdc-switch-selected-hover-state-layer-opacity: .04;--mdc-switch-selected-pressed-state-layer-opacity: .1;--mdc-switch-unselected-focus-state-layer-opacity: .12;--mdc-switch-unselected-hover-state-layer-opacity: .04;--mdc-switch-unselected-pressed-state-layer-opacity: .1}.mat-mdc-slide-toggle{--mdc-switch-selected-focus-state-layer-color: #43a047;--mdc-switch-selected-handle-color: #43a047;--mdc-switch-selected-hover-state-layer-color: #43a047;--mdc-switch-selected-pressed-state-layer-color: #43a047;--mdc-switch-selected-focus-handle-color: #1b5e20;--mdc-switch-selected-hover-handle-color: #1b5e20;--mdc-switch-selected-pressed-handle-color: #1b5e20;--mdc-switch-selected-focus-track-color: #81c784;--mdc-switch-selected-hover-track-color: #81c784;--mdc-switch-selected-pressed-track-color: #81c784;--mdc-switch-selected-track-color: #81c784;--mdc-switch-disabled-selected-handle-color: #424242;--mdc-switch-disabled-selected-icon-color: #fff;--mdc-switch-disabled-selected-track-color: #424242;--mdc-switch-disabled-unselected-handle-color: #424242;--mdc-switch-disabled-unselected-icon-color: #fff;--mdc-switch-disabled-unselected-track-color: #424242;--mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);--mdc-switch-handle-elevation-shadow: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mdc-switch-handle-shadow-color: black;--mdc-switch-disabled-handle-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mdc-switch-selected-icon-color: #fff;--mdc-switch-unselected-focus-handle-color: #212121;--mdc-switch-unselected-focus-state-layer-color: #424242;--mdc-switch-unselected-focus-track-color: #e0e0e0;--mdc-switch-unselected-handle-color: #616161;--mdc-switch-unselected-hover-handle-color: #212121;--mdc-switch-unselected-hover-state-layer-color: #424242;--mdc-switch-unselected-hover-track-color: #e0e0e0;--mdc-switch-unselected-icon-color: #fff;--mdc-switch-unselected-pressed-handle-color: #212121;--mdc-switch-unselected-pressed-state-layer-color: #424242;--mdc-switch-unselected-pressed-track-color: #e0e0e0;--mdc-switch-unselected-track-color: #e0e0e0;--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:#00000061}.mat-mdc-slide-toggle.mat-accent{--mdc-switch-selected-focus-state-layer-color: #d81b60;--mdc-switch-selected-handle-color: #d81b60;--mdc-switch-selected-hover-state-layer-color: #d81b60;--mdc-switch-selected-pressed-state-layer-color: #d81b60;--mdc-switch-selected-focus-handle-color: #880e4f;--mdc-switch-selected-hover-handle-color: #880e4f;--mdc-switch-selected-pressed-handle-color: #880e4f;--mdc-switch-selected-focus-track-color: #f06292;--mdc-switch-selected-hover-track-color: #f06292;--mdc-switch-selected-pressed-track-color: #f06292;--mdc-switch-selected-track-color: #f06292}.mat-mdc-slide-toggle.mat-warn{--mdc-switch-selected-focus-state-layer-color: #e53935;--mdc-switch-selected-handle-color: #e53935;--mdc-switch-selected-hover-state-layer-color: #e53935;--mdc-switch-selected-pressed-state-layer-color: #e53935;--mdc-switch-selected-focus-handle-color: #b71c1c;--mdc-switch-selected-hover-handle-color: #b71c1c;--mdc-switch-selected-pressed-handle-color: #b71c1c;--mdc-switch-selected-focus-track-color: #e57373;--mdc-switch-selected-hover-track-color: #e57373;--mdc-switch-selected-pressed-track-color: #e57373;--mdc-switch-selected-track-color: #e57373}.mat-mdc-slide-toggle{--mdc-switch-state-layer-size: 48px}html{--mdc-radio-disabled-selected-icon-opacity: .38;--mdc-radio-disabled-unselected-icon-opacity: .38;--mdc-radio-state-layer-size: 40px}.mat-mdc-radio-button{--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-radio-button.mat-primary{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #4caf50;--mdc-radio-selected-hover-icon-color: #4caf50;--mdc-radio-selected-icon-color: #4caf50;--mdc-radio-selected-pressed-icon-color: #4caf50;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #4caf50;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}.mat-mdc-radio-button.mat-accent{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #ff4081;--mdc-radio-selected-hover-icon-color: #ff4081;--mdc-radio-selected-icon-color: #ff4081;--mdc-radio-selected-pressed-icon-color: #ff4081;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #ff4081;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}.mat-mdc-radio-button.mat-warn{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #f44336;--mdc-radio-selected-hover-icon-color: #f44336;--mdc-radio-selected-icon-color: #f44336;--mdc-radio-selected-pressed-icon-color: #f44336;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #f44336;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}html{--mdc-radio-state-layer-size: 40px}html{--mat-slider-value-indicator-width: auto;--mat-slider-value-indicator-height: 32px;--mat-slider-value-indicator-caret-display: block;--mat-slider-value-indicator-border-radius: 4px;--mat-slider-value-indicator-padding: 0 12px;--mat-slider-value-indicator-text-transform: none;--mat-slider-value-indicator-container-transform: translateX(-50%);--mdc-slider-active-track-height: 6px;--mdc-slider-active-track-shape: 9999px;--mdc-slider-handle-height: 20px;--mdc-slider-handle-shape: 50%;--mdc-slider-handle-width: 20px;--mdc-slider-inactive-track-height: 4px;--mdc-slider-inactive-track-shape: 9999px;--mdc-slider-with-overlap-handle-outline-width: 1px;--mdc-slider-with-tick-marks-active-container-opacity: .6;--mdc-slider-with-tick-marks-container-shape: 50%;--mdc-slider-with-tick-marks-container-size: 2px;--mdc-slider-with-tick-marks-inactive-container-opacity: .6}html{--mdc-slider-handle-color: #4caf50;--mdc-slider-focus-handle-color: #4caf50;--mdc-slider-hover-handle-color: #4caf50;--mdc-slider-active-track-color: #4caf50;--mdc-slider-inactive-track-color: #4caf50;--mdc-slider-with-tick-marks-inactive-container-color: #4caf50;--mdc-slider-with-tick-marks-active-container-color: rgba(0, 0, 0, .87);--mdc-slider-disabled-active-track-color: #000;--mdc-slider-disabled-handle-color: #000;--mdc-slider-disabled-inactive-track-color: #000;--mdc-slider-label-container-color: #000;--mdc-slider-label-label-text-color: #fff;--mdc-slider-with-overlap-handle-outline-color: #fff;--mdc-slider-with-tick-marks-disabled-container-color: #000;--mdc-slider-handle-elevation: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mat-slider-ripple-color: #4caf50;--mat-slider-hover-state-layer-color: rgba(76, 175, 80, .05);--mat-slider-focus-state-layer-color: rgba(76, 175, 80, .2);--mat-slider-value-indicator-opacity: .6}html .mat-accent{--mat-slider-ripple-color: #ff4081;--mat-slider-hover-state-layer-color: rgba(255, 64, 129, .05);--mat-slider-focus-state-layer-color: rgba(255, 64, 129, .2);--mdc-slider-handle-color: #ff4081;--mdc-slider-focus-handle-color: #ff4081;--mdc-slider-hover-handle-color: #ff4081;--mdc-slider-active-track-color: #ff4081;--mdc-slider-inactive-track-color: #ff4081;--mdc-slider-with-tick-marks-inactive-container-color: #ff4081;--mdc-slider-with-tick-marks-active-container-color: white}html .mat-warn{--mat-slider-ripple-color: #f44336;--mat-slider-hover-state-layer-color: rgba(244, 67, 54, .05);--mat-slider-focus-state-layer-color: rgba(244, 67, 54, .2);--mdc-slider-handle-color: #f44336;--mdc-slider-focus-handle-color: #f44336;--mdc-slider-hover-handle-color: #f44336;--mdc-slider-active-track-color: #f44336;--mdc-slider-inactive-track-color: #f44336;--mdc-slider-with-tick-marks-inactive-container-color: #f44336;--mdc-slider-with-tick-marks-active-container-color: white}html{--mat-menu-container-shape: 4px}html{--mat-menu-item-label-text-color: rgba(0, 0, 0, .87);--mat-menu-item-icon-color: rgba(0, 0, 0, .87);--mat-menu-item-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-menu-item-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-menu-container-color: white}html{--mdc-list-list-item-container-shape: 0;--mdc-list-list-item-leading-avatar-shape: 50%;--mdc-list-list-item-container-color: transparent;--mdc-list-list-item-selected-container-color: transparent;--mdc-list-list-item-leading-avatar-color: transparent;--mdc-list-list-item-leading-icon-size: 24px;--mdc-list-list-item-leading-avatar-size: 40px;--mdc-list-list-item-trailing-icon-size: 24px;--mdc-list-list-item-disabled-state-layer-color: transparent;--mdc-list-list-item-disabled-state-layer-opacity: 0;--mdc-list-list-item-disabled-label-text-opacity: .38;--mdc-list-list-item-disabled-leading-icon-opacity: .38;--mdc-list-list-item-disabled-trailing-icon-opacity: .38}html{--mdc-list-list-item-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, .54);--mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, .38);--mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-disabled-label-text-color: black;--mdc-list-list-item-disabled-leading-icon-color: black;--mdc-list-list-item-disabled-trailing-icon-color: black;--mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-hover-state-layer-color: black;--mdc-list-list-item-hover-state-layer-opacity: .04;--mdc-list-list-item-focus-state-layer-color: black;--mdc-list-list-item-focus-state-layer-opacity: .12}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #4caf50;--mdc-radio-selected-hover-icon-color: #4caf50;--mdc-radio-selected-icon-color: #4caf50;--mdc-radio-selected-pressed-icon-color: #4caf50}.mat-accent .mdc-list-item__start,.mat-accent .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #ff4081;--mdc-radio-selected-hover-icon-color: #ff4081;--mdc-radio-selected-icon-color: #ff4081;--mdc-radio-selected-pressed-icon-color: #ff4081}.mat-warn .mdc-list-item__start,.mat-warn .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #f44336;--mdc-radio-selected-hover-icon-color: #f44336;--mdc-radio-selected-icon-color: #f44336;--mdc-radio-selected-pressed-icon-color: #f44336}.mat-mdc-list-option{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #000;--mdc-checkbox-selected-focus-icon-color: #4caf50;--mdc-checkbox-selected-hover-icon-color: #4caf50;--mdc-checkbox-selected-icon-color: #4caf50;--mdc-checkbox-selected-pressed-icon-color: #4caf50;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #4caf50;--mdc-checkbox-selected-hover-state-layer-color: #4caf50;--mdc-checkbox-selected-pressed-state-layer-color: #4caf50;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-option.mat-accent{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #ff4081;--mdc-checkbox-selected-hover-icon-color: #ff4081;--mdc-checkbox-selected-icon-color: #ff4081;--mdc-checkbox-selected-pressed-icon-color: #ff4081;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #ff4081;--mdc-checkbox-selected-hover-state-layer-color: #ff4081;--mdc-checkbox-selected-pressed-state-layer-color: #ff4081;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-option.mat-warn{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #f44336;--mdc-checkbox-selected-hover-icon-color: #f44336;--mdc-checkbox-selected-icon-color: #f44336;--mdc-checkbox-selected-pressed-icon-color: #f44336;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #f44336;--mdc-checkbox-selected-hover-state-layer-color: #f44336;--mdc-checkbox-selected-pressed-state-layer-color: #f44336;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:#4caf50}.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end{opacity:1}html{--mdc-list-list-item-one-line-container-height: 48px;--mdc-list-list-item-two-line-container-height: 64px;--mdc-list-list-item-three-line-container-height: 88px}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-state-layer-size: 40px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}html{--mat-paginator-container-text-color: rgba(0, 0, 0, .87);--mat-paginator-container-background-color: white;--mat-paginator-enabled-icon-color: rgba(0, 0, 0, .54);--mat-paginator-disabled-icon-color: rgba(0, 0, 0, .12)}html{--mat-paginator-container-size: 56px}.mat-mdc-paginator{--mat-form-field-container-height: 40px;--mat-form-field-filled-label-display: none;--mat-form-field-container-vertical-padding: 8px;--mat-form-field-filled-with-label-container-padding-top: 8px;--mat-form-field-filled-with-label-container-padding-bottom: 8px}html{--mdc-tab-indicator-active-indicator-height: 2px;--mdc-tab-indicator-active-indicator-shape: 0;--mdc-secondary-navigation-tab-container-height: 48px;--mat-tab-header-divider-color: transparent;--mat-tab-header-divider-height: 0}.mat-mdc-tab-group,.mat-mdc-tab-nav-bar{--mdc-tab-indicator-active-indicator-color: #4caf50;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #4caf50;--mat-tab-header-active-ripple-color: #4caf50;--mat-tab-header-inactive-ripple-color: #4caf50;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #4caf50;--mat-tab-header-active-hover-label-text-color: #4caf50;--mat-tab-header-active-focus-indicator-color: #4caf50;--mat-tab-header-active-hover-indicator-color: #4caf50}.mat-mdc-tab-group.mat-accent,.mat-mdc-tab-nav-bar.mat-accent{--mdc-tab-indicator-active-indicator-color: #ff4081;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #ff4081;--mat-tab-header-active-ripple-color: #ff4081;--mat-tab-header-inactive-ripple-color: #ff4081;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #ff4081;--mat-tab-header-active-hover-label-text-color: #ff4081;--mat-tab-header-active-focus-indicator-color: #ff4081;--mat-tab-header-active-hover-indicator-color: #ff4081}.mat-mdc-tab-group.mat-warn,.mat-mdc-tab-nav-bar.mat-warn{--mdc-tab-indicator-active-indicator-color: #f44336;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #f44336;--mat-tab-header-active-ripple-color: #f44336;--mat-tab-header-inactive-ripple-color: #f44336;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #f44336;--mat-tab-header-active-hover-label-text-color: #f44336;--mat-tab-header-active-focus-indicator-color: #f44336;--mat-tab-header-active-hover-indicator-color: #f44336}.mat-mdc-tab-group.mat-background-primary,.mat-mdc-tab-nav-bar.mat-background-primary{--mat-tab-header-with-background-background-color: #4caf50;--mat-tab-header-with-background-foreground-color: rgba(0, 0, 0, .87)}.mat-mdc-tab-group.mat-background-accent,.mat-mdc-tab-nav-bar.mat-background-accent{--mat-tab-header-with-background-background-color: #ff4081;--mat-tab-header-with-background-foreground-color: white}.mat-mdc-tab-group.mat-background-warn,.mat-mdc-tab-nav-bar.mat-background-warn{--mat-tab-header-with-background-background-color: #f44336;--mat-tab-header-with-background-foreground-color: white}.mat-mdc-tab-header{--mdc-secondary-navigation-tab-container-height: 48px}html{--mdc-checkbox-disabled-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-state-layer-opacity: .16;--mdc-checkbox-selected-hover-state-layer-opacity: .04;--mdc-checkbox-selected-pressed-state-layer-opacity: .16;--mdc-checkbox-unselected-focus-state-layer-opacity: .16;--mdc-checkbox-unselected-hover-state-layer-opacity: .04;--mdc-checkbox-unselected-pressed-state-layer-opacity: .16}html{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #ff4081;--mdc-checkbox-selected-hover-icon-color: #ff4081;--mdc-checkbox-selected-icon-color: #ff4081;--mdc-checkbox-selected-pressed-icon-color: #ff4081;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #ff4081;--mdc-checkbox-selected-hover-state-layer-color: #ff4081;--mdc-checkbox-selected-pressed-state-layer-color: #ff4081;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox{--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-checkbox.mat-primary{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #000;--mdc-checkbox-selected-focus-icon-color: #4caf50;--mdc-checkbox-selected-hover-icon-color: #4caf50;--mdc-checkbox-selected-icon-color: #4caf50;--mdc-checkbox-selected-pressed-icon-color: #4caf50;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #4caf50;--mdc-checkbox-selected-hover-state-layer-color: #4caf50;--mdc-checkbox-selected-pressed-state-layer-color: #4caf50;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox.mat-warn{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #f44336;--mdc-checkbox-selected-hover-icon-color: #f44336;--mdc-checkbox-selected-icon-color: #f44336;--mdc-checkbox-selected-pressed-icon-color: #f44336;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #f44336;--mdc-checkbox-selected-hover-state-layer-color: #f44336;--mdc-checkbox-selected-pressed-state-layer-color: #f44336;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{color:#00000061}html{--mdc-checkbox-state-layer-size: 40px}html{--mdc-text-button-container-shape: 4px;--mdc-text-button-keep-touch-target: false;--mdc-filled-button-container-shape: 4px;--mdc-filled-button-keep-touch-target: false;--mdc-protected-button-container-shape: 4px;--mdc-protected-button-keep-touch-target: false;--mdc-outlined-button-keep-touch-target: false;--mdc-outlined-button-outline-width: 1px;--mdc-outlined-button-container-shape: 4px}html{--mdc-text-button-label-text-color: #000;--mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mat-text-button-state-layer-color: #000;--mat-text-button-disabled-state-layer-color: #000;--mat-text-button-ripple-color: rgba(0, 0, 0, .1);--mat-text-button-hover-state-layer-opacity: .04;--mat-text-button-focus-state-layer-opacity: .12;--mat-text-button-pressed-state-layer-opacity: .12;--mdc-filled-button-container-color: white;--mdc-filled-button-label-text-color: #000;--mdc-filled-button-disabled-container-color: rgba(0, 0, 0, .12);--mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mat-filled-button-state-layer-color: #000;--mat-filled-button-disabled-state-layer-color: #000;--mat-filled-button-ripple-color: rgba(0, 0, 0, .1);--mat-filled-button-hover-state-layer-opacity: .04;--mat-filled-button-focus-state-layer-opacity: .12;--mat-filled-button-pressed-state-layer-opacity: .12;--mdc-protected-button-container-color: white;--mdc-protected-button-label-text-color: #000;--mdc-protected-button-disabled-container-color: rgba(0, 0, 0, .12);--mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-protected-button-container-elevation-shadow: 0px 3px 1px -2px rgba(0, 0, 0, .2), 0px 2px 2px 0px rgba(0, 0, 0, .14), 0px 1px 5px 0px rgba(0, 0, 0, .12);--mdc-protected-button-disabled-container-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mdc-protected-button-focus-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, .2), 0px 4px 5px 0px rgba(0, 0, 0, .14), 0px 1px 10px 0px rgba(0, 0, 0, .12);--mdc-protected-button-hover-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, .2), 0px 4px 5px 0px rgba(0, 0, 0, .14), 0px 1px 10px 0px rgba(0, 0, 0, .12);--mdc-protected-button-pressed-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-protected-button-container-shadow-color: #000;--mat-protected-button-state-layer-color: #000;--mat-protected-button-disabled-state-layer-color: #000;--mat-protected-button-ripple-color: rgba(0, 0, 0, .1);--mat-protected-button-hover-state-layer-opacity: .04;--mat-protected-button-focus-state-layer-opacity: .12;--mat-protected-button-pressed-state-layer-opacity: .12;--mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, .12);--mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-outlined-button-label-text-color: #000;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #000;--mat-outlined-button-disabled-state-layer-color: #000;--mat-outlined-button-ripple-color: rgba(0, 0, 0, .1);--mat-outlined-button-hover-state-layer-opacity: .04;--mat-outlined-button-focus-state-layer-opacity: .12;--mat-outlined-button-pressed-state-layer-opacity: .12}.mat-mdc-button.mat-primary{--mdc-text-button-label-text-color: #4caf50;--mat-text-button-state-layer-color: #4caf50;--mat-text-button-ripple-color: rgba(76, 175, 80, .1)}.mat-mdc-button.mat-accent{--mdc-text-button-label-text-color: #ff4081;--mat-text-button-state-layer-color: #ff4081;--mat-text-button-ripple-color: rgba(255, 64, 129, .1)}.mat-mdc-button.mat-warn{--mdc-text-button-label-text-color: #f44336;--mat-text-button-state-layer-color: #f44336;--mat-text-button-ripple-color: rgba(244, 67, 54, .1)}.mat-mdc-unelevated-button.mat-primary{--mdc-filled-button-container-color: #4caf50;--mdc-filled-button-label-text-color: #000;--mat-filled-button-state-layer-color: #000;--mat-filled-button-ripple-color: rgba(0, 0, 0, .1)}.mat-mdc-unelevated-button.mat-accent{--mdc-filled-button-container-color: #ff4081;--mdc-filled-button-label-text-color: #fff;--mat-filled-button-state-layer-color: #fff;--mat-filled-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-unelevated-button.mat-warn{--mdc-filled-button-container-color: #f44336;--mdc-filled-button-label-text-color: #fff;--mat-filled-button-state-layer-color: #fff;--mat-filled-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-raised-button.mat-primary{--mdc-protected-button-container-color: #4caf50;--mdc-protected-button-label-text-color: #000;--mat-protected-button-state-layer-color: #000;--mat-protected-button-ripple-color: rgba(0, 0, 0, .1)}.mat-mdc-raised-button.mat-accent{--mdc-protected-button-container-color: #ff4081;--mdc-protected-button-label-text-color: #fff;--mat-protected-button-state-layer-color: #fff;--mat-protected-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-raised-button.mat-warn{--mdc-protected-button-container-color: #f44336;--mdc-protected-button-label-text-color: #fff;--mat-protected-button-state-layer-color: #fff;--mat-protected-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-outlined-button.mat-primary{--mdc-outlined-button-label-text-color: #4caf50;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #4caf50;--mat-outlined-button-ripple-color: rgba(76, 175, 80, .1)}.mat-mdc-outlined-button.mat-accent{--mdc-outlined-button-label-text-color: #ff4081;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #ff4081;--mat-outlined-button-ripple-color: rgba(255, 64, 129, .1)}.mat-mdc-outlined-button.mat-warn{--mdc-outlined-button-label-text-color: #f44336;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #f44336;--mat-outlined-button-ripple-color: rgba(244, 67, 54, .1)}html{--mdc-text-button-container-height: 36px;--mdc-filled-button-container-height: 36px;--mdc-outlined-button-container-height: 36px;--mdc-protected-button-container-height: 36px}html{--mdc-icon-button-state-layer-size: 48px;--mdc-icon-button-icon-size: 24px}html{--mdc-icon-button-icon-color: inherit;--mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, .38);--mat-icon-button-state-layer-color: #000;--mat-icon-button-disabled-state-layer-color: #000;--mat-icon-button-ripple-color: rgba(0, 0, 0, .1);--mat-icon-button-hover-state-layer-opacity: .04;--mat-icon-button-focus-state-layer-opacity: .12;--mat-icon-button-pressed-state-layer-opacity: .12}html .mat-mdc-icon-button.mat-primary{--mdc-icon-button-icon-color: #4caf50;--mat-icon-button-state-layer-color: #4caf50;--mat-icon-button-ripple-color: rgba(76, 175, 80, .1)}html .mat-mdc-icon-button.mat-accent{--mdc-icon-button-icon-color: #ff4081;--mat-icon-button-state-layer-color: #ff4081;--mat-icon-button-ripple-color: rgba(255, 64, 129, .1)}html .mat-mdc-icon-button.mat-warn{--mdc-icon-button-icon-color: #f44336;--mat-icon-button-state-layer-color: #f44336;--mat-icon-button-ripple-color: rgba(244, 67, 54, .1)}.mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size: 48px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:12px}html{--mdc-fab-container-shape: 50%;--mdc-fab-icon-size: 24px}html{--mdc-fab-container-color: white;--mdc-fab-container-elevation-shadow: 0px 3px 5px -1px rgba(0, 0, 0, .2), 0px 6px 10px 0px rgba(0, 0, 0, .14), 0px 1px 18px 0px rgba(0, 0, 0, .12);--mdc-fab-focus-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-fab-hover-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-fab-pressed-container-elevation-shadow: 0px 7px 8px -4px rgba(0, 0, 0, .2), 0px 12px 17px 2px rgba(0, 0, 0, .14), 0px 5px 22px 4px rgba(0, 0, 0, .12);--mdc-fab-container-shadow-color: #000;--mat-fab-foreground-color: black;--mat-fab-state-layer-color: #000;--mat-fab-disabled-state-layer-color: #000;--mat-fab-ripple-color: rgba(0, 0, 0, .1);--mat-fab-hover-state-layer-opacity: .04;--mat-fab-focus-state-layer-opacity: .12;--mat-fab-pressed-state-layer-opacity: .12;--mat-fab-disabled-state-container-color: rgba(0, 0, 0, .12);--mat-fab-disabled-state-foreground-color: rgba(0, 0, 0, .38);--mdc-extended-fab-container-elevation-shadow: 0px 3px 5px -1px rgba(0, 0, 0, .2), 0px 6px 10px 0px rgba(0, 0, 0, .14), 0px 1px 18px 0px rgba(0, 0, 0, .12);--mdc-extended-fab-focus-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-extended-fab-hover-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-extended-fab-pressed-container-elevation-shadow: 0px 7px 8px -4px rgba(0, 0, 0, .2), 0px 12px 17px 2px rgba(0, 0, 0, .14), 0px 5px 22px 4px rgba(0, 0, 0, .12);--mdc-extended-fab-container-shadow-color: #000}html .mat-mdc-fab.mat-primary,html .mat-mdc-mini-fab.mat-primary{--mdc-fab-container-color: #4caf50;--mat-fab-foreground-color: #000;--mat-fab-state-layer-color: #000;--mat-fab-ripple-color: rgba(0, 0, 0, .1)}html .mat-mdc-fab.mat-accent,html .mat-mdc-mini-fab.mat-accent{--mdc-fab-container-color: #ff4081;--mat-fab-foreground-color: #fff;--mat-fab-state-layer-color: #fff;--mat-fab-ripple-color: rgba(255, 255, 255, .1)}html .mat-mdc-fab.mat-warn,html .mat-mdc-mini-fab.mat-warn{--mdc-fab-container-color: #f44336;--mat-fab-foreground-color: #fff;--mat-fab-state-layer-color: #fff;--mat-fab-ripple-color: rgba(255, 255, 255, .1)}html{--mdc-snackbar-container-shape: 4px}html{--mdc-snackbar-container-color: #333333;--mdc-snackbar-supporting-text-color: rgba(255, 255, 255, .87);--mat-snack-bar-button-color: #ff4081}html{--mat-table-row-item-outline-width: 1px}html{--mat-table-background-color: white;--mat-table-header-headline-color: rgba(0, 0, 0, .87);--mat-table-row-item-label-text-color: rgba(0, 0, 0, .87);--mat-table-row-item-outline-color: rgba(0, 0, 0, .12)}html{--mat-table-header-container-height: 56px;--mat-table-footer-container-height: 52px;--mat-table-row-item-container-height: 52px}html{--mdc-circular-progress-active-indicator-width: 4px;--mdc-circular-progress-size: 48px}html{--mdc-circular-progress-active-indicator-color: #4caf50}html .mat-accent{--mdc-circular-progress-active-indicator-color: #ff4081}html .mat-warn{--mdc-circular-progress-active-indicator-color: #f44336}.mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform .2s ease-in-out;transform:scale(.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:Roboto,sans-serif;font-family:var(--mat-badge-text-font, Roboto, sans-serif);font-size:12px;font-size:var(--mat-badge-text-size, 12px);font-weight:600;font-weight:var(--mat-badge-text-weight, 600)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px;font-size:9px;font-size:var(--mat-badge-small-size-text-size, 9px)}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px;font-size:24px;font-size:var(--mat-badge-large-size-text-size, 24px)}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}html{--mat-badge-background-color: #4caf50;--mat-badge-text-color: rgba(0, 0, 0, .87);--mat-badge-disabled-state-background-color: #b9b9b9;--mat-badge-disabled-state-text-color: rgba(0, 0, 0, .38)}.mat-badge-accent{--mat-badge-background-color: #ff4081;--mat-badge-text-color: white}.mat-badge-warn{--mat-badge-background-color: #f44336;--mat-badge-text-color: white}html{--mat-bottom-sheet-container-shape: 4px}html{--mat-bottom-sheet-container-text-color: rgba(0, 0, 0, .87);--mat-bottom-sheet-container-background-color: white}html{--mat-legacy-button-toggle-height: 36px;--mat-legacy-button-toggle-shape: 2px;--mat-legacy-button-toggle-focus-state-layer-opacity: 1;--mat-standard-button-toggle-shape: 4px;--mat-standard-button-toggle-hover-state-layer-opacity: .04;--mat-standard-button-toggle-focus-state-layer-opacity: .12}html{--mat-legacy-button-toggle-text-color: rgba(0, 0, 0, .38);--mat-legacy-button-toggle-state-layer-color: rgba(0, 0, 0, .12);--mat-legacy-button-toggle-selected-state-text-color: rgba(0, 0, 0, .54);--mat-legacy-button-toggle-selected-state-background-color: #e0e0e0;--mat-legacy-button-toggle-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-legacy-button-toggle-disabled-state-background-color: #eeeeee;--mat-legacy-button-toggle-disabled-selected-state-background-color: #bdbdbd;--mat-standard-button-toggle-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-background-color: white;--mat-standard-button-toggle-state-layer-color: black;--mat-standard-button-toggle-selected-state-background-color: #e0e0e0;--mat-standard-button-toggle-selected-state-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-standard-button-toggle-disabled-state-background-color: white;--mat-standard-button-toggle-disabled-selected-state-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-disabled-selected-state-background-color: #bdbdbd;--mat-standard-button-toggle-divider-color: #e0e0e0}html{--mat-standard-button-toggle-height: 48px}html{--mat-datepicker-calendar-date-selected-state-text-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-selected-state-background-color: #4caf50;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(76, 175, 80, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-focus-state-background-color: rgba(76, 175, 80, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(76, 175, 80, .3);--mat-datepicker-toggle-active-state-icon-color: #4caf50;--mat-datepicker-calendar-date-in-range-state-background-color: rgba(76, 175, 80, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;--mat-datepicker-toggle-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-body-label-text-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-period-button-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-navigation-button-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-header-divider-color: rgba(0, 0, 0, .12);--mat-datepicker-calendar-header-text-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-date-today-outline-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-date-today-disabled-state-outline-color: rgba(0, 0, 0, .18);--mat-datepicker-calendar-date-text-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-outline-color: transparent;--mat-datepicker-calendar-date-disabled-state-text-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-date-preview-state-outline-color: rgba(0, 0, 0, .24);--mat-datepicker-range-input-separator-color: rgba(0, 0, 0, .87);--mat-datepicker-range-input-disabled-state-separator-color: rgba(0, 0, 0, .38);--mat-datepicker-range-input-disabled-state-text-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-container-background-color: white;--mat-datepicker-calendar-container-text-color: rgba(0, 0, 0, .87)}.mat-datepicker-content.mat-accent{--mat-datepicker-calendar-date-selected-state-text-color: white;--mat-datepicker-calendar-date-selected-state-background-color: #ff4081;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(255, 64, 129, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: white;--mat-datepicker-calendar-date-focus-state-background-color: rgba(255, 64, 129, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(255, 64, 129, .3);--mat-datepicker-calendar-date-in-range-state-background-color: rgba(255, 64, 129, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e}.mat-datepicker-content.mat-warn{--mat-datepicker-calendar-date-selected-state-text-color: white;--mat-datepicker-calendar-date-selected-state-background-color: #f44336;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(244, 67, 54, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: white;--mat-datepicker-calendar-date-focus-state-background-color: rgba(244, 67, 54, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(244, 67, 54, .3);--mat-datepicker-calendar-date-in-range-state-background-color: rgba(244, 67, 54, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e}.mat-datepicker-toggle-active.mat-accent{--mat-datepicker-toggle-active-state-icon-color: #ff4081}.mat-datepicker-toggle-active.mat-warn{--mat-datepicker-toggle-active-state-icon-color: #f44336}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size: 40px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:8px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target{display:none}html{--mat-divider-width: 1px}html{--mat-divider-color: rgba(0, 0, 0, .12)}html{--mat-expansion-container-shape: 4px}html{--mat-expansion-container-background-color: white;--mat-expansion-container-text-color: rgba(0, 0, 0, .87);--mat-expansion-actions-divider-color: rgba(0, 0, 0, .12);--mat-expansion-header-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-expansion-header-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-expansion-header-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-expansion-header-text-color: rgba(0, 0, 0, .87);--mat-expansion-header-description-color: rgba(0, 0, 0, .54);--mat-expansion-header-indicator-color: rgba(0, 0, 0, .54)}html{--mat-expansion-header-collapsed-state-height: 48px;--mat-expansion-header-expanded-state-height: 64px}html{--mat-icon-color: inherit}.mat-icon.mat-primary{--mat-icon-color: #4caf50}.mat-icon.mat-accent{--mat-icon-color: #ff4081}.mat-icon.mat-warn{--mat-icon-color: #f44336}html{--mat-sidenav-container-shape: 0}html{--mat-sidenav-container-divider-color: rgba(0, 0, 0, .12);--mat-sidenav-container-background-color: white;--mat-sidenav-container-text-color: rgba(0, 0, 0, .87);--mat-sidenav-content-background-color: #fafafa;--mat-sidenav-content-text-color: rgba(0, 0, 0, .87);--mat-sidenav-scrim-color: rgba(0, 0, 0, .6)}html{--mat-stepper-header-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-selected-state-icon-background-color: #4caf50;--mat-stepper-header-selected-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-done-state-icon-background-color: #4caf50;--mat-stepper-header-done-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-edit-state-icon-background-color: #4caf50;--mat-stepper-header-edit-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-container-color: white;--mat-stepper-line-color: rgba(0, 0, 0, .12);--mat-stepper-header-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-stepper-header-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-stepper-header-label-text-color: rgba(0, 0, 0, .54);--mat-stepper-header-optional-label-text-color: rgba(0, 0, 0, .54);--mat-stepper-header-selected-state-label-text-color: rgba(0, 0, 0, .87);--mat-stepper-header-error-state-label-text-color: #f44336;--mat-stepper-header-icon-background-color: rgba(0, 0, 0, .54);--mat-stepper-header-error-state-icon-foreground-color: #f44336;--mat-stepper-header-error-state-icon-background-color: transparent}html .mat-step-header.mat-accent{--mat-stepper-header-icon-foreground-color: white;--mat-stepper-header-selected-state-icon-background-color: #ff4081;--mat-stepper-header-selected-state-icon-foreground-color: white;--mat-stepper-header-done-state-icon-background-color: #ff4081;--mat-stepper-header-done-state-icon-foreground-color: white;--mat-stepper-header-edit-state-icon-background-color: #ff4081;--mat-stepper-header-edit-state-icon-foreground-color: white}html .mat-step-header.mat-warn{--mat-stepper-header-icon-foreground-color: white;--mat-stepper-header-selected-state-icon-background-color: #f44336;--mat-stepper-header-selected-state-icon-foreground-color: white;--mat-stepper-header-done-state-icon-background-color: #f44336;--mat-stepper-header-done-state-icon-foreground-color: white;--mat-stepper-header-edit-state-icon-background-color: #f44336;--mat-stepper-header-edit-state-icon-foreground-color: white}html{--mat-stepper-header-height: 72px}html{--mat-sort-arrow-color: #757575}html{--mat-toolbar-container-background-color: whitesmoke;--mat-toolbar-container-text-color: rgba(0, 0, 0, .87)}.mat-toolbar.mat-primary{--mat-toolbar-container-background-color: #4caf50;--mat-toolbar-container-text-color: rgba(0, 0, 0, .87)}.mat-toolbar.mat-accent{--mat-toolbar-container-background-color: #ff4081;--mat-toolbar-container-text-color: white}.mat-toolbar.mat-warn{--mat-toolbar-container-background-color: #f44336;--mat-toolbar-container-text-color: white}html{--mat-toolbar-standard-height: 64px;--mat-toolbar-mobile-height: 56px}html{--mat-tree-container-background-color: white;--mat-tree-node-text-color: rgba(0, 0, 0, .87)}html{--mat-tree-node-min-height: 48px}header{display:block;background:#202020;background-position:30px center;background-repeat:no-repeat;background-size:auto 40%;margin:0;padding-top:35px;padding-bottom:-20px;min-height:50px;text-align:center;color:#fff}header #appTitle{font-size:xx-large;font-weight:bolder;color:#65a800}body{font-family:Roboto,Helvetica Neue,sans-serif;background-color:#65a800;margin:0;padding:0;overflow-y:hidden;overflow-x:hidden;-webkit-user-select:none;user-select:none}footer{display:block;background-color:#202020;min-width:100%;width:auto;margin:0;padding:2px 0;color:#fff;font-size:smaller;text-align:left}footer .wh-text{color:#65a800;margin:0 10px}footer .infoLinks{text-align:right;position:fixed;right:0;margin-right:30px}footer .infoLinks a{color:#fff;margin-left:10px;text-decoration:none}footer .infoLinks a:hover{color:#65a800}\\n\"] }]\n        }] });","originalLength":145030,"removedExports":[],"renderedExports":["FooterComponent"],"renderedLength":142692},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/header/header.component.mjs":{"code":"class HeaderComponent {\n    constructor() {\n        this.title = \"\";\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: HeaderComponent, isStandalone: true, selector: \"app-header\", inputs: { title: \"title\" }, ngImport: i0, template: \"<header>\\n    <span id=\\\"appTitle\\\">{{ title }}</span>\\n    <a href=\\\"/THI\\\">\\n      <img\\n        src=\\\"assets/THIOnlineLogo_BoxOffen_small.png\\\"\\n        alt=\\\"THIOnline-Logo\\\"\\n        id=\\\"THILogo\\\"\\n        style=\\\"\\n                  position: absolute;\\n                  right: 30px;\\n                  height: 50px;\\n                  width: auto;\\n                  float: right;\\n                  top: 15px;\\n              \\\"\\n        height=\\\"77\\\" width=\\\"100\\\"/>\\n    </a>\\n  </header>\\n  \", styles: [\"\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HeaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-header', standalone: true, imports: [], template: \"<header>\\n    <span id=\\\"appTitle\\\">{{ title }}</span>\\n    <a href=\\\"/THI\\\">\\n      <img\\n        src=\\\"assets/THIOnlineLogo_BoxOffen_small.png\\\"\\n        alt=\\\"THIOnline-Logo\\\"\\n        id=\\\"THILogo\\\"\\n        style=\\\"\\n                  position: absolute;\\n                  right: 30px;\\n                  height: 50px;\\n                  width: auto;\\n                  float: right;\\n                  top: 15px;\\n              \\\"\\n        height=\\\"77\\\" width=\\\"100\\\"/>\\n    </a>\\n  </header>\\n  \" }]\n        }], propDecorators: { title: [{\n                type: Input\n            }] } });","originalLength":3658,"removedExports":[],"renderedExports":["HeaderComponent"],"renderedLength":1829},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/input/input.component.mjs":{"code":"class InputComponent {\n    constructor(service) {\n        this.service = service;\n        this.title = '';\n    }\n    ngOnInit() {\n        this.setContent('');\n    }\n    setContent(tapecontent) {\n        this.service.inputChanged(tapecontent);\n    }\n    updateContent(event) {\n        this.setContent(event.target.value);\n    }\n    isReady() {\n        return this.service.isStartStateDefined();\n    }\n    isAccepting() {\n        return this.service.isAccepting();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: InputComponent, deps: [{ token: StatemachineService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: InputComponent, isStandalone: true, selector: \"app-input\", inputs: { title: \"title\" }, ngImport: i0, template: \"<span>{{ title }}:</span>\\n<input\\n  type=\\\"text\\\"\\n  autocomplete=\\\"off\\\"\\n  [ngClass]=\\\"{\\n    tapeInput: true,\\n    accepting: isReady() && isAccepting(),\\n    notAccepting: isReady() && !isAccepting() \\n  }\\\"\\n  (input)=\\\"updateContent($event)\\\"\\n/>\\n\", styles: [\":host{display:flex;flex-direction:row;justify-content:space-between;align-items:center;margin:10px;gap:10px}.tapeInput{border-radius:5px;border-width:2px;border-style:solid;box-sizing:border-box;height:30px;font-size:large}.accepting{border-color:green}.notAccepting{border-color:red}span{font-size:large}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: InputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-input', standalone: true, imports: [CommonModule], template: \"<span>{{ title }}:</span>\\n<input\\n  type=\\\"text\\\"\\n  autocomplete=\\\"off\\\"\\n  [ngClass]=\\\"{\\n    tapeInput: true,\\n    accepting: isReady() && isAccepting(),\\n    notAccepting: isReady() && !isAccepting() \\n  }\\\"\\n  (input)=\\\"updateContent($event)\\\"\\n/>\\n\", styles: [\":host{display:flex;flex-direction:row;justify-content:space-between;align-items:center;margin:10px;gap:10px}.tapeInput{border-radius:5px;border-width:2px;border-style:solid;box-sizing:border-box;height:30px;font-size:large}.accepting{border-color:green}.notAccepting{border-color:red}span{font-size:large}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }], propDecorators: { title: [{\n                type: Input\n            }] } });","originalLength":5681,"removedExports":[],"renderedExports":["InputComponent"],"renderedLength":2601},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/menu/menu.component.mjs":{"code":"class MenuComponent {\n    constructor(service, http) {\n        this.service = service;\n        this.http = http;\n        this.vorlesungsbeispiele = [];\n        this.uebungsaufgaben = [];\n    }\n    ngOnInit() {\n        this.loadConfig();\n    }\n    createNewInstance() {\n        this.service.createNewInstance();\n    }\n    loadFromBrowserCache() {\n        this.service.loadFromBrowserCache();\n    }\n    saveToBrowserCache() {\n        this.service.saveToBrowserCache();\n    }\n    createInstanceFromJSON(configuration) {\n        this.service.createInstanceFromJSON(configuration);\n    }\n    saveToLocalStorage() {\n        this.service.saveToLocalStorage();\n    }\n    openHelpDialog() {\n        this.service.openHelpDialog();\n    }\n    onFileUpload(e) {\n        const target = e.target;\n        const files = target.files;\n        const file = files[0];\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const content = reader.result;\n            this.createInstanceFromJSON(JSON.parse(content));\n        };\n        reader.readAsText(file);\n        target.value = '';\n    }\n    loadConfig() {\n        const url = `assets/config.json`;\n        this.http.get(url).subscribe({\n            next: (config) => {\n                // Hier kann man dann loadTasks etc. aufrufen\n                this.loadTasks('Vorlesungsbeispiele', this.vorlesungsbeispiele, config);\n                this.loadTasks('Uebungsaufgaben', this.uebungsaufgaben, config);\n            },\n            error: (error) => {\n                console.error('Failed to load config:', error);\n            }\n        });\n    }\n    async loadTasks(type, targetArray, config) {\n        const tasks = config[type];\n        if (tasks && Array.isArray(tasks)) {\n            for (const [index, task] of tasks.entries()) {\n                const url = `assets/${type}/${task.filename}.json`;\n                try {\n                    const data = await firstValueFrom(this.http.get(url));\n                    targetArray[index] = data;\n                }\n                catch (error) {\n                    console.error(`Failed to load ${type}/${task.filename}:`, error);\n                }\n            }\n        }\n        else {\n            console.warn(`No tasks found for type: ${type}`);\n        }\n    }\n    async fetchJSON(type, name) {\n        const response = await fetch((this.baseURL || '') + '/assets/' + type + '/' + name + '.json');\n        const json = await response.json();\n        return json;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: MenuComponent, deps: [{ token: StatemachineService }, { token: i2$1.HttpClient }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: MenuComponent, isStandalone: true, selector: \"app-menu\", inputs: { baseURL: \"baseURL\" }, ngImport: i0, template: \"<button mat-icon-button [matMenuTriggerFor]=\\\"settingsMenu\\\" aria-label=\\\"Men\\u00FC \\u00F6ffnen\\\">\\n    <mat-icon>menu</mat-icon>\\n</button>\\n\\n<mat-menu #settingsMenu class=\\\"myMenuItem\\\">\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"createNewInstance()\\\">\\n        <mat-icon>fiber_new</mat-icon>Neue Instanz\\n    </button>\\n\\n    <label for=\\\"inputTag\\\">\\n        <menu mat-menu-item class=\\\"myMenuItem\\\">\\n            <mat-icon>file_upload</mat-icon>\\n            Laden aus Datei\\n            <input (change)=\\\"onFileUpload($event)\\\" id=\\\"inputTag\\\" type=\\\"file\\\"/>\\n        </menu>\\n    </label>\\n\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"saveToLocalStorage()\\\">\\n        <mat-icon>file_download</mat-icon>Speichern in Datei\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Uebungsaufgaben\\\">\\n        <mat-icon>open_in_browser</mat-icon>\\u00DCbungsaufgaben laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Vorlesungsbeispiele\\\">\\n        <mat-icon>open_in_browser</mat-icon>Vorlesungsbeispiele laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"openHelpDialog()\\\">\\n        <mat-icon>help</mat-icon>Hilfe\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Vorlesungsbeispiele>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of vorlesungsbeispiele\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Uebungsaufgaben>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of uebungsaufgaben\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\", styles: [\"#inputTag{display:none}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"ngmodule\", type: MatButtonModule }, { kind: \"component\", type: i7.MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i5$1.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: MatMenuModule }, { kind: \"component\", type: i6$1.MatMenu, selector: \"mat-menu\", inputs: [\"backdropClass\", \"aria-label\", \"aria-labelledby\", \"aria-describedby\", \"xPosition\", \"yPosition\", \"overlapTrigger\", \"hasBackdrop\", \"class\", \"classList\"], outputs: [\"closed\", \"close\"], exportAs: [\"matMenu\"] }, { kind: \"component\", type: i6$1.MatMenuItem, selector: \"[mat-menu-item]\", inputs: [\"role\", \"disabled\", \"disableRipple\"], exportAs: [\"matMenuItem\"] }, { kind: \"directive\", type: i6$1.MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", inputs: [\"mat-menu-trigger-for\", \"matMenuTriggerFor\", \"matMenuTriggerData\", \"matMenuTriggerRestoreFocus\"], outputs: [\"menuOpened\", \"onMenuOpen\", \"menuClosed\", \"onMenuClose\"], exportAs: [\"matMenuTrigger\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: MenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-menu', standalone: true, imports: [CommonModule, MatButtonModule, MatIconModule, MatMenuModule], template: \"<button mat-icon-button [matMenuTriggerFor]=\\\"settingsMenu\\\" aria-label=\\\"Men\\u00FC \\u00F6ffnen\\\">\\n    <mat-icon>menu</mat-icon>\\n</button>\\n\\n<mat-menu #settingsMenu class=\\\"myMenuItem\\\">\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"createNewInstance()\\\">\\n        <mat-icon>fiber_new</mat-icon>Neue Instanz\\n    </button>\\n\\n    <label for=\\\"inputTag\\\">\\n        <menu mat-menu-item class=\\\"myMenuItem\\\">\\n            <mat-icon>file_upload</mat-icon>\\n            Laden aus Datei\\n            <input (change)=\\\"onFileUpload($event)\\\" id=\\\"inputTag\\\" type=\\\"file\\\"/>\\n        </menu>\\n    </label>\\n\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"saveToLocalStorage()\\\">\\n        <mat-icon>file_download</mat-icon>Speichern in Datei\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Uebungsaufgaben\\\">\\n        <mat-icon>open_in_browser</mat-icon>\\u00DCbungsaufgaben laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Vorlesungsbeispiele\\\">\\n        <mat-icon>open_in_browser</mat-icon>Vorlesungsbeispiele laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"openHelpDialog()\\\">\\n        <mat-icon>help</mat-icon>Hilfe\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Vorlesungsbeispiele>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of vorlesungsbeispiele\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Uebungsaufgaben>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of uebungsaufgaben\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\", styles: [\"#inputTag{display:none}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }, { type: i2$1.HttpClient }], propDecorators: { baseURL: [{\n                type: Input\n            }] } });","originalLength":19689,"removedExports":[],"renderedExports":["MenuComponent"],"renderedLength":8290},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/menu/help-dialog/help-dialog.component.mjs":{"code":"class HelpDialogComponent {\n    constructor() {\n        this.text = '';\n    }\n    ngOnInit() {\n    }\n    ngAfterViewInit() {\n        this.playVideoAtIndex(0);\n    }\n    onTabChange(index) {\n        this.playVideoAtIndex(index);\n    }\n    playVideoAtIndex(index) {\n        this.videos.forEach((vid, idx) => {\n            const videoElement = vid.nativeElement;\n            if (idx === index) {\n                videoElement.play();\n            }\n            else {\n                videoElement.pause();\n                videoElement.currentTime = 0;\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HelpDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: HelpDialogComponent, isStandalone: true, selector: \"app-help-dialog\", viewQueries: [{ propertyName: \"videos\", predicate: [\"videoRef\"], descendants: true }], ngImport: i0, template: \"<button class=\\\"button-close\\\" mat-button [mat-dialog-close]>\\n    <mat-icon>close</mat-icon>\\n</button>\\n<h1 mat-dialog-title>Bedienungsanweisungen</h1>\\n    \\n<mat-tab-group class=\\\"scrollable-tab-group\\\"  (selectedIndexChange)=\\\"onTabChange($event)\\\">\\n    <mat-tab label=\\\"Zustand hinzuf\\u00FCgen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Neue Zust\\u00E4nde k\\u00F6nnen per Doppelklick auf die Arbeitsfl\\u00E4che\\n                    hinzugef\\u00FCgt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand hinzuf\\u00FCgen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Um Zust\\u00E4nde zu \\u00E4ndern/l\\u00F6schen, muss ein Rechtsklick auf\\n                    die Mitte des Zustands ausgef\\u00FChrt werden.\\n                    Anschlie\\u00DFend kann der Zustand in einem Dialogmen\\u00FC ver\\u00E4ndert oder\\n                    gel\\u00F6scht werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand verschieben\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zust\\u00E4nde zu verschieben muss ein Linksklick auf die Mitte des Zustands \\n                    gehalten werden und zur gew\\u00FCnschten Position gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand verschieben.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang hinzuf\\u00FCgen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zust\\u00E4nde zu verbinden, muss erstmal mit einem Linksklick vom Rand des Ausgangszustands eine\\n                    Linie zum gew\\u00FCnschten Zielzustand gezogen werden.\\n                    Anschlie\\u00DFend muss ein Eingabesymbol, Schreibsymbol und die Bewegung eingegeben und best\\u00E4tigt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang hinzuf\\u00FCgen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um \\u00DCberg\\u00E4nge zu bearbeiten, muss ein Rechtsklick auf den jeweiligen \\u00DCbergang ausgef\\u00FChrt werden.\\n                    Anschlie\\u00DFend kann der \\u00DCbergang in einem Dialogmen\\u00FC bearbeitet werden.\\n                </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang + Zustand erstellen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Es ist m\\u00F6glich, gleichzeitig einen \\u00DCbergang und einen Zustand zu erstellen.\\n                    Daf\\u00FCr muss mit einem Linksklick vom Rand des Ausgangszustandes eine\\n                    Linie auf eine leere Stelle der Arbeitsfl\\u00E4che gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang mit Zustand erstellen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n</mat-tab-group>\\n\\n\\n<!-- <h2>Allgemein</h2>\\n<ul>\\n    <li>Zustand hinzuf\\u00FCgen</li>\\n    <ul>\\n        <li>\\n            Neue Zust\\u00E4nde k\\u00F6nnen per Doppelklick auf die Arbeitsfl\\u00E4che\\n            hinzugef\\u00FCgt werden.\\n        </li>\\n    </ul>\\n\\n    <li>Zust\\u00E4nde verbinden</li>\\n    <ul>\\n        <li>\\n            Um Zust\\u00E4nde zu verbinden, muss vom Rand des Ausgangszustandes eine\\n            Linie zum gew\\u00FCnschten Zielzustand gezogen werden.\\n        </li>\\n        <li>\\n            Es ist auch m\\u00F6glich, anstatt einen Zielzustand eine Stelle auf der\\n            Arbeitsfl\\u00E4che auszuw\\u00E4hlen. <br />\\n            Dadurch wird der neue Zielzustand automatisch erstellt.\\n        </li>\\n    </ul>\\n    <li>Elemente \\u00E4ndern/l\\u00F6schen</li>\\n    <ul>\\n        <li>\\n            Um Elemente zu \\u00E4ndern/l\\u00F6schen, muss ein Doppelklick auf das\\n            entsprechende Element ausgef\\u00FChrt werden. <br />\\n            Anschlie\\u00DFend kann das Element in einem Dialogmen\\u00FC ver\\u00E4ndert oder\\n            gel\\u00F6scht werden.\\n        </li>\\n    </ul>\\n    <li>Weitere Aktionen</li>\\n    <ul>\\n        <li>\\n            Durch Klicken des Men\\u00FCbuttons (oben links) sind einige weitere\\n            Aktionen m\\u00F6glich,<br />\\n            wie z.B. abspeichern und laden eines Automaten und\\n            \\u00DCbungsaufgaben/Beispielaufgaben laden.\\n        </li>\\n    </ul>\\n</ul>\\n\\n<h2>Validierung</h2>\\n<ul>\\n    <li>W\\u00F6rter validieren</li>\\n    <ul>\\n        <li>\\n            Um zu pr\\u00FCfen, ob ein bestimmtes Wort vom Automaten akzeptiert wird,\\n            muss es in das Worteingabefeld eingegeben werden.<br />\\n            Falls die Umrandung das Eingabefeldes gr\\u00FCn ist, wird der Automat\\n            akzeptiert, bei Rot wird er nicht akzeptiert.\\n        </li>\\n        <li>\\n            Es ist auch m\\u00F6glich, mehrere \\\"akzeptierende\\\" und \\\"nicht\\n            akzeptierende\\\" W\\u00F6rter gleichzeitig zu testen. <br />\\n            Die W\\u00F6rter k\\u00F6nnen durch Bet\\u00E4tigen des entsprechenden \\\"+\\\"-Buttons\\n            hinzugef\\u00FCgt und anschlie\\u00DFend bearbeitet werden.\\n        </li>\\n    </ul>\\n    <li>Wort Schritt f\\u00FCr Schritt testen</li>\\n    <ul>\\n        <li>\\n            Mittels der zwei Pfeilbuttons neben dem Worteingabefeld kann das\\n            aktuelle Wort Schritt f\\u00FCr Schritt durchgeschaltet werden. <br />\\n            Die Zust\\u00E4nde des Automaten werden daraufhin farblich markiert{{\\n                text\\n            }}.\\n        </li>\\n    </ul>\\n</ul> -->\\n\", styles: [\"@charset \\\"UTF-8\\\";.tab-content{display:flex;flex-direction:column}.video-description{width:100%;height:100%;margin-bottom:0;margin-top:10px}.mat-tab-group{max-width:800px}video{width:100%;height:auto}p{font-size:16px}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"component\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: [\"color\", \"fitInkBarToContent\", \"mat-stretch-tabs\", \"dynamicHeight\", \"selectedIndex\", \"headerPosition\", \"animationDuration\", \"contentTabIndex\", \"disablePagination\", \"disableRipple\", \"preserveContent\", \"backgroundColor\"], outputs: [\"selectedIndexChange\", \"focusChange\", \"animationDone\", \"selectedTabChange\"], exportAs: [\"matTabGroup\"] }, { kind: \"component\", type: MatTab, selector: \"mat-tab\", inputs: [\"disabled\", \"label\", \"aria-label\", \"aria-labelledby\", \"labelClass\", \"bodyClass\"], exportAs: [\"matTab\"] }, { kind: \"directive\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HelpDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-help-dialog', standalone: true, imports: [MatIcon, MatTabGroup, MatTab, MatTabBody, MatTabHeader, MatTabLabel, MatTabNav, MatTabLink, MatDialogClose], template: \"<button class=\\\"button-close\\\" mat-button [mat-dialog-close]>\\n    <mat-icon>close</mat-icon>\\n</button>\\n<h1 mat-dialog-title>Bedienungsanweisungen</h1>\\n    \\n<mat-tab-group class=\\\"scrollable-tab-group\\\"  (selectedIndexChange)=\\\"onTabChange($event)\\\">\\n    <mat-tab label=\\\"Zustand hinzuf\\u00FCgen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Neue Zust\\u00E4nde k\\u00F6nnen per Doppelklick auf die Arbeitsfl\\u00E4che\\n                    hinzugef\\u00FCgt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand hinzuf\\u00FCgen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Um Zust\\u00E4nde zu \\u00E4ndern/l\\u00F6schen, muss ein Rechtsklick auf\\n                    die Mitte des Zustands ausgef\\u00FChrt werden.\\n                    Anschlie\\u00DFend kann der Zustand in einem Dialogmen\\u00FC ver\\u00E4ndert oder\\n                    gel\\u00F6scht werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand verschieben\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zust\\u00E4nde zu verschieben muss ein Linksklick auf die Mitte des Zustands \\n                    gehalten werden und zur gew\\u00FCnschten Position gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand verschieben.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang hinzuf\\u00FCgen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zust\\u00E4nde zu verbinden, muss erstmal mit einem Linksklick vom Rand des Ausgangszustands eine\\n                    Linie zum gew\\u00FCnschten Zielzustand gezogen werden.\\n                    Anschlie\\u00DFend muss ein Eingabesymbol, Schreibsymbol und die Bewegung eingegeben und best\\u00E4tigt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang hinzuf\\u00FCgen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um \\u00DCberg\\u00E4nge zu bearbeiten, muss ein Rechtsklick auf den jeweiligen \\u00DCbergang ausgef\\u00FChrt werden.\\n                    Anschlie\\u00DFend kann der \\u00DCbergang in einem Dialogmen\\u00FC bearbeitet werden.\\n                </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang + Zustand erstellen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Es ist m\\u00F6glich, gleichzeitig einen \\u00DCbergang und einen Zustand zu erstellen.\\n                    Daf\\u00FCr muss mit einem Linksklick vom Rand des Ausgangszustandes eine\\n                    Linie auf eine leere Stelle der Arbeitsfl\\u00E4che gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang mit Zustand erstellen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n</mat-tab-group>\\n\\n\\n<!-- <h2>Allgemein</h2>\\n<ul>\\n    <li>Zustand hinzuf\\u00FCgen</li>\\n    <ul>\\n        <li>\\n            Neue Zust\\u00E4nde k\\u00F6nnen per Doppelklick auf die Arbeitsfl\\u00E4che\\n            hinzugef\\u00FCgt werden.\\n        </li>\\n    </ul>\\n\\n    <li>Zust\\u00E4nde verbinden</li>\\n    <ul>\\n        <li>\\n            Um Zust\\u00E4nde zu verbinden, muss vom Rand des Ausgangszustandes eine\\n            Linie zum gew\\u00FCnschten Zielzustand gezogen werden.\\n        </li>\\n        <li>\\n            Es ist auch m\\u00F6glich, anstatt einen Zielzustand eine Stelle auf der\\n            Arbeitsfl\\u00E4che auszuw\\u00E4hlen. <br />\\n            Dadurch wird der neue Zielzustand automatisch erstellt.\\n        </li>\\n    </ul>\\n    <li>Elemente \\u00E4ndern/l\\u00F6schen</li>\\n    <ul>\\n        <li>\\n            Um Elemente zu \\u00E4ndern/l\\u00F6schen, muss ein Doppelklick auf das\\n            entsprechende Element ausgef\\u00FChrt werden. <br />\\n            Anschlie\\u00DFend kann das Element in einem Dialogmen\\u00FC ver\\u00E4ndert oder\\n            gel\\u00F6scht werden.\\n        </li>\\n    </ul>\\n    <li>Weitere Aktionen</li>\\n    <ul>\\n        <li>\\n            Durch Klicken des Men\\u00FCbuttons (oben links) sind einige weitere\\n            Aktionen m\\u00F6glich,<br />\\n            wie z.B. abspeichern und laden eines Automaten und\\n            \\u00DCbungsaufgaben/Beispielaufgaben laden.\\n        </li>\\n    </ul>\\n</ul>\\n\\n<h2>Validierung</h2>\\n<ul>\\n    <li>W\\u00F6rter validieren</li>\\n    <ul>\\n        <li>\\n            Um zu pr\\u00FCfen, ob ein bestimmtes Wort vom Automaten akzeptiert wird,\\n            muss es in das Worteingabefeld eingegeben werden.<br />\\n            Falls die Umrandung das Eingabefeldes gr\\u00FCn ist, wird der Automat\\n            akzeptiert, bei Rot wird er nicht akzeptiert.\\n        </li>\\n        <li>\\n            Es ist auch m\\u00F6glich, mehrere \\\"akzeptierende\\\" und \\\"nicht\\n            akzeptierende\\\" W\\u00F6rter gleichzeitig zu testen. <br />\\n            Die W\\u00F6rter k\\u00F6nnen durch Bet\\u00E4tigen des entsprechenden \\\"+\\\"-Buttons\\n            hinzugef\\u00FCgt und anschlie\\u00DFend bearbeitet werden.\\n        </li>\\n    </ul>\\n    <li>Wort Schritt f\\u00FCr Schritt testen</li>\\n    <ul>\\n        <li>\\n            Mittels der zwei Pfeilbuttons neben dem Worteingabefeld kann das\\n            aktuelle Wort Schritt f\\u00FCr Schritt durchgeschaltet werden. <br />\\n            Die Zust\\u00E4nde des Automaten werden daraufhin farblich markiert{{\\n                text\\n            }}.\\n        </li>\\n    </ul>\\n</ul> -->\\n\", styles: [\"@charset \\\"UTF-8\\\";.tab-content{display:flex;flex-direction:column}.video-description{width:100%;height:100%;margin-bottom:0;margin-top:10px}.mat-tab-group{max-width:800px}video{width:100%;height:auto}p{font-size:16px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { videos: [{\n                type: ViewChildren,\n                args: ['videoRef']\n            }] } });","originalLength":29419,"removedExports":[],"renderedExports":["HelpDialogComponent"],"renderedLength":16742},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/testcasebutton/testcasebutton.component.mjs":{"code":"class TestcasebuttonComponent {\n    constructor(service) {\n        this.service = service;\n    }\n    get testCaseViewIsVisible() {\n        return this.service.testCaseViewIsVisible;\n    }\n    toggleTestcaseView() {\n        this.service.testCaseViewIsVisible = !this.service.testCaseViewIsVisible;\n        this.service.testcaseViewToggled?.();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: TestcasebuttonComponent, deps: [{ token: StatemachineService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: TestcasebuttonComponent, isStandalone: true, selector: \"app-testcasebutton\", ngImport: i0, template: \"<button mat-icon-button class=\\\"toggleTestcaseView\\\" [class.pressed]=\\\"testCaseViewIsVisible\\\" (click)=\\\"toggleTestcaseView()\\\">\\n    <img src=\\\"assets/testcases.svg\\\" alt=\\\"testcases\\\">\\n</button>\", styles: [\"button.pressed{background-color:#ddd}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatIconModule }, { kind: \"ngmodule\", type: MatButtonModule }, { kind: \"component\", type: i7.MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: TestcasebuttonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-testcasebutton', standalone: true, imports: [MatIconModule, MatButtonModule], template: \"<button mat-icon-button class=\\\"toggleTestcaseView\\\" [class.pressed]=\\\"testCaseViewIsVisible\\\" (click)=\\\"toggleTestcaseView()\\\">\\n    <img src=\\\"assets/testcases.svg\\\" alt=\\\"testcases\\\">\\n</button>\", styles: [\"button.pressed{background-color:#ddd}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }] });","originalLength":4713,"removedExports":[],"renderedExports":["TestcasebuttonComponent"],"renderedLength":1849},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/statemachine.mjs":{"code":"class StateMachine {\n    constructor() {\n        this.title = \"New State Machine\";\n        this.description = \"\";\n        this.allStates = [];\n        this.finalStates = new Set();\n        this._input = \"\";\n    }\n    getAllStates() {\n        return this.allStates;\n    }\n    getAllTransitions() {\n        return this.allStates.flatMap((state) => [...state.transitions]);\n    }\n    addState(x, y) {\n        const newState = this.makeState(x, y, this.makeId());\n        if (this.startState == undefined) {\n            this.startState = newState;\n        }\n        this.allStates.push(newState);\n        return newState;\n    }\n    makeId() {\n        let id = 0;\n        while (this.allStates.some((state) => state.id == id)) {\n            id++;\n        }\n        return id;\n    }\n    deleteState(state) {\n        // Remove start if state is start state.\n        if (this.startState == state) {\n            this.startState = undefined;\n        }\n        // Remove state from final states.\n        this.finalStates.delete(state);\n        // Remove transitions where 'state' is the destination state\n        this.getAllTransitions().forEach((transition) => {\n            if (transition.destination === state) {\n                transition.delete();\n            }\n        });\n        let index = this.allStates.findIndex(obj => obj === state);\n        this.allStates.splice(index, 1);\n    }\n    isStartState(state) {\n        return state === this.startState;\n    }\n    isFinalState(state) {\n        return this.finalStates.has(state);\n    }\n    isDeterministic() {\n        return ![...this.getAllStates()].some((state) => !state.isDeterministic());\n    }\n}","originalLength":7490,"removedExports":[],"renderedExports":["StateMachine"],"renderedLength":1648},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/Result.mjs":{"code":"class Result {\n    constructor(states, isAccepting) {\n        this.activeStates = new Set(states);\n        this.isAccepting = isAccepting;\n    }\n}","originalLength":1004,"removedExports":[],"renderedExports":["Result"],"renderedLength":146},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/StateConnection.mjs":{"code":"class StateConnection {\n    get source() {\n        return this.transition.source;\n    }\n    get destination() {\n        return this.transition.destination;\n    }\n    getCenterPoint() {\n        return this.transition.absolutCenterPoint();\n    }\n    constructor(transition) {\n        this.transition = transition;\n    }\n}","originalLength":1905,"removedExports":[],"renderedExports":["StateConnection"],"renderedLength":319},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Line.mjs":{"code":"class Line {\n    constructor(p1, p2) {\n        this.sourcePoint = p1;\n        this.destinationPoint = p2;\n    }\n    // Gets a control point to draw a bezier curve.\n    //\n    // The control point with a specific `distance` to the line.\n    // The point will be on the left side of the line.\n    getBezierControlPoint(distance) {\n        // calculate the vector from the source point to the destination point\n        const vecSource = new Point(this.sourcePoint.x, this.sourcePoint.y);\n        const vecDestination = new Point(this.destinationPoint.x - this.sourcePoint.x, this.destinationPoint.y - this.sourcePoint.y);\n        // calculate the length of the vector\n        const vecDestinationLength = this.sourcePoint.distance(this.destinationPoint);\n        // calculate the unit vector in the direction of the destination point\n        let vecDestinationUnit = Point.zero;\n        if (vecDestinationLength !== 0) {\n            vecDestinationUnit = new Point(vecDestination.x / vecDestinationLength, vecDestination.y / vecDestinationLength);\n        }\n        // calculate the control point halfway between the source and destination points\n        const vecStartControl = new Point(vecSource.x + vecDestination.x / 2, vecSource.y + vecDestination.y / 2);\n        // use the unit vector and the given distance to calculate the final control point\n        const vecEndControl = new Point(vecStartControl.x + distance * vecDestinationUnit.y, vecStartControl.y - distance * vecDestinationUnit.x);\n        return vecEndControl;\n    }\n    getRectangleCenterPoint(width, height) {\n        const { x: x1, y: y1 } = this.sourcePoint;\n        const { x: x2, y: y2 } = this.vector;\n        const x3 = this.center.x +\n            (this.sourcePoint.y < this.destinationPoint.y\n                ? -width / 2\n                : width / 2);\n        const y3 = this.center.y +\n            (this.sourcePoint.x < this.destinationPoint.x\n                ? height / 2\n                : -height / 2);\n        const s = (x2 * (y3 - y1) + y2 * (x1 - x3)) / (y2 * y2 + x2 * x2);\n        const x = this.center.x + s * y2;\n        const y = this.center.y - s * x2;\n        return new Point(x, y);\n    }\n    get vector() {\n        return new Point(this.destinationPoint.x - this.sourcePoint.x, this.destinationPoint.y - this.sourcePoint.y);\n    }\n    length() {\n        return this.sourcePoint.distance(this.destinationPoint);\n    }\n    get center() {\n        return new Point((this.sourcePoint.x + this.destinationPoint.x) / 2, (this.sourcePoint.y + this.destinationPoint.y) / 2);\n    }\n    set center(newCenter) {\n        const currentCenter = this.center;\n        const deltaX = newCenter.x - currentCenter.x;\n        const deltaY = newCenter.y - currentCenter.y;\n        this.sourcePoint = new Point(this.sourcePoint.x + deltaX, this.sourcePoint.y + deltaY);\n        this.destinationPoint = new Point(this.destinationPoint.x + deltaX, this.destinationPoint.y + deltaY);\n    }\n    path() {\n        return ('M' +\n            this.sourcePoint.x +\n            ' ' +\n            this.sourcePoint.y +\n            ', ' +\n            this.destinationPoint.x +\n            ' ' +\n            this.destinationPoint.y);\n    }\n    isPointAboveLine(point) {\n        const epsilon = 1e-10; // Ein sehr kleiner Toleranzwert\n        // Vektor von start zu end\n        const lineVector = {\n            x: this.destinationPoint.x - this.sourcePoint.x,\n            y: this.destinationPoint.y - this.sourcePoint.y\n        };\n        // Vektor von start zum zu testenden Punkt\n        const pointVector = {\n            x: point.x - this.sourcePoint.x,\n            y: point.y - this.sourcePoint.y\n        };\n        // Berechnung des Kreuzprodukts\n        const crossProduct = lineVector.x * pointVector.y - lineVector.y * pointVector.x;\n        // Wenn das Kreuzprodukt > epsilon ist, liegt der Punkt oberhalb der Linie\n        if (crossProduct > epsilon) {\n            return true;\n        }\n        // Wenn das Kreuzprodukt < -epsilon ist, liegt der Punkt unterhalb der Linie\n        if (crossProduct < -epsilon) {\n            return false;\n        }\n        // Wenn das Kreuzprodukt innerhalb der Toleranz liegt, wird der Punkt als auf der Linie betrachtet\n        return false; // oder true, je nach gewünschtem Verhalten für \"auf der Linie\"\n    }\n}","originalLength":16675,"removedExports":[],"renderedExports":["Line"],"renderedLength":4308},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/AdjustableStateConnection.mjs":{"code":"class AdjustableStateConnection extends StateConnection {\n    constructor(transition, connectionType = ConnectionType.Unidirectional) {\n        super(transition);\n        this.connectionType = connectionType;\n        this.controlPoint = this.calculateControlPoint();\n        this.startEdge = this.calculateEdgePoint(this.source.origin, this.controlPoint, State.circleRadius);\n        this.endEdge = this.calculateEndEdge();\n        this.arrowBasePoint = this.calculateArrowBasePoint();\n        this.controlPoint = this.calculateNewControlPoint();\n    }\n    calculateEdgePoint(center, referencePoint, radius) {\n        const angle = Math.atan2(referencePoint.y - center.y, referencePoint.x - center.x);\n        return new Point(center.x + radius * Math.cos(angle), center.y + radius * Math.sin(angle));\n    }\n    calculateArrowBasePoint() {\n        const arrow = Arrow.transition;\n        const endCenter = this.destination.origin;\n        // Berechne den Winkel vom Zielkreismittelpunkt zum Kontrollpunkt\n        const angle = Math.atan2(this.controlPoint.y - endCenter.y, this.controlPoint.x - endCenter.x);\n        // Berechne den Basispunkt des Pfeils\n        return new Point(this.endEdge.x + arrow.width * Math.cos(angle), this.endEdge.y + arrow.width * Math.sin(angle));\n    }\n    calculateEndEdge() {\n        const endCenter = this.destination.origin;\n        // Berechne den Winkel vom Zielkreismittelpunkt zum Kontrollpunkt\n        const angle = Math.atan2(this.controlPoint.y - endCenter.y, this.controlPoint.x - endCenter.x);\n        // Berechne den Endpunkt auf dem Kreisrand\n        return new Point(endCenter.x + State.circleRadius * Math.cos(angle), endCenter.y + State.circleRadius * Math.sin(angle));\n    }\n    arrow() {\n        const arrow = Arrow.transition;\n        const dx = this.endEdge.x - this.arrowBasePoint.x;\n        const dy = this.endEdge.y - this.arrowBasePoint.y;\n        const angle = Math.atan2(dy, dx);\n        const lowerLeft = new Point(this.arrowBasePoint.x + arrow.height / 2 * Math.sin(angle), this.arrowBasePoint.y - arrow.height / 2 * Math.cos(angle));\n        const upperLeft = new Point(this.arrowBasePoint.x - arrow.height / 2 * Math.sin(angle), this.arrowBasePoint.y + arrow.height / 2 * Math.cos(angle));\n        return `M ${this.arrowBasePoint.x} ${this.arrowBasePoint.y} ` +\n            `L ${lowerLeft.x} ${lowerLeft.y} ` +\n            `L ${this.endEdge.x} ${this.endEdge.y} ` +\n            `L ${upperLeft.x} ${upperLeft.y} ` +\n            `Z`;\n    }\n    path() {\n        return `M${this.startEdge.x},${this.startEdge.y} ` +\n            `Q${this.controlPoint.x},${this.controlPoint.y} ` +\n            `${this.arrowBasePoint.x},${this.arrowBasePoint.y}`;\n    }\n    getCenterPoint() {\n        if (super.getCenterPoint()) {\n            return super.getCenterPoint();\n        }\n        const connectionLine = new Line(this.source.origin, this.destination.origin);\n        return this.connectionType === ConnectionType.Unidirectional\n            ? connectionLine.center\n            : connectionLine.getBezierControlPoint(State.circleRadius);\n    }\n    calculateControlPoint() {\n        const centerPoint = this.getCenterPoint();\n        return new Point(2 * centerPoint.x - 0.5 * (this.source.origin.x + this.destination.origin.x), 2 * centerPoint.y - 0.5 * (this.source.origin.y + this.destination.origin.y));\n    }\n    calculateNewControlPoint() {\n        const centerPoint = this.getCenterPoint();\n        return new Point(2 * centerPoint.x - 0.5 * (this.startEdge.x + this.arrowBasePoint.x), 2 * centerPoint.y - 0.5 * (this.startEdge.y + this.arrowBasePoint.y));\n    }\n    calculateRectanglePlacementAbovePath(width, height) {\n        const line = new Line(this.startEdge, this.arrowBasePoint);\n        const centerPoint = this.getCenterPoint();\n        if (line.isPointAboveLine(centerPoint)) {\n            line.sourcePoint = this.arrowBasePoint;\n            line.destinationPoint = this.startEdge;\n        }\n        line.center = this.getCenterPoint();\n        return line.getRectangleCenterPoint(width, height);\n    }\n}\nvar ConnectionType;\n(function (ConnectionType) {\n    ConnectionType[ConnectionType[\"Unidirectional\"] = 0] = \"Unidirectional\";\n    ConnectionType[ConnectionType[\"Bidirectional\"] = 1] = \"Bidirectional\";\n})(ConnectionType || (ConnectionType = {}));","originalLength":18234,"removedExports":[],"renderedExports":["AdjustableStateConnection","ConnectionType"],"renderedLength":4316},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/EmptyStateConnection.mjs":{"code":"class EmptyStateConnection extends StateConnection {\n    calculateRectanglePlacementAbovePath(width, height) {\n        return Point.zero;\n    }\n    path() {\n        return \"\";\n    }\n    getCenterPoint() {\n        return Point.zero;\n    }\n    arrow() {\n        return \"\";\n    }\n}","originalLength":1821,"removedExports":[],"renderedExports":["EmptyStateConnection"],"renderedLength":278},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/BezierCurve.mjs":{"code":"// This class represents a Bezier curve.\nclass BezierCurve {\n    // The constructor initializes the points that define the curve.\n    constructor(p1, p2, p3) {\n        this.p1 = p1;\n        this.p2 = p2;\n        this.p3 = p3;\n    }\n    pointSecant(t) {\n        // We first compute two intermediate points on the curve.\n        const p12 = this.lerp(this.p1, this.p2, t);\n        const p23 = this.lerp(this.p2, this.p3, t);\n        // We then use these intermediate points to compute the final point on the curve.\n        return new Line(p12, p23);\n    }\n    // This method computes a point on the curve for a given value of \"t\".\n    pointOnCurve(t) {\n        const secant = this.pointSecant(t);\n        // We then use these intermediate points to compute the final point on the curve.\n        return this.lerp(secant.sourcePoint, secant.destinationPoint, t);\n    }\n    // This method performs linear interpolation between two points.\n    lerp(p1, p2, t) {\n        // We compute the new x-coordinate by linearly interpolating between the x-coordinates of the two input points.\n        const x = p1.x + (p2.x - p1.x) * t;\n        // We do the same for the y-coordinate.\n        const y = p1.y + (p2.y - p1.y) * t;\n        // We return a new point with the interpolated coordinates.\n        return new Point(x, y);\n    }\n    path() {\n        return 'M' +\n            this.p1.x +\n            ' ' +\n            this.p1.y +\n            ' Q' +\n            this.p2.x +\n            ' ' +\n            this.p2.y +\n            ' ' +\n            this.p3.x +\n            ' ' +\n            this.p3.y;\n    }\n}\n// This class represents a Bezier curve.\nclass CubicBezierCurve extends BezierCurve {\n    // The constructor initializes the points that define the curve.\n    constructor(p1, p2, p3, p4) {\n        super(p1, p2, p3);\n        this.p4 = p4;\n    }\n    pointSecant(t) {\n        const p12 = this.lerp(this.p1, this.p2, t);\n        const p23 = this.lerp(this.p2, this.p3, t);\n        const p34 = this.lerp(this.p3, this.p4, t);\n        const p123 = this.lerp(p12, p23, t);\n        const p234 = this.lerp(p23, p34, t);\n        return new Line(p123, p234);\n    }\n    // This method computes a point on the curve for a given value of \"t\".\n    pointOnCurve(t) {\n        const secant = this.pointSecant(t);\n        // We then use these intermediate points to compute the final point on the curve.\n        return this.lerp(secant.sourcePoint, secant.destinationPoint, t);\n    }\n    path() {\n        return 'M' +\n            this.p1.x +\n            ' ' +\n            this.p1.y +\n            ' C' +\n            this.p2.x +\n            ' ' +\n            this.p2.y +\n            ' ' +\n            this.p3.x +\n            ' ' +\n            this.p3.y +\n            ' ' +\n            this.p4.x +\n            ' ' +\n            this.p4.y;\n    }\n}","originalLength":11287,"removedExports":[],"renderedExports":["BezierCurve","CubicBezierCurve"],"renderedLength":2818},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/SelfStateConnection.mjs":{"code":"class SelfStateConnection extends StateConnection {\n    constructor(transition) {\n        super(transition);\n        const { curve, arrowBase, arrowTip } = this.createCurveAndArrow();\n        this.curve = curve;\n        this.arrowBase = arrowBase;\n        this.arrowTip = arrowTip;\n    }\n    path() {\n        return this.curve.path();\n    }\n    arrow() {\n        return this.createArrowPath(this.arrowBase, this.arrowTip);\n    }\n    calculateRectanglePlacementAbovePath(width, height) {\n        const centerPoint = this.curve.pointOnCurve(0.5);\n        return new Point(centerPoint.x, centerPoint.y - height / 2 - 10);\n    }\n    getCenterPoint() {\n        return this.curve.pointOnCurve(0.5);\n    }\n    createCurveAndArrow() {\n        const origin = this.source.origin;\n        const controlPoint1 = new Point(origin.x - 50, origin.y - 65);\n        const controlPoint2 = new Point(origin.x + 50, origin.y - 65);\n        const start = origin.moveToPoint(controlPoint1, State.circleRadius);\n        const end = origin.moveToPoint(controlPoint2, State.circleRadius + Arrow.transition.width);\n        const curve = new CubicBezierCurve(start, controlPoint1, controlPoint2, end);\n        const arrowTip = origin.moveToPoint(controlPoint2, State.circleRadius);\n        return { curve, arrowBase: end, arrowTip };\n    }\n    createArrowPath(base, tip) {\n        const arrow = Arrow.transition;\n        const angle = Math.atan2(tip.y - base.y, tip.x - base.x);\n        const sin = Math.sin(angle);\n        const cos = Math.cos(angle);\n        const halfHeight = arrow.height / 2;\n        const leftCorner = new Point(base.x + halfHeight * sin, base.y - halfHeight * cos);\n        const rightCorner = new Point(base.x - halfHeight * sin, base.y + halfHeight * cos);\n        return `M ${base.x} ${base.y} L ${leftCorner.x} ${leftCorner.y} L ${tip.x} ${tip.y} L ${rightCorner.x} ${rightCorner.y} Z`;\n    }\n}","originalLength":9269,"removedExports":[],"renderedExports":["SelfStateConnection"],"renderedLength":1895},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/Label.mjs":{"code":"class Label {\n    constructor(text, x, y, width, height) {\n        this.text = text;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}","originalLength":984,"removedExports":[],"renderedExports":["Label"],"renderedLength":190},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Size.mjs":{"code":"class Size {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n}","originalLength":837,"removedExports":[],"renderedExports":["Size"],"renderedLength":111},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/stateconnections/Transition.mjs":{"code":"class Transition {\n    constructor() {\n        this.fontSize = 16;\n        this.fontFamily = 'Arial';\n        this.highlight = false;\n        const canvas = document.createElement('canvas');\n        this.ctx = canvas.getContext('2d');\n        this.ctx.font = `${this.fontSize}px ${this.fontFamily}`;\n    }\n    absolutCenterPoint() {\n        if (this.relativePos) {\n            return PolarRelativePositionCalculator.toAbsolute(this.relativePos, this.source.origin, this.destination.origin);\n        }\n        return undefined;\n    }\n    set centerPoint(point) {\n        this.relativePos = PolarRelativePositionCalculator.calculate(point, this.source.origin, this.destination.origin);\n    }\n    get centerPoint() {\n        if (this.relativePos) {\n            return PolarRelativePositionCalculator.toAbsolute(this.relativePos, this.source.origin, this.destination.origin);\n        }\n        return this.connection.getCenterPoint();\n    }\n    delete() {\n        const result = this.source.transitions.filter((transition) => transition !== this);\n        this.source.transitions = result;\n    }\n    get connection() {\n        if (this.source.hasConnectionTo(this.destination)) {\n            if (this.source === this.destination) {\n                return new SelfStateConnection(this);\n            }\n            else if (this.destination.hasConnectionTo(this.source)) {\n                const transition = this.destination.getTransitionTo(this.source);\n                if (transition.relativePos) {\n                    return new AdjustableStateConnection(this);\n                }\n                return new AdjustableStateConnection(this, ConnectionType.Bidirectional);\n            }\n            return new AdjustableStateConnection(this);\n        }\n        return new EmptyStateConnection(this);\n    }\n    path() {\n        return this.connection.path();\n    }\n    arrow() {\n        return this.connection.arrow();\n    }\n    pathCenter() {\n        return this.connection.getCenterPoint() ?? Point.zero;\n    }\n    labels() {\n        let boundingBox = new Size(0, this.fontSize * this.displayText().length);\n        this.displayText().forEach((text) => {\n            const width = this.ctx.measureText(text).width;\n            boundingBox.width = Math.max(boundingBox.width, width);\n        });\n        const centerPoint = this.connection.calculateRectanglePlacementAbovePath(boundingBox.width, boundingBox.height);\n        // Calculate the left edge of the bounding box\n        const leftEdge = centerPoint.x - boundingBox.width / 2;\n        // Move rectangleCenterY to the top of the rectangle\n        const topEdge = centerPoint.y - boundingBox.height / 2;\n        return this.displayText().map((text, index) => {\n            return new Label(text, leftEdge, // x-coordinate is now at the left edge\n            topEdge + index * this.fontSize + this.fontSize / 2, boundingBox.width, boundingBox.height);\n        });\n    }\n    isEmpty() {\n        return this.displayText().length == 0;\n    }\n    toJSON() {\n        return {\n            destination: this.destination.id\n        };\n    }\n}\nclass PolarRelativePositionCalculator {\n    static calculate(point, p1, p2) {\n        const dx = p2.x - p1.x;\n        const dy = p2.y - p1.y;\n        const length = Math.sqrt(dx * dx + dy * dy);\n        // Vektor von p1 zum Punkt\n        const vx = point.x - p1.x;\n        const vy = point.y - p1.y;\n        // Projektion auf die Linie\n        const t = (vx * dx + vy * dy) / (length * length);\n        // Senkrechter Abstand\n        const px = p1.x + t * dx;\n        const py = p1.y + t * dy;\n        const r = Math.sqrt((point.x - px) ** 2 + (point.y - py) ** 2);\n        // Bestimme die Richtung (im oder gegen den Uhrzeigersinn)\n        const clockwise = (dx * (point.y - p1.y) - dy * (point.x - p1.x)) > 0;\n        return { t, r, clockwise };\n    }\n    static toAbsolute(relPos, p1, p2) {\n        const dx = p2.x - p1.x;\n        const dy = p2.y - p1.y;\n        const length = Math.sqrt(dx * dx + dy * dy);\n        // Punkt auf der Linie\n        const px = p1.x + relPos.t * dx;\n        const py = p1.y + relPos.t * dy;\n        // Senkrechter Vektor\n        let perpX = -dy / length;\n        let perpY = dx / length;\n        if (!relPos.clockwise) {\n            perpX = -perpX;\n            perpY = -perpY;\n        }\n        // Endgültige Position\n        return new Point(px + relPos.r * perpX, py + relPos.r * perpY);\n    }\n}","originalLength":19664,"removedExports":[],"renderedExports":["Transition"],"renderedLength":4414},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Shape.mjs":{"code":"","originalLength":377,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/lib/statemachine/drawingprimitives/Rect.mjs":{"code":"class Rect {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}","originalLength":871,"removedExports":[],"renderedExports":["Rect"],"renderedLength":157},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/public-api.mjs":{"code":"/*\n * Public API Surface of commons\n */\n// Components","originalLength":6842,"removedExports":[],"renderedExports":[],"renderedLength":53},"/Users/simon/Documents/Git/potenzmengenkonstruktion/dist/commons/esm2022/commons.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":476,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, Inject, ViewChild, Input, ViewChildren } from '@angular/core';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogClose } from '@angular/material/dialog';\nimport * as i5$1 from '@angular/material/icon';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport * as i3 from '@angular/material/form-field';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i5 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport * as i6 from '@angular/material/checkbox';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport * as i7 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject, firstValueFrom } from 'rxjs';\nimport * as i6$1 from '@angular/material/menu';\nimport { MatMenuModule } from '@angular/material/menu';\nimport * as i2$1 from '@angular/common/http';\nimport { MatTabGroup, MatTab, MatTabBody, MatTabHeader, MatTabLabel, MatTabNav, MatTabLink } from '@angular/material/tabs';\n\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    static get zero() {\n        return new Point(0, 0);\n    }\n    distance(point) {\n        const deltaX = this.x - point.x;\n        const deltaY = this.y - point.y;\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    }\n    // Moves this point into the direction of the given point, by a specific amount.\n    moveToPoint(point, amount) {\n        const distance = this.distance(point);\n        const newDistance = distance - amount;\n        const vecP1P2x = point.x - this.x;\n        const vecP1P2y = point.y - this.y;\n        let unitVecX = 0;\n        let unitVecY = 0;\n        if (distance != 0) {\n            unitVecX = vecP1P2x / distance;\n            unitVecY = vecP1P2y / distance;\n        }\n        const newPointX = point.x - newDistance * unitVecX;\n        const newPointY = point.y - newDistance * unitVecY;\n        return new Point(newPointX, newPointY);\n    }\n    addPoint(point) {\n        return new Point(this.x + point.x, this.y + point.y);\n    }\n    get perpendicular() {\n        return new Point(this.y, -this.x);\n    }\n    toJSON() {\n        return {\n            x: this.x,\n            y: this.y,\n        };\n    }\n}\n\nclass Arrow {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.lowerLeft = new Point(0, 0);\n        this.upperLeft = new Point(0, this.height);\n        this.centerRight = new Point(this.width, this.height / 2);\n        this.refX = 0;\n        this.refY = this.centerRight.y;\n    }\n    /// Returns an arrow for a transition\n    static { this.transition = new Arrow(7.5 * 2, 5 * 2); }\n    path() {\n        return (this.lowerLeft.x +\n            ' ' +\n            this.lowerLeft.y +\n            ', ' +\n            this.upperLeft.x +\n            ' ' +\n            this.upperLeft.y +\n            ', ' +\n            this.centerRight.x +\n            ' ' +\n            this.centerRight.y);\n    }\n}\n\n// Erweiterte Version von statemachine.service.ts mit Auto-Load und Observable\nclass StatemachineService {\n    constructor(dialog) {\n        this.dialog = dialog;\n        this.automatonChangedSubject = new Subject();\n        this.onAutomatonChanged = this.automatonChangedSubject.asObservable();\n        this.showDeterministicStates = false;\n        this.testCaseViewIsVisible = true;\n        // Auto-load from browser cache on service initialization\n        this.loadFromBrowserCacheOnInit();\n    }\n    loadFromBrowserCacheOnInit() {\n        try {\n            const savedData = localStorage.getItem('endlicherautomat');\n            if (savedData && this.stateMachine) {\n                const json = JSON.parse(savedData);\n                this.stateMachine = this.stateMachine.createInstanceFromJSON(json);\n                console.log('Automatisch aus Browser-Cache geladen');\n                this.automatonChangedSubject.next();\n            }\n        }\n        catch (error) {\n            console.error('Fehler beim automatischen Laden aus Browser-Cache:', error);\n        }\n    }\n    get input() {\n        return this.stateMachine.input;\n    }\n    get states() {\n        return this.stateMachine.getAllStates();\n    }\n    isFinalState(state) {\n        return this.stateMachine.isFinalState(state);\n    }\n    isStartState(state) {\n        return this.stateMachine.isStartState(state);\n    }\n    addState(x, y) {\n        const newState = this.stateMachine.addState(x, y);\n        this.automatonChangedSubject.next();\n        return newState;\n    }\n    deleteState(state) {\n        this.stateMachine.deleteState(state);\n        this.automatonChangedSubject.next();\n    }\n    addTransition(source, destination) {\n        const transition = source.addTransition(destination);\n        this.automatonChangedSubject.next();\n        return transition;\n    }\n    removeTransition(transition) {\n        transition.delete();\n        this.automatonChangedSubject.next();\n    }\n    get transitions() {\n        return this.stateMachine.getAllTransitions();\n    }\n    openStateEditDialog(state, dialog) {\n        const dialogRef = state.openEditDialog(dialog);\n        dialogRef.afterClosed().subscribe(() => {\n            this.automatonChangedSubject.next();\n        });\n        return dialogRef;\n    }\n    openTransitionEditDialog(source, destination, dialog) {\n        const dialogRef = source.addTransition(destination).openTransitionDialog(dialog);\n        dialogRef.afterClosed().subscribe(() => {\n            this.automatonChangedSubject.next();\n        });\n        return dialogRef;\n    }\n    isActiveState(state) {\n        return this.stateMachine.activeStates(this.stateMachine.input).has(state);\n    }\n    isDeterministic() {\n        return this.stateMachine.isDeterministic();\n    }\n    isStartStateDefined() {\n        return this.stateMachine.startState != undefined;\n    }\n    createNewInstance() {\n        this.stateMachine = this.stateMachine.createNewInstance();\n        this.automatonChangedSubject.next();\n        // Clear localStorage when creating new instance\n        localStorage.removeItem('endlicherautomat');\n    }\n    loadFromBrowserCache() {\n        try {\n            this.stateMachine = this.stateMachine.loadFromBrowserCache();\n            this.automatonChangedSubject.next();\n            console.log('Manuell aus Browser-Cache geladen');\n        }\n        catch (error) {\n            console.error('Fehler beim Laden aus Browser-Cache:', error);\n            alert('Fehler beim Laden aus dem Browser-Cache. Möglicherweise sind keine gespeicherten Daten vorhanden.');\n        }\n    }\n    saveToBrowserCache() {\n        try {\n            this.stateMachine.saveToBrowserCache();\n            console.log('In Browser-Cache gespeichert');\n        }\n        catch (error) {\n            console.error('Fehler beim Speichern in Browser-Cache:', error);\n        }\n    }\n    createInstanceFromJSON(configuration) {\n        this.stateMachine = this.stateMachine.createInstanceFromJSON(configuration);\n        this.automatonChangedSubject.next();\n    }\n    saveToLocalStorage() {\n        this.stateMachine.saveToLocalStorage();\n    }\n    inputChanged(input) {\n        this.stateMachine.input = input;\n    }\n    isAccepting() {\n        return this.stateMachine.isAcceptingWord(this.stateMachine.input).isAccepting;\n    }\n    setHelpDialogComponent(component) {\n        this.helpDialogComponent = component;\n    }\n    openHelpDialog() {\n        if (this.helpDialogComponent) {\n            this.dialog.open(this.helpDialogComponent, {\n                maxWidth: '70vw',\n                maxHeight: '90vh',\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineService, deps: [{ token: i2.MatDialog }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [{ type: i2.MatDialog }] });\n\nclass StateEditDialogComponent {\n    constructor(service, dialogRef, data) {\n        this.service = service;\n        this.dialogRef = dialogRef;\n        this.data = data;\n    }\n    onEnter() {\n        this.dialogRef.close();\n    }\n    deleteState() {\n        this.service.deleteState(this.data);\n        this.dialogRef.close();\n    }\n    isStartState() {\n        return this.service.isStartState(this.data);\n    }\n    isFinalState() {\n        return this.service.isFinalState(this.data);\n    }\n    toggleStart(isChecked) {\n        this.service.stateMachine.startState = isChecked ? this.data : undefined;\n    }\n    toggleFinal(isChecked) {\n        if (isChecked) {\n            this.service.stateMachine.finalStates = new Set([\n                ...this.service.stateMachine.finalStates,\n                this.data,\n            ]);\n        }\n        else {\n            this.service.stateMachine.finalStates.delete(this.data);\n            this.service.stateMachine.finalStates = new Set([\n                ...this.service.stateMachine.finalStates\n            ]);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StateEditDialogComponent, deps: [{ token: StatemachineService }, { token: i2.MatDialogRef }, { token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: StateEditDialogComponent, isStandalone: true, selector: \"app-state-edit-dialog\", ngImport: i0, template: \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Zustand {{ data.name }} bearbeiten</h3>\\n    <div mat-dialog-content>\\n        <form>\\n            <mat-form-field>\\n                <mat-label>Zustandsname</mat-label>\\n                <input title=\\\"Zustandsname\\\" matInput type=\\\"text\\\" autocomplete=\\\"off\\\" value=\\\"{{ data.name }}\\\"\\n                    [(ngModel)]=\\\"data.name\\\" maxlength=\\\"12\\\" name=\\\"stateName-input\\\" (keydown.enter)=\\\"onEnter()\\\">\\n            </mat-form-field>\\n            <section>\\n                <mat-checkbox (change)=\\\"toggleStart($event.checked)\\\" [checked]=\\\"isStartState()\\\" name=\\\"startState\\\">\\n                    Startzustand\\n                </mat-checkbox>\\n                <br />\\n                <mat-checkbox (change)=\\\"toggleFinal($event.checked)\\\" [checked]=\\\"isFinalState()\\\" name=\\\"endState\\\">\\n                    Endzustand\\n                </mat-checkbox>\\n            </section>\\n        </form>\\n\\n        <div class=\\\"action-buttons\\\" mat-dialog-actions>\\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" (click)=\\\"deleteState()\\\" class=\\\"button-delete\\\" color=\\\"warn\\\">\\n                L\\u00F6schen\\n            </button>\\n    \\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" class=\\\"button-ok\\\">\\n                Ok\\n            </button>\\n        </div>\\n    </div>\\n    \\n</div>\", styles: [\".container{width:min-content}.action-buttons{display:flex}.button-delete,.button-ok{flex:1}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"ngmodule\", type: MatFormFieldModule }, { kind: \"component\", type: i3.MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: i3.MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i4.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { kind: \"directive\", type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i4.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"ngmodule\", type: MatInputModule }, { kind: \"directive\", type: i5.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\"], exportAs: [\"matInput\"] }, { kind: \"ngmodule\", type: MatTableModule }, { kind: \"ngmodule\", type: MatDialogModule }, { kind: \"directive\", type: i2.MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }, { kind: \"directive\", type: i2.MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: [\"id\"], exportAs: [\"matDialogTitle\"] }, { kind: \"directive\", type: i2.MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: [\"align\"] }, { kind: \"directive\", type: i2.MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\" }, { kind: \"ngmodule\", type: MatCheckboxModule }, { kind: \"component\", type: i6.MatCheckbox, selector: \"mat-checkbox\", inputs: [\"aria-label\", \"aria-labelledby\", \"aria-describedby\", \"id\", \"required\", \"labelPosition\", \"name\", \"value\", \"disableRipple\", \"tabIndex\", \"color\", \"checked\", \"disabled\", \"indeterminate\"], outputs: [\"change\", \"indeterminateChange\"], exportAs: [\"matCheckbox\"] }, { kind: \"ngmodule\", type: MatButtonModule }, { kind: \"component\", type: i7.MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", exportAs: [\"matButton\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StateEditDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-state-edit-dialog', standalone: true, imports: [MatIcon, CommonModule, MatFormFieldModule, FormsModule, MatInputModule, MatTableModule, MatDialogModule, MatCheckboxModule, MatButtonModule], template: \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Zustand {{ data.name }} bearbeiten</h3>\\n    <div mat-dialog-content>\\n        <form>\\n            <mat-form-field>\\n                <mat-label>Zustandsname</mat-label>\\n                <input title=\\\"Zustandsname\\\" matInput type=\\\"text\\\" autocomplete=\\\"off\\\" value=\\\"{{ data.name }}\\\"\\n                    [(ngModel)]=\\\"data.name\\\" maxlength=\\\"12\\\" name=\\\"stateName-input\\\" (keydown.enter)=\\\"onEnter()\\\">\\n            </mat-form-field>\\n            <section>\\n                <mat-checkbox (change)=\\\"toggleStart($event.checked)\\\" [checked]=\\\"isStartState()\\\" name=\\\"startState\\\">\\n                    Startzustand\\n                </mat-checkbox>\\n                <br />\\n                <mat-checkbox (change)=\\\"toggleFinal($event.checked)\\\" [checked]=\\\"isFinalState()\\\" name=\\\"endState\\\">\\n                    Endzustand\\n                </mat-checkbox>\\n            </section>\\n        </form>\\n\\n        <div class=\\\"action-buttons\\\" mat-dialog-actions>\\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" (click)=\\\"deleteState()\\\" class=\\\"button-delete\\\" color=\\\"warn\\\">\\n                L\\u00F6schen\\n            </button>\\n    \\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" class=\\\"button-ok\\\">\\n                Ok\\n            </button>\\n        </div>\\n    </div>\\n    \\n</div>\", styles: [\".container{width:min-content}.action-buttons{display:flex}.button-delete,.button-ok{flex:1}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }, { type: i2.MatDialogRef }, { type: State, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_DATA]\n                }] }] });\n\nclass State {\n    get x() {\n        return this.origin.x;\n    }\n    set x(x) {\n        this.origin.x = x;\n    }\n    get y() {\n        return this.origin.y;\n    }\n    set y(y) {\n        this.origin.y = y;\n    }\n    static get circleRadius() {\n        return 30;\n    }\n    get r() {\n        return State.circleRadius;\n    }\n    static get innerCircleRadius() {\n        return State.circleRadius / 2;\n    }\n    constructor(origin, id) {\n        this.innerCircleHovered = false;\n        this.outerCircleHovered = false;\n        this.highlight = false;\n        this.origin = origin;\n        this.name = `S${id}`;\n        this.id = id;\n    }\n    getConnectionPointToState(destination) {\n        return destination.origin.moveToPoint(this.origin, State.circleRadius);\n    }\n    hasConnectionTo(state) {\n        return [...this.transitions].some((transition) => {\n            return transition.destination === state;\n        });\n    }\n    getTransitionTo(state) {\n        // Wenn this.transitions ein Set ist, konvertieren Sie es zu einem Array\n        return [...this.transitions].find((transition) => transition.destination === state);\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            origin: this.origin,\n            name: this.name,\n            transitions: this.transitions,\n        };\n    }\n    openEditDialog(dialog) {\n        return dialog.open(StateEditDialogComponent, { data: this });\n    }\n    addTransition(destination) {\n        // Check if transition already exists.\n        let transition = [...this.transitions].find((transition) => transition.destination == destination);\n        // If transition does not exist, create it.\n        if (transition == undefined) {\n            transition = this.makeTransition(destination);\n            this.transitions = [...this.transitions, transition];\n        }\n        return transition;\n    }\n}\n\nclass StateMachineViewState {\n    get boundary() {\n        return this.statemachineviewComponent.svgFieldElementRef.nativeElement.getBoundingClientRect();\n    }\n    constructor(statemachineviewComponent) {\n        this.statemachineviewComponent = statemachineviewComponent;\n    }\n    changeState(state) {\n        this.statemachineviewComponent.changeState(state);\n    }\n    onMouseDown(event) { }\n    onMouseUp(event) { }\n    onMouseMove(event) { }\n    onInnerCircleMouseDown(event, state) { }\n    onInnerCircleMouseUp(event, state) { }\n    onOuterCircleMouseDown(event, state) { }\n    onOuterCircleMouseUp(event, state) { }\n    onEntireCircleMouseDown(event, state) { }\n    onEntireCircleMouseUp(event, state) { }\n    onCircleEnter(event, state) { }\n    onCircleLeave(event, state) { }\n    onInnerCircleEnter(event, state) { }\n    onInnerCircleLeave(event, state) { }\n    onOuterCircleEnter(event, state) { }\n    onOuterCircleLeave(event, state) { }\n    onAdjustableCircleMouseDown(event, transition) { }\n    onAdjustableCircleMouseUp(event, transition) { }\n    showStartConnection(state) { return false; }\n    showEndConnection(state) { return false; }\n    showDrawingTransition() { return false; }\n    drawingTransitionOrigin() { return Point.zero; }\n    drawingTransitionDestination() { return Point.zero; }\n}\n\nclass MoveNodeState extends StateMachineViewState {\n    set movingStateX(value) {\n        this.statemachineviewComponent.zone.run(() => this.movingState.x = value);\n    }\n    set movingStateY(value) {\n        this.statemachineviewComponent.zone.run(() => this.movingState.y = value);\n    }\n    constructor(statemachineviewComponent, movingState) {\n        super(statemachineviewComponent);\n        this.movingState = movingState;\n    }\n    onMouseUp(event) {\n        this.movingState.innerCircleHovered = false;\n        this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\n    }\n    onMouseMove(event) {\n        const boundary = this.boundary;\n        if (event.x > boundary.left + State.circleRadius && event.x < boundary.right - State.circleRadius) {\n            this.movingStateX = event.clientX - boundary.left;\n        }\n        if (event.y > boundary.top + State.circleRadius && event.y < boundary.bottom - State.circleRadius) {\n            this.movingStateY = event.clientY - boundary.top;\n        }\n    }\n}\n\nclass TransitionEditState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transitionFrom, transitionTo, dummyTransition) {\n        super(statemachineviewComponent);\n        this.transitionFrom = transitionFrom;\n        this.transitionTo = transitionTo;\n        this.dummyTransition = dummyTransition;\n        const transitionState = new DefaultState(this.statemachineviewComponent);\n        const dialogRef = this.statemachineviewComponent\n            .statemachineService\n            .openTransitionEditDialog(this.transitionFrom, this.transitionTo, this.statemachineviewComponent.dialog);\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.dummyTransition.delete();\n            }\n            this.statemachineviewComponent.changeState(transitionState);\n            this.transitionFrom.outerCircleHovered = false;\n            this.transitionTo.outerCircleHovered = false;\n            this.transitionTo.outerCircleHovered = false;\n        });\n    }\n    onMouseUp(event) { }\n    onCircleLeave(event, state) { }\n    showDrawingTransition() { return false; }\n    showStartConnection(state) {\n        return this.transitionFrom === state;\n    }\n    showEndConnection(state) {\n        return this.transitionTo === state;\n    }\n}\n\nclass TransitionToState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transitionFrom, transitionTo) {\n        super(statemachineviewComponent);\n        this.transitionFrom = transitionFrom;\n        this.transitionTo = transitionTo;\n        this.dummyTransition = transitionFrom.addTransition(transitionTo);\n    }\n    onMouseUp(event) {\n        const transitionState = new TransitionEditState(this.statemachineviewComponent, this.transitionFrom, this.transitionTo, this.dummyTransition);\n        this.statemachineviewComponent.changeState(transitionState);\n    }\n    onCircleLeave(event, state) {\n        if (this.dummyTransition.isEmpty()) {\n            this.dummyTransition.delete();\n        }\n        const transitionState = new TransitionFromState(this.statemachineviewComponent, this.transitionFrom);\n        this.statemachineviewComponent.changeState(transitionState);\n    }\n    showStartConnection(state) {\n        return this.transitionFrom === state;\n    }\n    showEndConnection(state) {\n        return this.transitionTo === state;\n    }\n}\n\nclass TransitionNewStateEditState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transitionFrom, transitionTo) {\n        super(statemachineviewComponent);\n        this.transitionFrom = transitionFrom;\n        this.transitionTo = transitionTo;\n        this.dummyTransition = transitionFrom.addTransition(transitionTo);\n        const dialogRef = this.statemachineviewComponent\n            .statemachineService\n            .openTransitionEditDialog(this.transitionFrom, this.transitionTo, this.statemachineviewComponent.dialog);\n        dialogRef.afterClosed().subscribe(transitionIsEmpty => {\n            if (transitionIsEmpty) {\n                this.statemachineviewComponent.statemachineService.deleteState(this.transitionTo);\n            }\n            this.transitionFrom.outerCircleHovered = false;\n            this.transitionTo.outerCircleHovered = false;\n            this.transitionTo.innerCircleHovered = false;\n            this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\n        });\n    }\n    showStartConnection(state) {\n        return this.transitionFrom === state;\n    }\n    showEndConnection(state) {\n        return this.transitionTo === state;\n    }\n}\n\nclass TransitionFromState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transitionFrom) {\n        super(statemachineviewComponent);\n        this.drawingDestination = Point.zero;\n        this.transitionFrom = transitionFrom;\n    }\n    onMouseUp(event) {\n        const newState = this.statemachineviewComponent.statemachineService.addState(this.drawingDestination.x, this.drawingDestination.y);\n        const transitionState = new TransitionNewStateEditState(this.statemachineviewComponent, this.transitionFrom, newState);\n        this.statemachineviewComponent.changeState(transitionState);\n    }\n    onEntireCircleMouseDown(event, state) {\n        const boundary = this.boundary;\n        this.drawingDestination.x = event.clientX - boundary.left;\n        this.drawingDestination.y = event.clientY - boundary.top;\n    }\n    onCircleEnter(event, state) {\n        const transitionToState = new TransitionToState(this.statemachineviewComponent, this.transitionFrom, state);\n        this.changeState(transitionToState);\n    }\n    onEntireCircleMouseUp(event, state) {\n        this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\n    }\n    onMouseMove(event) {\n        const boundary = this.boundary;\n        this.drawingDestination.x = event.clientX - boundary.left;\n        this.drawingDestination.y = event.clientY - boundary.top;\n    }\n    drawingTransitionOrigin() {\n        return this.transitionFrom.origin;\n    }\n    drawingTransitionDestination() {\n        return this.drawingDestination.moveToPoint(this.transitionFrom.origin, Arrow.transition.width * 2);\n    }\n    showStartConnection(state) {\n        return this.transitionFrom === state;\n    }\n    showDrawingTransition() {\n        return true;\n    }\n}\n\nclass MoveTransitionState extends StateMachineViewState {\n    constructor(statemachineviewComponent, transition) {\n        super(statemachineviewComponent);\n        this.transition = transition;\n    }\n    onMouseMove(event) {\n        const svgElement = this.statemachineviewComponent.svgFieldElementRef.nativeElement;\n        const svgRect = svgElement.getBoundingClientRect();\n        const newX = event.clientX - svgRect.left;\n        const newY = event.clientY - svgRect.top;\n        this.transition.centerPoint = new Point(newX, newY);\n    }\n    onMouseUp(event) {\n        const defaultState = new DefaultState(this.statemachineviewComponent);\n        this.statemachineviewComponent.changeState(defaultState);\n    }\n    onAdjustableCircleMouseUp(event, transition) {\n        const defaultState = new DefaultState(this.statemachineviewComponent);\n        this.statemachineviewComponent.changeState(defaultState);\n    }\n}\n\nclass DefaultState extends StateMachineViewState {\n    onInnerCircleMouseDown(event, state) {\n        state.innerCircleHovered = true;\n        const moveNodeState = new MoveNodeState(this.statemachineviewComponent, state);\n        this.statemachineviewComponent.changeState(moveNodeState);\n    }\n    onOuterCircleMouseDown(event, state) {\n        const transitionState = new TransitionFromState(this.statemachineviewComponent, state);\n        this.statemachineviewComponent.changeState(transitionState);\n    }\n    onInnerCircleEnter(event, state) {\n        this.statemachineviewComponent.zone.run(() => state.innerCircleHovered = true);\n    }\n    onInnerCircleLeave(event, state) {\n        this.statemachineviewComponent.zone.run(() => state.innerCircleHovered = false);\n    }\n    onOuterCircleEnter(event, state) {\n        this.statemachineviewComponent.zone.run(() => state.outerCircleHovered = true);\n    }\n    onOuterCircleLeave(event, state) {\n        this.statemachineviewComponent.zone.run(() => state.outerCircleHovered = false);\n    }\n    onAdjustableCircleMouseDown(event, transition) {\n        const moveTransitionState = new MoveTransitionState(this.statemachineviewComponent, transition);\n        this.statemachineviewComponent.changeState(moveTransitionState);\n    }\n}\n\n// Angular imports\nclass StatemachineviewComponent {\n    constructor(statemachineService, dialog, zone) {\n        this.statemachineService = statemachineService;\n        this.dialog = dialog;\n        this.zone = zone;\n        this.START_TRANSITION_ARROW_LENGTH = 55;\n        this.ARROW_LENGTH = 5;\n        this.circleRadius = State.circleRadius;\n        this.stateMachineViewState = new DefaultState(this);\n    }\n    get outerCircleRadius() {\n        return this.circleRadius + 15;\n    }\n    ngOnInit() {\n        this.addEventListeners();\n    }\n    ngOnDestroy() {\n        this.removeEventListeners();\n    }\n    onRightClick(event) {\n        event.preventDefault();\n    }\n    addEventListeners() {\n        this.mouseMoveListener = this.onMouseMove.bind(this);\n        document.addEventListener('mousemove', this.mouseMoveListener);\n        this.mouseUpListener = this.onMouseUp.bind(this);\n        document.addEventListener('mouseup', this.mouseUpListener);\n    }\n    removeEventListeners() {\n        document.removeEventListener('mousemove', this.mouseMoveListener);\n        document.removeEventListener('mouseup', this.mouseUpListener);\n    }\n    onMouseMove(event) {\n        this.stateMachineViewState.onMouseMove(event);\n    }\n    onMouseUp(event) {\n        this.stateMachineViewState.onMouseUp(event);\n    }\n    onInnerCircleMouseDown(event, state) {\n        this.stateMachineViewState.onInnerCircleMouseDown(event, state);\n    }\n    onInnerCircleMouseUp(event, state) {\n        this.stateMachineViewState.onInnerCircleMouseUp(event, state);\n    }\n    onOuterCircleMouseDown(event, state) {\n        this.stateMachineViewState.onOuterCircleMouseDown(event, state);\n    }\n    onOuterCircleMouseUp(event, state) {\n        this.stateMachineViewState.onOuterCircleMouseUp(event, state);\n    }\n    onEntireCircleMouseDown(event, state) {\n        this.stateMachineViewState.onEntireCircleMouseDown(event, state);\n    }\n    onEntireCircleMouseUp(event, state) {\n        this.stateMachineViewState.onEntireCircleMouseUp(event, state);\n    }\n    onCircleEnter(event, state) {\n        this.stateMachineViewState.onCircleEnter(event, state);\n    }\n    onCircleLeave(event, state) {\n        this.stateMachineViewState.onCircleLeave(event, state);\n    }\n    onInnerCircleEnter(event, state) {\n        this.stateMachineViewState.onInnerCircleEnter(event, state);\n    }\n    onInnerCircleLeave(event, state) {\n        this.stateMachineViewState.onInnerCircleLeave(event, state);\n    }\n    onOuterCircleEnter(event, state) {\n        this.stateMachineViewState.onOuterCircleEnter(event, state);\n    }\n    onOuterCircleLeave(event, state) {\n        this.stateMachineViewState.onOuterCircleLeave(event, state);\n    }\n    onAdjustableCircleMouseDown(event, transition) {\n        this.stateMachineViewState.onAdjustableCircleMouseDown(event, transition);\n    }\n    onAdjustableCircleMouseUp(event, transition) {\n        this.stateMachineViewState.onAdjustableCircleMouseUp(event, transition);\n    }\n    /// Returns true, if the transition from the given state is currently being drawn.\n    showStartConnection(state) {\n        return this.stateMachineViewState.showStartConnection(state);\n    }\n    /// Returns true, if the transition to the given state is currently being drawn.\n    showEndConnection(state) {\n        return this.stateMachineViewState.showEndConnection(state);\n    }\n    showDrawingTransition() {\n        return this.stateMachineViewState.showDrawingTransition();\n    }\n    drawingTransitionOrigin() {\n        return this.stateMachineViewState.drawingTransitionOrigin();\n    }\n    drawingTransitionDestination() {\n        return this.stateMachineViewState.drawingTransitionDestination();\n    }\n    get arrow() {\n        return Arrow.transition;\n    }\n    get transitions() {\n        return this.statemachineService.transitions;\n    }\n    editTransition(transition, event) {\n        event.preventDefault();\n        const source = transition.source;\n        const destination = transition.destination;\n        const dialogRef = this.statemachineService.openTransitionEditDialog(source, destination, this.dialog);\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                transition.delete();\n            }\n        });\n    }\n    openStateEditDialog(state, event) {\n        event.preventDefault();\n        this.statemachineService.openStateEditDialog(state, this.dialog);\n    }\n    drawState(event) {\n        const x = (event.clientX - event.target.getBoundingClientRect().left);\n        const y = (event.clientY - event.target.getBoundingClientRect().top);\n        this.statemachineService.addState(x, y);\n    }\n    getStates() {\n        return this.statemachineService.states;\n    }\n    isFinalState(state) {\n        return this.statemachineService.isFinalState(state);\n    }\n    isStartState(state) {\n        return this.statemachineService.isStartState(state);\n    }\n    isActiveState(state) {\n        return this.statemachineService.isActiveState(state);\n    }\n    get showDeterministicStates() {\n        return this.statemachineService.showDeterministicStates;\n    }\n    changeState(state) {\n        this.stateMachineViewState = state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineviewComponent, deps: [{ token: StatemachineService }, { token: i2.MatDialog }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: StatemachineviewComponent, isStandalone: true, selector: \"app-statemachineview\", viewQueries: [{ propertyName: \"svgFieldElementRef\", first: true, predicate: [\"svgField\"], descendants: true }], ngImport: i0, template: \"<svg id=\\\"svg-field\\\" #svgField>\\n\\n    <marker\\n    id=\\\"startStateArrowHead\\\"\\n    markerWidth=\\\"10\\\"\\n    markerHeight=\\\"7\\\"\\n    refX=\\\"6\\\"\\n    refY=\\\"2.5\\\"\\n    orient=\\\"auto\\\"\\n    fill=\\\"black\\\"\\n    >\\n    <polygon points=\\\"0 0, 7.5 2.5, 0 5\\\" />\\n    </marker>\\n\\n    <!-- Responds to double-click events on empty canvas areas -->\\n    <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"transparent\\\" (dblclick)=\\\"drawState($event)\\\"></rect>\\n\\n    <!-- Draw straight arrow from one point to another if a transition is being drawn -->\\n    <line\\n    *ngIf=\\\"showDrawingTransition()\\\"\\n    [attr.x1]=\\\"drawingTransitionOrigin().x\\\"\\n    [attr.y1]=\\\"drawingTransitionOrigin().y\\\"\\n    [attr.x2]=\\\"drawingTransitionDestination().x\\\"\\n    [attr.y2]=\\\"drawingTransitionDestination().y\\\"\\n    marker-end=\\\"url(#arrowhead)\\\"\\n    stroke=\\\"black\\\"\\n    style=\\\"stroke-width: 2px;\\\"\\n    ></line>\\n\\n    <marker\\n            id=\\\"arrowhead\\\"\\n            [attr.markerWidth]=\\\"arrow.width\\\"\\n            [attr.markerHeight]=\\\"arrow.height\\\"\\n            [attr.refX]=\\\"arrow.refX\\\"\\n            [attr.refY]=\\\"arrow.refY\\\"\\n            orient=\\\"auto\\\"\\n            fill=\\\"black\\\"\\n            markerUnits=\\\"userSpaceOnUse\\\"\\n    >\\n        <polygon [attr.points]=\\\"arrow.path()\\\" />\\n    </marker>\\n\\n    <g *ngFor=\\\"let state of getStates()\\\">\\n        <circle\\n        *ngIf=\\\"(!state.isDeterministic() && showDeterministicStates) || state.highlight\\\"\\n        [ngClass]=\\\"{\\n            'deterministic': !state.isDeterministic() && showDeterministicStates,\\n            'highlightState': state.highlight\\n          }\\\"\\n        [attr.r]=\\\"outerCircleRadius\\\"\\n        [attr.cx]=\\\"state.origin.x\\\"\\n        [attr.cy]=\\\"state.origin.y\\\"\\n        />\\n\\n        <g\\n        (mouseup)=\\\"onEntireCircleMouseUp($event, state)\\\"\\n        (mousedown)=\\\"onEntireCircleMouseDown($event, state)\\\"\\n        (mouseenter)=\\\"onCircleEnter($event, state)\\\"\\n        (mouseleave)=\\\"onCircleLeave($event, state)\\\"\\n        >\\n            <g\\n            [ngClass]=\\\"{\\n                outerCircle: true,\\n                isActive: isActiveState(state),\\n                startConnection: showStartConnection(state) || state.outerCircleHovered,\\n                endConnection: showEndConnection(state)\\n            }\\\"\\n            (mouseup)=\\\"onOuterCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onOuterCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onOuterCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onOuterCircleLeave($event, state)\\\"\\n            >\\n                <circle\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\"\\n                [attr.r]=\\\"state.r\\\">\\n                </circle>\\n\\n                <circle\\n                *ngIf=\\\"isFinalState(state)\\\"\\n                [attr.r]=\\\"state.r - 5\\\"\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\">\\n                </circle>\\n            </g>\\n\\n            <circle\\n            [ngClass]=\\\"{\\n                innerCircle: true,\\n                isActive: isActiveState(state),\\n                endConnection: showEndConnection(state) || state.innerCircleHovered\\n            }\\\"\\n            [attr.cx]=\\\"state.x\\\"\\n            [attr.cy]=\\\"state.y\\\"\\n            [attr.r]=\\\"state.r * 0.5\\\"\\n            (mouseup)=\\\"onInnerCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onInnerCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onInnerCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onInnerCircleLeave($event, state)\\\"\\n            (contextmenu)=\\\"openStateEditDialog(state, $event)\\\"\\n            >\\n            </circle>\\n        </g>\\n\\n        <text\\n        text-anchor=\\\"middle\\\"\\n        dominant-baseline=\\\"middle\\\"\\n        [attr.x]=\\\"state.x\\\"\\n        [attr.y]=\\\"state.y\\\"\\n        >\\n        {{ state.name }}\\n        </text>\\n\\n        <line\\n        *ngIf=\\\"isStartState(state)\\\"\\n        [attr.x1]=\\\"state.origin.x - state.r - START_TRANSITION_ARROW_LENGTH\\\"\\n        [attr.x2]=\\\"state.origin.x - state.r - ARROW_LENGTH\\\"\\n        [attr.y1]=\\\"state.origin.y\\\"\\n        [attr.y2]=\\\"state.origin.y\\\"\\n        marker-end=\\\"url(#startStateArrowHead)\\\"\\n        ></line>\\n    </g>\\n\\n    <g *ngFor=\\\"let transition of transitions; let i = index\\\">\\n\\n        <path\\n            [attr.d]=\\\"transition.arrow()\\\"\\n            fill=\\\"black\\\"\\n        ></path>\\n\\n        <path\\n            [attr.d]=\\\"transition.path()\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path\\n            class=\\\"invisiblePathClickable\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            [attr.d]=\\\"transition.path()\\\"\\n            [id]=\\\"'transition'+ i\\\"\\n            (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path *ngIf=\\\"transition.highlight\\\"\\n              class=\\\"highlightPath\\\"\\n          fill=\\\"none\\\"\\n          [attr.d]=\\\"transition.path()\\\"\\n          [id]=\\\"'transition'+ i\\\"\\n          (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n          (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n          (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <text\\n            *ngFor=\\\"let label of transition.labels(); let j = index\\\"\\n            [attr.x]=\\\"label.x\\\"\\n            [attr.y]=\\\"label.y\\\"\\n            [attr.font-family]=\\\"transition.fontFamily\\\"\\n            [attr.font-size]=\\\"transition.fontSize\\\"\\n            dominant-baseline=\\\"middle\\\"\\n            text-anchor=\\\"start\\\"\\n            >\\n            {{ label.text }}\\n        </text>\\n    </g>\\n</svg>\\n\\n\\n\\n\", styles: [\":host{position:relative}#svg-field{width:100%;height:100%}.toggleTestcaseView{position:absolute;top:10px;right:10px;cursor:pointer}.innerCircle{cursor:grab;stroke:transparent;fill:#fff}.outerCircle{stroke-width:2px;stroke:#000;fill:#fff}.isActive{fill:#34ec34}.startConnection,.endConnection{fill:green}text{pointer-events:none;-webkit-user-select:none;user-select:none}.transition-midpoint-indicator{opacity:0}.transition-midpoint-indicator.visible{opacity:1}.invisiblePathClickable{stroke:green;opacity:0;stroke-width:10px;cursor:move}.invisiblePathClickable:hover,.highlightPath{stroke:green;opacity:.5;stroke-width:10px}line{pointer-events:none;stroke:#000;stroke-width:3px}circle{stroke:#000;stroke-width:2px}.deterministic{fill:brown;stroke-width:0px;opacity:50%}.highlightState{fill:green;stroke-width:0px;opacity:50%}.sticky-header{position:sticky;top:0;left:0;right:0;z-index:1000;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);box-shadow:0 4px 8px #0000001a}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: StatemachineviewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-statemachineview', standalone: true, imports: [CommonModule], template: \"<svg id=\\\"svg-field\\\" #svgField>\\n\\n    <marker\\n    id=\\\"startStateArrowHead\\\"\\n    markerWidth=\\\"10\\\"\\n    markerHeight=\\\"7\\\"\\n    refX=\\\"6\\\"\\n    refY=\\\"2.5\\\"\\n    orient=\\\"auto\\\"\\n    fill=\\\"black\\\"\\n    >\\n    <polygon points=\\\"0 0, 7.5 2.5, 0 5\\\" />\\n    </marker>\\n\\n    <!-- Responds to double-click events on empty canvas areas -->\\n    <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"transparent\\\" (dblclick)=\\\"drawState($event)\\\"></rect>\\n\\n    <!-- Draw straight arrow from one point to another if a transition is being drawn -->\\n    <line\\n    *ngIf=\\\"showDrawingTransition()\\\"\\n    [attr.x1]=\\\"drawingTransitionOrigin().x\\\"\\n    [attr.y1]=\\\"drawingTransitionOrigin().y\\\"\\n    [attr.x2]=\\\"drawingTransitionDestination().x\\\"\\n    [attr.y2]=\\\"drawingTransitionDestination().y\\\"\\n    marker-end=\\\"url(#arrowhead)\\\"\\n    stroke=\\\"black\\\"\\n    style=\\\"stroke-width: 2px;\\\"\\n    ></line>\\n\\n    <marker\\n            id=\\\"arrowhead\\\"\\n            [attr.markerWidth]=\\\"arrow.width\\\"\\n            [attr.markerHeight]=\\\"arrow.height\\\"\\n            [attr.refX]=\\\"arrow.refX\\\"\\n            [attr.refY]=\\\"arrow.refY\\\"\\n            orient=\\\"auto\\\"\\n            fill=\\\"black\\\"\\n            markerUnits=\\\"userSpaceOnUse\\\"\\n    >\\n        <polygon [attr.points]=\\\"arrow.path()\\\" />\\n    </marker>\\n\\n    <g *ngFor=\\\"let state of getStates()\\\">\\n        <circle\\n        *ngIf=\\\"(!state.isDeterministic() && showDeterministicStates) || state.highlight\\\"\\n        [ngClass]=\\\"{\\n            'deterministic': !state.isDeterministic() && showDeterministicStates,\\n            'highlightState': state.highlight\\n          }\\\"\\n        [attr.r]=\\\"outerCircleRadius\\\"\\n        [attr.cx]=\\\"state.origin.x\\\"\\n        [attr.cy]=\\\"state.origin.y\\\"\\n        />\\n\\n        <g\\n        (mouseup)=\\\"onEntireCircleMouseUp($event, state)\\\"\\n        (mousedown)=\\\"onEntireCircleMouseDown($event, state)\\\"\\n        (mouseenter)=\\\"onCircleEnter($event, state)\\\"\\n        (mouseleave)=\\\"onCircleLeave($event, state)\\\"\\n        >\\n            <g\\n            [ngClass]=\\\"{\\n                outerCircle: true,\\n                isActive: isActiveState(state),\\n                startConnection: showStartConnection(state) || state.outerCircleHovered,\\n                endConnection: showEndConnection(state)\\n            }\\\"\\n            (mouseup)=\\\"onOuterCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onOuterCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onOuterCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onOuterCircleLeave($event, state)\\\"\\n            >\\n                <circle\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\"\\n                [attr.r]=\\\"state.r\\\">\\n                </circle>\\n\\n                <circle\\n                *ngIf=\\\"isFinalState(state)\\\"\\n                [attr.r]=\\\"state.r - 5\\\"\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\">\\n                </circle>\\n            </g>\\n\\n            <circle\\n            [ngClass]=\\\"{\\n                innerCircle: true,\\n                isActive: isActiveState(state),\\n                endConnection: showEndConnection(state) || state.innerCircleHovered\\n            }\\\"\\n            [attr.cx]=\\\"state.x\\\"\\n            [attr.cy]=\\\"state.y\\\"\\n            [attr.r]=\\\"state.r * 0.5\\\"\\n            (mouseup)=\\\"onInnerCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onInnerCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onInnerCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onInnerCircleLeave($event, state)\\\"\\n            (contextmenu)=\\\"openStateEditDialog(state, $event)\\\"\\n            >\\n            </circle>\\n        </g>\\n\\n        <text\\n        text-anchor=\\\"middle\\\"\\n        dominant-baseline=\\\"middle\\\"\\n        [attr.x]=\\\"state.x\\\"\\n        [attr.y]=\\\"state.y\\\"\\n        >\\n        {{ state.name }}\\n        </text>\\n\\n        <line\\n        *ngIf=\\\"isStartState(state)\\\"\\n        [attr.x1]=\\\"state.origin.x - state.r - START_TRANSITION_ARROW_LENGTH\\\"\\n        [attr.x2]=\\\"state.origin.x - state.r - ARROW_LENGTH\\\"\\n        [attr.y1]=\\\"state.origin.y\\\"\\n        [attr.y2]=\\\"state.origin.y\\\"\\n        marker-end=\\\"url(#startStateArrowHead)\\\"\\n        ></line>\\n    </g>\\n\\n    <g *ngFor=\\\"let transition of transitions; let i = index\\\">\\n\\n        <path\\n            [attr.d]=\\\"transition.arrow()\\\"\\n            fill=\\\"black\\\"\\n        ></path>\\n\\n        <path\\n            [attr.d]=\\\"transition.path()\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path\\n            class=\\\"invisiblePathClickable\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            [attr.d]=\\\"transition.path()\\\"\\n            [id]=\\\"'transition'+ i\\\"\\n            (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path *ngIf=\\\"transition.highlight\\\"\\n              class=\\\"highlightPath\\\"\\n          fill=\\\"none\\\"\\n          [attr.d]=\\\"transition.path()\\\"\\n          [id]=\\\"'transition'+ i\\\"\\n          (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n          (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n          (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <text\\n            *ngFor=\\\"let label of transition.labels(); let j = index\\\"\\n            [attr.x]=\\\"label.x\\\"\\n            [attr.y]=\\\"label.y\\\"\\n            [attr.font-family]=\\\"transition.fontFamily\\\"\\n            [attr.font-size]=\\\"transition.fontSize\\\"\\n            dominant-baseline=\\\"middle\\\"\\n            text-anchor=\\\"start\\\"\\n            >\\n            {{ label.text }}\\n        </text>\\n    </g>\\n</svg>\\n\\n\\n\\n\", styles: [\":host{position:relative}#svg-field{width:100%;height:100%}.toggleTestcaseView{position:absolute;top:10px;right:10px;cursor:pointer}.innerCircle{cursor:grab;stroke:transparent;fill:#fff}.outerCircle{stroke-width:2px;stroke:#000;fill:#fff}.isActive{fill:#34ec34}.startConnection,.endConnection{fill:green}text{pointer-events:none;-webkit-user-select:none;user-select:none}.transition-midpoint-indicator{opacity:0}.transition-midpoint-indicator.visible{opacity:1}.invisiblePathClickable{stroke:green;opacity:0;stroke-width:10px;cursor:move}.invisiblePathClickable:hover,.highlightPath{stroke:green;opacity:.5;stroke-width:10px}line{pointer-events:none;stroke:#000;stroke-width:3px}circle{stroke:#000;stroke-width:2px}.deterministic{fill:brown;stroke-width:0px;opacity:50%}.highlightState{fill:green;stroke-width:0px;opacity:50%}.sticky-header{position:sticky;top:0;left:0;right:0;z-index:1000;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);box-shadow:0 4px 8px #0000001a}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }, { type: i2.MatDialog }, { type: i0.NgZone }], propDecorators: { svgFieldElementRef: [{\n                type: ViewChild,\n                args: ['svgField']\n            }] } });\n\nclass CoreComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: CoreComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: CoreComponent, isStandalone: true, selector: \"app-core\", ngImport: i0, template: \"<app-statemachineview class=\\\"graph\\\"></app-statemachineview>\", styles: [\":host{flex-grow:1;display:flex}.graph{flex-grow:1;flex-basis:0;min-width:500px}\\n\"], dependencies: [{ kind: \"component\", type: StatemachineviewComponent, selector: \"app-statemachineview\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: CoreComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-core', standalone: true, imports: [StatemachineviewComponent], template: \"<app-statemachineview class=\\\"graph\\\"></app-statemachineview>\", styles: [\":host{flex-grow:1;display:flex}.graph{flex-grow:1;flex-basis:0;min-width:500px}\\n\"] }]\n        }] });\n\nclass FooterComponent {\n    getCurrentYear(startYear) {\n        const currentYear = new Date().getFullYear();\n        return startYear == currentYear\n            ? currentYear + ''\n            : startYear + ' - ' + currentYear;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: FooterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: FooterComponent, isStandalone: true, selector: \"app-footer\", ngImport: i0, template: \"<footer>\\n    <span\\n    ><span>\\u00A9 {{ getCurrentYear(2023) }}</span>\\n        <span class=\\\"wh-text\\\">Westf\\u00E4lische Hochschule</span> Gelsenkirchen</span\\n    >\\n  <span class=\\\"infoLinks\\\">\\n        <a href=\\\"https://www.w-hs.de/service/impressum/\\\" target=\\\"_blank\\\"\\n        >Impressum</a\\n        >\\n        <a href=\\\"https://pi-lab2.w-hs.de/THI/Datenschutz.html\\\" target=\\\"_blank\\\"\\n        >Datenschutz</a\\n        >\\n        <a\\n          href=\\\"https://pi-lab2.w-hs.de/THI/Barrierefreiheit.html\\\"\\n          target=\\\"_blank\\\"\\n        >Barrierefreiheit</a\\n        >\\n    </span>\\n</footer>\\n\", styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0,0,.2,1);transform:scale3d(0,0,0);background-color:var(--mat-ripple-color, rgba(0, 0, 0, .1))}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:#00000052}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0!important;box-sizing:content-box!important;height:auto!important;overflow:hidden!important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0!important;box-sizing:content-box!important;height:0!important}@keyframes cdk-text-field-autofill-start{}@keyframes cdk-text-field-autofill-end{}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}.mat-focus-indicator{position:relative}.mat-focus-indicator:before{inset:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border:var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus:before{content:\\\"\\\"}.cdk-high-contrast-active{--mat-focus-indicator-display: block}.mat-mdc-focus-indicator{position:relative}.mat-mdc-focus-indicator:before{inset:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-mdc-focus-indicator-display, none);border:var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);border-radius:var(--mat-mdc-focus-indicator-border-radius, 4px)}.mat-mdc-focus-indicator:focus:before{content:\\\"\\\"}.cdk-high-contrast-active{--mat-mdc-focus-indicator-display: block}.mat-app-background{background-color:var(--mat-app-background-color, transparent);color:var(--mat-app-text-color, inherit)}html{--mat-ripple-color: rgba(0, 0, 0, .1)}html{--mat-option-selected-state-label-text-color: #4caf50;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}.mat-accent{--mat-option-selected-state-label-text-color: #ff4081;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}.mat-warn{--mat-option-selected-state-label-text-color: #f44336;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}html{--mat-optgroup-label-text-color: rgba(0, 0, 0, .87)}.mat-primary{--mat-full-pseudo-checkbox-selected-icon-color: #4caf50;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #4caf50;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}html,.mat-accent{--mat-full-pseudo-checkbox-selected-icon-color: #ff4081;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #ff4081;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}.mat-warn{--mat-full-pseudo-checkbox-selected-icon-color: #f44336;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #f44336;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}html{--mat-app-background-color: #fafafa;--mat-app-text-color: rgba(0, 0, 0, .87)}.mat-elevation-z0,.mat-mdc-elevation-specific.mat-elevation-z0{box-shadow:0 0 #0003,0 0 #00000024,0 0 #0000001f}.mat-elevation-z1,.mat-mdc-elevation-specific.mat-elevation-z1{box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}.mat-elevation-z2,.mat-mdc-elevation-specific.mat-elevation-z2{box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f}.mat-elevation-z3,.mat-mdc-elevation-specific.mat-elevation-z3{box-shadow:0 3px 3px -2px #0003,0 3px 4px #00000024,0 1px 8px #0000001f}.mat-elevation-z4,.mat-mdc-elevation-specific.mat-elevation-z4{box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f}.mat-elevation-z5,.mat-mdc-elevation-specific.mat-elevation-z5{box-shadow:0 3px 5px -1px #0003,0 5px 8px #00000024,0 1px 14px #0000001f}.mat-elevation-z6,.mat-mdc-elevation-specific.mat-elevation-z6{box-shadow:0 3px 5px -1px #0003,0 6px 10px #00000024,0 1px 18px #0000001f}.mat-elevation-z7,.mat-mdc-elevation-specific.mat-elevation-z7{box-shadow:0 4px 5px -2px #0003,0 7px 10px 1px #00000024,0 2px 16px 1px #0000001f}.mat-elevation-z8,.mat-mdc-elevation-specific.mat-elevation-z8{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.mat-elevation-z9,.mat-mdc-elevation-specific.mat-elevation-z9{box-shadow:0 5px 6px -3px #0003,0 9px 12px 1px #00000024,0 3px 16px 2px #0000001f}.mat-elevation-z10,.mat-mdc-elevation-specific.mat-elevation-z10{box-shadow:0 6px 6px -3px #0003,0 10px 14px 1px #00000024,0 4px 18px 3px #0000001f}.mat-elevation-z11,.mat-mdc-elevation-specific.mat-elevation-z11{box-shadow:0 6px 7px -4px #0003,0 11px 15px 1px #00000024,0 4px 20px 3px #0000001f}.mat-elevation-z12,.mat-mdc-elevation-specific.mat-elevation-z12{box-shadow:0 7px 8px -4px #0003,0 12px 17px 2px #00000024,0 5px 22px 4px #0000001f}.mat-elevation-z13,.mat-mdc-elevation-specific.mat-elevation-z13{box-shadow:0 7px 8px -4px #0003,0 13px 19px 2px #00000024,0 5px 24px 4px #0000001f}.mat-elevation-z14,.mat-mdc-elevation-specific.mat-elevation-z14{box-shadow:0 7px 9px -4px #0003,0 14px 21px 2px #00000024,0 5px 26px 4px #0000001f}.mat-elevation-z15,.mat-mdc-elevation-specific.mat-elevation-z15{box-shadow:0 8px 9px -5px #0003,0 15px 22px 2px #00000024,0 6px 28px 5px #0000001f}.mat-elevation-z16,.mat-mdc-elevation-specific.mat-elevation-z16{box-shadow:0 8px 10px -5px #0003,0 16px 24px 2px #00000024,0 6px 30px 5px #0000001f}.mat-elevation-z17,.mat-mdc-elevation-specific.mat-elevation-z17{box-shadow:0 8px 11px -5px #0003,0 17px 26px 2px #00000024,0 6px 32px 5px #0000001f}.mat-elevation-z18,.mat-mdc-elevation-specific.mat-elevation-z18{box-shadow:0 9px 11px -5px #0003,0 18px 28px 2px #00000024,0 7px 34px 6px #0000001f}.mat-elevation-z19,.mat-mdc-elevation-specific.mat-elevation-z19{box-shadow:0 9px 12px -6px #0003,0 19px 29px 2px #00000024,0 7px 36px 6px #0000001f}.mat-elevation-z20,.mat-mdc-elevation-specific.mat-elevation-z20{box-shadow:0 10px 13px -6px #0003,0 20px 31px 3px #00000024,0 8px 38px 7px #0000001f}.mat-elevation-z21,.mat-mdc-elevation-specific.mat-elevation-z21{box-shadow:0 10px 13px -6px #0003,0 21px 33px 3px #00000024,0 8px 40px 7px #0000001f}.mat-elevation-z22,.mat-mdc-elevation-specific.mat-elevation-z22{box-shadow:0 10px 14px -6px #0003,0 22px 35px 3px #00000024,0 8px 42px 7px #0000001f}.mat-elevation-z23,.mat-mdc-elevation-specific.mat-elevation-z23{box-shadow:0 11px 14px -7px #0003,0 23px 36px 3px #00000024,0 9px 44px 8px #0000001f}.mat-elevation-z24,.mat-mdc-elevation-specific.mat-elevation-z24{box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}.mat-theme-loaded-marker{display:none}html{--mdc-elevated-card-container-shape: 4px;--mdc-outlined-card-container-shape: 4px;--mdc-outlined-card-outline-width: 1px}html{--mdc-elevated-card-container-color: white;--mdc-elevated-card-container-elevation: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mdc-outlined-card-container-color: white;--mdc-outlined-card-outline-color: rgba(0, 0, 0, .12);--mdc-outlined-card-container-elevation: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mat-card-subtitle-text-color: rgba(0, 0, 0, .54)}html{--mdc-linear-progress-active-indicator-height: 4px;--mdc-linear-progress-track-height: 4px;--mdc-linear-progress-track-shape: 0}.mat-mdc-progress-bar{--mdc-linear-progress-active-indicator-color: #4caf50;--mdc-linear-progress-track-color: rgba(76, 175, 80, .25)}.mat-mdc-progress-bar.mat-accent{--mdc-linear-progress-active-indicator-color: #ff4081;--mdc-linear-progress-track-color: rgba(255, 64, 129, .25)}.mat-mdc-progress-bar.mat-warn{--mdc-linear-progress-active-indicator-color: #f44336;--mdc-linear-progress-track-color: rgba(244, 67, 54, .25)}html{--mdc-plain-tooltip-container-shape: 4px;--mdc-plain-tooltip-supporting-text-line-height: 16px}html{--mdc-plain-tooltip-container-color: #616161;--mdc-plain-tooltip-supporting-text-color: #fff}html{--mdc-filled-text-field-active-indicator-height: 1px;--mdc-filled-text-field-focus-active-indicator-height: 2px;--mdc-filled-text-field-container-shape: 4px;--mdc-outlined-text-field-outline-width: 1px;--mdc-outlined-text-field-focus-outline-width: 2px;--mdc-outlined-text-field-container-shape: 4px}html{--mdc-filled-text-field-caret-color: #4caf50;--mdc-filled-text-field-focus-active-indicator-color: #4caf50;--mdc-filled-text-field-focus-label-text-color: rgba(76, 175, 80, .87);--mdc-filled-text-field-container-color: whitesmoke;--mdc-filled-text-field-disabled-container-color: #fafafa;--mdc-filled-text-field-label-text-color: rgba(0, 0, 0, .6);--mdc-filled-text-field-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-filled-text-field-input-text-color: rgba(0, 0, 0, .87);--mdc-filled-text-field-disabled-input-text-color: rgba(0, 0, 0, .38);--mdc-filled-text-field-input-text-placeholder-color: rgba(0, 0, 0, .6);--mdc-filled-text-field-error-focus-label-text-color: #f44336;--mdc-filled-text-field-error-label-text-color: #f44336;--mdc-filled-text-field-error-caret-color: #f44336;--mdc-filled-text-field-active-indicator-color: rgba(0, 0, 0, .42);--mdc-filled-text-field-disabled-active-indicator-color: rgba(0, 0, 0, .06);--mdc-filled-text-field-hover-active-indicator-color: rgba(0, 0, 0, .87);--mdc-filled-text-field-error-active-indicator-color: #f44336;--mdc-filled-text-field-error-focus-active-indicator-color: #f44336;--mdc-filled-text-field-error-hover-active-indicator-color: #f44336;--mdc-outlined-text-field-caret-color: #4caf50;--mdc-outlined-text-field-focus-outline-color: #4caf50;--mdc-outlined-text-field-focus-label-text-color: rgba(76, 175, 80, .87);--mdc-outlined-text-field-label-text-color: rgba(0, 0, 0, .6);--mdc-outlined-text-field-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-input-text-color: rgba(0, 0, 0, .87);--mdc-outlined-text-field-disabled-input-text-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-input-text-placeholder-color: rgba(0, 0, 0, .6);--mdc-outlined-text-field-error-caret-color: #f44336;--mdc-outlined-text-field-error-focus-label-text-color: #f44336;--mdc-outlined-text-field-error-label-text-color: #f44336;--mdc-outlined-text-field-outline-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-disabled-outline-color: rgba(0, 0, 0, .06);--mdc-outlined-text-field-hover-outline-color: rgba(0, 0, 0, .87);--mdc-outlined-text-field-error-focus-outline-color: #f44336;--mdc-outlined-text-field-error-hover-outline-color: #f44336;--mdc-outlined-text-field-error-outline-color: #f44336;--mat-form-field-focus-select-arrow-color: rgba(76, 175, 80, .87);--mat-form-field-disabled-input-text-placeholder-color: rgba(0, 0, 0, .38);--mat-form-field-state-layer-color: rgba(0, 0, 0, .87);--mat-form-field-error-text-color: #f44336;--mat-form-field-select-option-text-color: inherit;--mat-form-field-select-disabled-option-text-color: GrayText;--mat-form-field-enabled-select-arrow-color: rgba(0, 0, 0, .54);--mat-form-field-disabled-select-arrow-color: rgba(0, 0, 0, .38);--mat-form-field-hover-state-layer-opacity: .04;--mat-form-field-focus-state-layer-opacity: .12}.mat-mdc-form-field.mat-accent{--mdc-filled-text-field-caret-color: #ff4081;--mdc-filled-text-field-focus-active-indicator-color: #ff4081;--mdc-filled-text-field-focus-label-text-color: rgba(255, 64, 129, .87);--mdc-outlined-text-field-caret-color: #ff4081;--mdc-outlined-text-field-focus-outline-color: #ff4081;--mdc-outlined-text-field-focus-label-text-color: rgba(255, 64, 129, .87);--mat-form-field-focus-select-arrow-color: rgba(255, 64, 129, .87)}.mat-mdc-form-field.mat-warn{--mdc-filled-text-field-caret-color: #f44336;--mdc-filled-text-field-focus-active-indicator-color: #f44336;--mdc-filled-text-field-focus-label-text-color: rgba(244, 67, 54, .87);--mdc-outlined-text-field-caret-color: #f44336;--mdc-outlined-text-field-focus-outline-color: #f44336;--mdc-outlined-text-field-focus-label-text-color: rgba(244, 67, 54, .87);--mat-form-field-focus-select-arrow-color: rgba(244, 67, 54, .87)}html{--mat-form-field-container-height: 56px;--mat-form-field-filled-label-display: block;--mat-form-field-container-vertical-padding: 16px;--mat-form-field-filled-with-label-container-padding-top: 24px;--mat-form-field-filled-with-label-container-padding-bottom: 8px}html{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(76, 175, 80, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html .mat-mdc-form-field.mat-accent{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(255, 64, 129, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html .mat-mdc-form-field.mat-warn{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(244, 67, 54, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html{--mat-autocomplete-background-color: white}html{--mdc-dialog-container-elevation-shadow: 0px 11px 15px -7px rgba(0, 0, 0, .2), 0px 24px 38px 3px rgba(0, 0, 0, .14), 0px 9px 46px 8px rgba(0, 0, 0, .12);--mdc-dialog-container-shadow-color: #000;--mdc-dialog-container-shape: 4px}html{--mdc-dialog-container-color: white;--mdc-dialog-subhead-color: rgba(0, 0, 0, .87);--mdc-dialog-supporting-text-color: rgba(0, 0, 0, .6)}.mat-mdc-standard-chip{--mdc-chip-container-shape-family: rounded;--mdc-chip-container-shape-radius: 16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family: rounded;--mdc-chip-with-avatar-avatar-shape-radius: 14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size: 28px;--mdc-chip-with-icon-icon-size: 18px}.mat-mdc-standard-chip{--mdc-chip-disabled-label-text-color: #212121;--mdc-chip-elevated-container-color: #e0e0e0;--mdc-chip-elevated-disabled-container-color: #e0e0e0;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: #212121;--mdc-chip-with-icon-icon-color: #212121;--mdc-chip-with-icon-disabled-icon-color: #212121;--mdc-chip-with-icon-selected-icon-color: #212121;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;--mdc-chip-with-trailing-icon-trailing-icon-color: #212121}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-primary,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-primary{--mdc-chip-disabled-label-text-color: rgba(0, 0, 0, .87);--mdc-chip-elevated-container-color: #4caf50;--mdc-chip-elevated-disabled-container-color: #4caf50;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-disabled-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-selected-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-trailing-icon-trailing-icon-color: rgba(0, 0, 0, .87)}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-accent,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-accent{--mdc-chip-disabled-label-text-color: white;--mdc-chip-elevated-container-color: #ff4081;--mdc-chip-elevated-disabled-container-color: #ff4081;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: white;--mdc-chip-with-icon-icon-color: white;--mdc-chip-with-icon-disabled-icon-color: white;--mdc-chip-with-icon-selected-icon-color: white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;--mdc-chip-with-trailing-icon-trailing-icon-color: white}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-warn,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-warn{--mdc-chip-disabled-label-text-color: white;--mdc-chip-elevated-container-color: #f44336;--mdc-chip-elevated-disabled-container-color: #f44336;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: white;--mdc-chip-with-icon-icon-color: white;--mdc-chip-with-icon-disabled-icon-color: white;--mdc-chip-with-icon-selected-icon-color: white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;--mdc-chip-with-trailing-icon-trailing-icon-color: white}.mat-mdc-chip.mat-mdc-standard-chip{--mdc-chip-container-height: 32px}.mdc-switch{--mdc-switch-disabled-handle-opacity: .38;--mdc-switch-disabled-selected-icon-opacity: .38;--mdc-switch-disabled-track-opacity: .12;--mdc-switch-disabled-unselected-icon-opacity: .38;--mdc-switch-handle-height: 20px;--mdc-switch-handle-shape: 10px;--mdc-switch-handle-width: 20px;--mdc-switch-selected-icon-size: 18px;--mdc-switch-track-height: 14px;--mdc-switch-track-shape: 7px;--mdc-switch-track-width: 36px;--mdc-switch-unselected-icon-size: 18px;--mdc-switch-state-layer-size: 40px;--mdc-switch-selected-focus-state-layer-opacity: .12;--mdc-switch-selected-hover-state-layer-opacity: .04;--mdc-switch-selected-pressed-state-layer-opacity: .1;--mdc-switch-unselected-focus-state-layer-opacity: .12;--mdc-switch-unselected-hover-state-layer-opacity: .04;--mdc-switch-unselected-pressed-state-layer-opacity: .1}.mat-mdc-slide-toggle{--mdc-switch-selected-focus-state-layer-color: #43a047;--mdc-switch-selected-handle-color: #43a047;--mdc-switch-selected-hover-state-layer-color: #43a047;--mdc-switch-selected-pressed-state-layer-color: #43a047;--mdc-switch-selected-focus-handle-color: #1b5e20;--mdc-switch-selected-hover-handle-color: #1b5e20;--mdc-switch-selected-pressed-handle-color: #1b5e20;--mdc-switch-selected-focus-track-color: #81c784;--mdc-switch-selected-hover-track-color: #81c784;--mdc-switch-selected-pressed-track-color: #81c784;--mdc-switch-selected-track-color: #81c784;--mdc-switch-disabled-selected-handle-color: #424242;--mdc-switch-disabled-selected-icon-color: #fff;--mdc-switch-disabled-selected-track-color: #424242;--mdc-switch-disabled-unselected-handle-color: #424242;--mdc-switch-disabled-unselected-icon-color: #fff;--mdc-switch-disabled-unselected-track-color: #424242;--mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);--mdc-switch-handle-elevation-shadow: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mdc-switch-handle-shadow-color: black;--mdc-switch-disabled-handle-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mdc-switch-selected-icon-color: #fff;--mdc-switch-unselected-focus-handle-color: #212121;--mdc-switch-unselected-focus-state-layer-color: #424242;--mdc-switch-unselected-focus-track-color: #e0e0e0;--mdc-switch-unselected-handle-color: #616161;--mdc-switch-unselected-hover-handle-color: #212121;--mdc-switch-unselected-hover-state-layer-color: #424242;--mdc-switch-unselected-hover-track-color: #e0e0e0;--mdc-switch-unselected-icon-color: #fff;--mdc-switch-unselected-pressed-handle-color: #212121;--mdc-switch-unselected-pressed-state-layer-color: #424242;--mdc-switch-unselected-pressed-track-color: #e0e0e0;--mdc-switch-unselected-track-color: #e0e0e0;--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:#00000061}.mat-mdc-slide-toggle.mat-accent{--mdc-switch-selected-focus-state-layer-color: #d81b60;--mdc-switch-selected-handle-color: #d81b60;--mdc-switch-selected-hover-state-layer-color: #d81b60;--mdc-switch-selected-pressed-state-layer-color: #d81b60;--mdc-switch-selected-focus-handle-color: #880e4f;--mdc-switch-selected-hover-handle-color: #880e4f;--mdc-switch-selected-pressed-handle-color: #880e4f;--mdc-switch-selected-focus-track-color: #f06292;--mdc-switch-selected-hover-track-color: #f06292;--mdc-switch-selected-pressed-track-color: #f06292;--mdc-switch-selected-track-color: #f06292}.mat-mdc-slide-toggle.mat-warn{--mdc-switch-selected-focus-state-layer-color: #e53935;--mdc-switch-selected-handle-color: #e53935;--mdc-switch-selected-hover-state-layer-color: #e53935;--mdc-switch-selected-pressed-state-layer-color: #e53935;--mdc-switch-selected-focus-handle-color: #b71c1c;--mdc-switch-selected-hover-handle-color: #b71c1c;--mdc-switch-selected-pressed-handle-color: #b71c1c;--mdc-switch-selected-focus-track-color: #e57373;--mdc-switch-selected-hover-track-color: #e57373;--mdc-switch-selected-pressed-track-color: #e57373;--mdc-switch-selected-track-color: #e57373}.mat-mdc-slide-toggle{--mdc-switch-state-layer-size: 48px}html{--mdc-radio-disabled-selected-icon-opacity: .38;--mdc-radio-disabled-unselected-icon-opacity: .38;--mdc-radio-state-layer-size: 40px}.mat-mdc-radio-button{--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-radio-button.mat-primary{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #4caf50;--mdc-radio-selected-hover-icon-color: #4caf50;--mdc-radio-selected-icon-color: #4caf50;--mdc-radio-selected-pressed-icon-color: #4caf50;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #4caf50;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}.mat-mdc-radio-button.mat-accent{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #ff4081;--mdc-radio-selected-hover-icon-color: #ff4081;--mdc-radio-selected-icon-color: #ff4081;--mdc-radio-selected-pressed-icon-color: #ff4081;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #ff4081;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}.mat-mdc-radio-button.mat-warn{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #f44336;--mdc-radio-selected-hover-icon-color: #f44336;--mdc-radio-selected-icon-color: #f44336;--mdc-radio-selected-pressed-icon-color: #f44336;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #f44336;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}html{--mdc-radio-state-layer-size: 40px}html{--mat-slider-value-indicator-width: auto;--mat-slider-value-indicator-height: 32px;--mat-slider-value-indicator-caret-display: block;--mat-slider-value-indicator-border-radius: 4px;--mat-slider-value-indicator-padding: 0 12px;--mat-slider-value-indicator-text-transform: none;--mat-slider-value-indicator-container-transform: translateX(-50%);--mdc-slider-active-track-height: 6px;--mdc-slider-active-track-shape: 9999px;--mdc-slider-handle-height: 20px;--mdc-slider-handle-shape: 50%;--mdc-slider-handle-width: 20px;--mdc-slider-inactive-track-height: 4px;--mdc-slider-inactive-track-shape: 9999px;--mdc-slider-with-overlap-handle-outline-width: 1px;--mdc-slider-with-tick-marks-active-container-opacity: .6;--mdc-slider-with-tick-marks-container-shape: 50%;--mdc-slider-with-tick-marks-container-size: 2px;--mdc-slider-with-tick-marks-inactive-container-opacity: .6}html{--mdc-slider-handle-color: #4caf50;--mdc-slider-focus-handle-color: #4caf50;--mdc-slider-hover-handle-color: #4caf50;--mdc-slider-active-track-color: #4caf50;--mdc-slider-inactive-track-color: #4caf50;--mdc-slider-with-tick-marks-inactive-container-color: #4caf50;--mdc-slider-with-tick-marks-active-container-color: rgba(0, 0, 0, .87);--mdc-slider-disabled-active-track-color: #000;--mdc-slider-disabled-handle-color: #000;--mdc-slider-disabled-inactive-track-color: #000;--mdc-slider-label-container-color: #000;--mdc-slider-label-label-text-color: #fff;--mdc-slider-with-overlap-handle-outline-color: #fff;--mdc-slider-with-tick-marks-disabled-container-color: #000;--mdc-slider-handle-elevation: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mat-slider-ripple-color: #4caf50;--mat-slider-hover-state-layer-color: rgba(76, 175, 80, .05);--mat-slider-focus-state-layer-color: rgba(76, 175, 80, .2);--mat-slider-value-indicator-opacity: .6}html .mat-accent{--mat-slider-ripple-color: #ff4081;--mat-slider-hover-state-layer-color: rgba(255, 64, 129, .05);--mat-slider-focus-state-layer-color: rgba(255, 64, 129, .2);--mdc-slider-handle-color: #ff4081;--mdc-slider-focus-handle-color: #ff4081;--mdc-slider-hover-handle-color: #ff4081;--mdc-slider-active-track-color: #ff4081;--mdc-slider-inactive-track-color: #ff4081;--mdc-slider-with-tick-marks-inactive-container-color: #ff4081;--mdc-slider-with-tick-marks-active-container-color: white}html .mat-warn{--mat-slider-ripple-color: #f44336;--mat-slider-hover-state-layer-color: rgba(244, 67, 54, .05);--mat-slider-focus-state-layer-color: rgba(244, 67, 54, .2);--mdc-slider-handle-color: #f44336;--mdc-slider-focus-handle-color: #f44336;--mdc-slider-hover-handle-color: #f44336;--mdc-slider-active-track-color: #f44336;--mdc-slider-inactive-track-color: #f44336;--mdc-slider-with-tick-marks-inactive-container-color: #f44336;--mdc-slider-with-tick-marks-active-container-color: white}html{--mat-menu-container-shape: 4px}html{--mat-menu-item-label-text-color: rgba(0, 0, 0, .87);--mat-menu-item-icon-color: rgba(0, 0, 0, .87);--mat-menu-item-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-menu-item-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-menu-container-color: white}html{--mdc-list-list-item-container-shape: 0;--mdc-list-list-item-leading-avatar-shape: 50%;--mdc-list-list-item-container-color: transparent;--mdc-list-list-item-selected-container-color: transparent;--mdc-list-list-item-leading-avatar-color: transparent;--mdc-list-list-item-leading-icon-size: 24px;--mdc-list-list-item-leading-avatar-size: 40px;--mdc-list-list-item-trailing-icon-size: 24px;--mdc-list-list-item-disabled-state-layer-color: transparent;--mdc-list-list-item-disabled-state-layer-opacity: 0;--mdc-list-list-item-disabled-label-text-opacity: .38;--mdc-list-list-item-disabled-leading-icon-opacity: .38;--mdc-list-list-item-disabled-trailing-icon-opacity: .38}html{--mdc-list-list-item-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, .54);--mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, .38);--mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-disabled-label-text-color: black;--mdc-list-list-item-disabled-leading-icon-color: black;--mdc-list-list-item-disabled-trailing-icon-color: black;--mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-hover-state-layer-color: black;--mdc-list-list-item-hover-state-layer-opacity: .04;--mdc-list-list-item-focus-state-layer-color: black;--mdc-list-list-item-focus-state-layer-opacity: .12}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #4caf50;--mdc-radio-selected-hover-icon-color: #4caf50;--mdc-radio-selected-icon-color: #4caf50;--mdc-radio-selected-pressed-icon-color: #4caf50}.mat-accent .mdc-list-item__start,.mat-accent .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #ff4081;--mdc-radio-selected-hover-icon-color: #ff4081;--mdc-radio-selected-icon-color: #ff4081;--mdc-radio-selected-pressed-icon-color: #ff4081}.mat-warn .mdc-list-item__start,.mat-warn .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #f44336;--mdc-radio-selected-hover-icon-color: #f44336;--mdc-radio-selected-icon-color: #f44336;--mdc-radio-selected-pressed-icon-color: #f44336}.mat-mdc-list-option{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #000;--mdc-checkbox-selected-focus-icon-color: #4caf50;--mdc-checkbox-selected-hover-icon-color: #4caf50;--mdc-checkbox-selected-icon-color: #4caf50;--mdc-checkbox-selected-pressed-icon-color: #4caf50;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #4caf50;--mdc-checkbox-selected-hover-state-layer-color: #4caf50;--mdc-checkbox-selected-pressed-state-layer-color: #4caf50;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-option.mat-accent{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #ff4081;--mdc-checkbox-selected-hover-icon-color: #ff4081;--mdc-checkbox-selected-icon-color: #ff4081;--mdc-checkbox-selected-pressed-icon-color: #ff4081;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #ff4081;--mdc-checkbox-selected-hover-state-layer-color: #ff4081;--mdc-checkbox-selected-pressed-state-layer-color: #ff4081;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-option.mat-warn{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #f44336;--mdc-checkbox-selected-hover-icon-color: #f44336;--mdc-checkbox-selected-icon-color: #f44336;--mdc-checkbox-selected-pressed-icon-color: #f44336;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #f44336;--mdc-checkbox-selected-hover-state-layer-color: #f44336;--mdc-checkbox-selected-pressed-state-layer-color: #f44336;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:#4caf50}.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end{opacity:1}html{--mdc-list-list-item-one-line-container-height: 48px;--mdc-list-list-item-two-line-container-height: 64px;--mdc-list-list-item-three-line-container-height: 88px}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-state-layer-size: 40px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}html{--mat-paginator-container-text-color: rgba(0, 0, 0, .87);--mat-paginator-container-background-color: white;--mat-paginator-enabled-icon-color: rgba(0, 0, 0, .54);--mat-paginator-disabled-icon-color: rgba(0, 0, 0, .12)}html{--mat-paginator-container-size: 56px}.mat-mdc-paginator{--mat-form-field-container-height: 40px;--mat-form-field-filled-label-display: none;--mat-form-field-container-vertical-padding: 8px;--mat-form-field-filled-with-label-container-padding-top: 8px;--mat-form-field-filled-with-label-container-padding-bottom: 8px}html{--mdc-tab-indicator-active-indicator-height: 2px;--mdc-tab-indicator-active-indicator-shape: 0;--mdc-secondary-navigation-tab-container-height: 48px;--mat-tab-header-divider-color: transparent;--mat-tab-header-divider-height: 0}.mat-mdc-tab-group,.mat-mdc-tab-nav-bar{--mdc-tab-indicator-active-indicator-color: #4caf50;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #4caf50;--mat-tab-header-active-ripple-color: #4caf50;--mat-tab-header-inactive-ripple-color: #4caf50;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #4caf50;--mat-tab-header-active-hover-label-text-color: #4caf50;--mat-tab-header-active-focus-indicator-color: #4caf50;--mat-tab-header-active-hover-indicator-color: #4caf50}.mat-mdc-tab-group.mat-accent,.mat-mdc-tab-nav-bar.mat-accent{--mdc-tab-indicator-active-indicator-color: #ff4081;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #ff4081;--mat-tab-header-active-ripple-color: #ff4081;--mat-tab-header-inactive-ripple-color: #ff4081;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #ff4081;--mat-tab-header-active-hover-label-text-color: #ff4081;--mat-tab-header-active-focus-indicator-color: #ff4081;--mat-tab-header-active-hover-indicator-color: #ff4081}.mat-mdc-tab-group.mat-warn,.mat-mdc-tab-nav-bar.mat-warn{--mdc-tab-indicator-active-indicator-color: #f44336;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #f44336;--mat-tab-header-active-ripple-color: #f44336;--mat-tab-header-inactive-ripple-color: #f44336;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #f44336;--mat-tab-header-active-hover-label-text-color: #f44336;--mat-tab-header-active-focus-indicator-color: #f44336;--mat-tab-header-active-hover-indicator-color: #f44336}.mat-mdc-tab-group.mat-background-primary,.mat-mdc-tab-nav-bar.mat-background-primary{--mat-tab-header-with-background-background-color: #4caf50;--mat-tab-header-with-background-foreground-color: rgba(0, 0, 0, .87)}.mat-mdc-tab-group.mat-background-accent,.mat-mdc-tab-nav-bar.mat-background-accent{--mat-tab-header-with-background-background-color: #ff4081;--mat-tab-header-with-background-foreground-color: white}.mat-mdc-tab-group.mat-background-warn,.mat-mdc-tab-nav-bar.mat-background-warn{--mat-tab-header-with-background-background-color: #f44336;--mat-tab-header-with-background-foreground-color: white}.mat-mdc-tab-header{--mdc-secondary-navigation-tab-container-height: 48px}html{--mdc-checkbox-disabled-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-state-layer-opacity: .16;--mdc-checkbox-selected-hover-state-layer-opacity: .04;--mdc-checkbox-selected-pressed-state-layer-opacity: .16;--mdc-checkbox-unselected-focus-state-layer-opacity: .16;--mdc-checkbox-unselected-hover-state-layer-opacity: .04;--mdc-checkbox-unselected-pressed-state-layer-opacity: .16}html{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #ff4081;--mdc-checkbox-selected-hover-icon-color: #ff4081;--mdc-checkbox-selected-icon-color: #ff4081;--mdc-checkbox-selected-pressed-icon-color: #ff4081;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #ff4081;--mdc-checkbox-selected-hover-state-layer-color: #ff4081;--mdc-checkbox-selected-pressed-state-layer-color: #ff4081;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox{--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-checkbox.mat-primary{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #000;--mdc-checkbox-selected-focus-icon-color: #4caf50;--mdc-checkbox-selected-hover-icon-color: #4caf50;--mdc-checkbox-selected-icon-color: #4caf50;--mdc-checkbox-selected-pressed-icon-color: #4caf50;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #4caf50;--mdc-checkbox-selected-hover-state-layer-color: #4caf50;--mdc-checkbox-selected-pressed-state-layer-color: #4caf50;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox.mat-warn{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #f44336;--mdc-checkbox-selected-hover-icon-color: #f44336;--mdc-checkbox-selected-icon-color: #f44336;--mdc-checkbox-selected-pressed-icon-color: #f44336;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #f44336;--mdc-checkbox-selected-hover-state-layer-color: #f44336;--mdc-checkbox-selected-pressed-state-layer-color: #f44336;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{color:#00000061}html{--mdc-checkbox-state-layer-size: 40px}html{--mdc-text-button-container-shape: 4px;--mdc-text-button-keep-touch-target: false;--mdc-filled-button-container-shape: 4px;--mdc-filled-button-keep-touch-target: false;--mdc-protected-button-container-shape: 4px;--mdc-protected-button-keep-touch-target: false;--mdc-outlined-button-keep-touch-target: false;--mdc-outlined-button-outline-width: 1px;--mdc-outlined-button-container-shape: 4px}html{--mdc-text-button-label-text-color: #000;--mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mat-text-button-state-layer-color: #000;--mat-text-button-disabled-state-layer-color: #000;--mat-text-button-ripple-color: rgba(0, 0, 0, .1);--mat-text-button-hover-state-layer-opacity: .04;--mat-text-button-focus-state-layer-opacity: .12;--mat-text-button-pressed-state-layer-opacity: .12;--mdc-filled-button-container-color: white;--mdc-filled-button-label-text-color: #000;--mdc-filled-button-disabled-container-color: rgba(0, 0, 0, .12);--mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mat-filled-button-state-layer-color: #000;--mat-filled-button-disabled-state-layer-color: #000;--mat-filled-button-ripple-color: rgba(0, 0, 0, .1);--mat-filled-button-hover-state-layer-opacity: .04;--mat-filled-button-focus-state-layer-opacity: .12;--mat-filled-button-pressed-state-layer-opacity: .12;--mdc-protected-button-container-color: white;--mdc-protected-button-label-text-color: #000;--mdc-protected-button-disabled-container-color: rgba(0, 0, 0, .12);--mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-protected-button-container-elevation-shadow: 0px 3px 1px -2px rgba(0, 0, 0, .2), 0px 2px 2px 0px rgba(0, 0, 0, .14), 0px 1px 5px 0px rgba(0, 0, 0, .12);--mdc-protected-button-disabled-container-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mdc-protected-button-focus-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, .2), 0px 4px 5px 0px rgba(0, 0, 0, .14), 0px 1px 10px 0px rgba(0, 0, 0, .12);--mdc-protected-button-hover-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, .2), 0px 4px 5px 0px rgba(0, 0, 0, .14), 0px 1px 10px 0px rgba(0, 0, 0, .12);--mdc-protected-button-pressed-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-protected-button-container-shadow-color: #000;--mat-protected-button-state-layer-color: #000;--mat-protected-button-disabled-state-layer-color: #000;--mat-protected-button-ripple-color: rgba(0, 0, 0, .1);--mat-protected-button-hover-state-layer-opacity: .04;--mat-protected-button-focus-state-layer-opacity: .12;--mat-protected-button-pressed-state-layer-opacity: .12;--mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, .12);--mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-outlined-button-label-text-color: #000;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #000;--mat-outlined-button-disabled-state-layer-color: #000;--mat-outlined-button-ripple-color: rgba(0, 0, 0, .1);--mat-outlined-button-hover-state-layer-opacity: .04;--mat-outlined-button-focus-state-layer-opacity: .12;--mat-outlined-button-pressed-state-layer-opacity: .12}.mat-mdc-button.mat-primary{--mdc-text-button-label-text-color: #4caf50;--mat-text-button-state-layer-color: #4caf50;--mat-text-button-ripple-color: rgba(76, 175, 80, .1)}.mat-mdc-button.mat-accent{--mdc-text-button-label-text-color: #ff4081;--mat-text-button-state-layer-color: #ff4081;--mat-text-button-ripple-color: rgba(255, 64, 129, .1)}.mat-mdc-button.mat-warn{--mdc-text-button-label-text-color: #f44336;--mat-text-button-state-layer-color: #f44336;--mat-text-button-ripple-color: rgba(244, 67, 54, .1)}.mat-mdc-unelevated-button.mat-primary{--mdc-filled-button-container-color: #4caf50;--mdc-filled-button-label-text-color: #000;--mat-filled-button-state-layer-color: #000;--mat-filled-button-ripple-color: rgba(0, 0, 0, .1)}.mat-mdc-unelevated-button.mat-accent{--mdc-filled-button-container-color: #ff4081;--mdc-filled-button-label-text-color: #fff;--mat-filled-button-state-layer-color: #fff;--mat-filled-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-unelevated-button.mat-warn{--mdc-filled-button-container-color: #f44336;--mdc-filled-button-label-text-color: #fff;--mat-filled-button-state-layer-color: #fff;--mat-filled-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-raised-button.mat-primary{--mdc-protected-button-container-color: #4caf50;--mdc-protected-button-label-text-color: #000;--mat-protected-button-state-layer-color: #000;--mat-protected-button-ripple-color: rgba(0, 0, 0, .1)}.mat-mdc-raised-button.mat-accent{--mdc-protected-button-container-color: #ff4081;--mdc-protected-button-label-text-color: #fff;--mat-protected-button-state-layer-color: #fff;--mat-protected-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-raised-button.mat-warn{--mdc-protected-button-container-color: #f44336;--mdc-protected-button-label-text-color: #fff;--mat-protected-button-state-layer-color: #fff;--mat-protected-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-outlined-button.mat-primary{--mdc-outlined-button-label-text-color: #4caf50;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #4caf50;--mat-outlined-button-ripple-color: rgba(76, 175, 80, .1)}.mat-mdc-outlined-button.mat-accent{--mdc-outlined-button-label-text-color: #ff4081;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #ff4081;--mat-outlined-button-ripple-color: rgba(255, 64, 129, .1)}.mat-mdc-outlined-button.mat-warn{--mdc-outlined-button-label-text-color: #f44336;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #f44336;--mat-outlined-button-ripple-color: rgba(244, 67, 54, .1)}html{--mdc-text-button-container-height: 36px;--mdc-filled-button-container-height: 36px;--mdc-outlined-button-container-height: 36px;--mdc-protected-button-container-height: 36px}html{--mdc-icon-button-state-layer-size: 48px;--mdc-icon-button-icon-size: 24px}html{--mdc-icon-button-icon-color: inherit;--mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, .38);--mat-icon-button-state-layer-color: #000;--mat-icon-button-disabled-state-layer-color: #000;--mat-icon-button-ripple-color: rgba(0, 0, 0, .1);--mat-icon-button-hover-state-layer-opacity: .04;--mat-icon-button-focus-state-layer-opacity: .12;--mat-icon-button-pressed-state-layer-opacity: .12}html .mat-mdc-icon-button.mat-primary{--mdc-icon-button-icon-color: #4caf50;--mat-icon-button-state-layer-color: #4caf50;--mat-icon-button-ripple-color: rgba(76, 175, 80, .1)}html .mat-mdc-icon-button.mat-accent{--mdc-icon-button-icon-color: #ff4081;--mat-icon-button-state-layer-color: #ff4081;--mat-icon-button-ripple-color: rgba(255, 64, 129, .1)}html .mat-mdc-icon-button.mat-warn{--mdc-icon-button-icon-color: #f44336;--mat-icon-button-state-layer-color: #f44336;--mat-icon-button-ripple-color: rgba(244, 67, 54, .1)}.mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size: 48px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:12px}html{--mdc-fab-container-shape: 50%;--mdc-fab-icon-size: 24px}html{--mdc-fab-container-color: white;--mdc-fab-container-elevation-shadow: 0px 3px 5px -1px rgba(0, 0, 0, .2), 0px 6px 10px 0px rgba(0, 0, 0, .14), 0px 1px 18px 0px rgba(0, 0, 0, .12);--mdc-fab-focus-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-fab-hover-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-fab-pressed-container-elevation-shadow: 0px 7px 8px -4px rgba(0, 0, 0, .2), 0px 12px 17px 2px rgba(0, 0, 0, .14), 0px 5px 22px 4px rgba(0, 0, 0, .12);--mdc-fab-container-shadow-color: #000;--mat-fab-foreground-color: black;--mat-fab-state-layer-color: #000;--mat-fab-disabled-state-layer-color: #000;--mat-fab-ripple-color: rgba(0, 0, 0, .1);--mat-fab-hover-state-layer-opacity: .04;--mat-fab-focus-state-layer-opacity: .12;--mat-fab-pressed-state-layer-opacity: .12;--mat-fab-disabled-state-container-color: rgba(0, 0, 0, .12);--mat-fab-disabled-state-foreground-color: rgba(0, 0, 0, .38);--mdc-extended-fab-container-elevation-shadow: 0px 3px 5px -1px rgba(0, 0, 0, .2), 0px 6px 10px 0px rgba(0, 0, 0, .14), 0px 1px 18px 0px rgba(0, 0, 0, .12);--mdc-extended-fab-focus-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-extended-fab-hover-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-extended-fab-pressed-container-elevation-shadow: 0px 7px 8px -4px rgba(0, 0, 0, .2), 0px 12px 17px 2px rgba(0, 0, 0, .14), 0px 5px 22px 4px rgba(0, 0, 0, .12);--mdc-extended-fab-container-shadow-color: #000}html .mat-mdc-fab.mat-primary,html .mat-mdc-mini-fab.mat-primary{--mdc-fab-container-color: #4caf50;--mat-fab-foreground-color: #000;--mat-fab-state-layer-color: #000;--mat-fab-ripple-color: rgba(0, 0, 0, .1)}html .mat-mdc-fab.mat-accent,html .mat-mdc-mini-fab.mat-accent{--mdc-fab-container-color: #ff4081;--mat-fab-foreground-color: #fff;--mat-fab-state-layer-color: #fff;--mat-fab-ripple-color: rgba(255, 255, 255, .1)}html .mat-mdc-fab.mat-warn,html .mat-mdc-mini-fab.mat-warn{--mdc-fab-container-color: #f44336;--mat-fab-foreground-color: #fff;--mat-fab-state-layer-color: #fff;--mat-fab-ripple-color: rgba(255, 255, 255, .1)}html{--mdc-snackbar-container-shape: 4px}html{--mdc-snackbar-container-color: #333333;--mdc-snackbar-supporting-text-color: rgba(255, 255, 255, .87);--mat-snack-bar-button-color: #ff4081}html{--mat-table-row-item-outline-width: 1px}html{--mat-table-background-color: white;--mat-table-header-headline-color: rgba(0, 0, 0, .87);--mat-table-row-item-label-text-color: rgba(0, 0, 0, .87);--mat-table-row-item-outline-color: rgba(0, 0, 0, .12)}html{--mat-table-header-container-height: 56px;--mat-table-footer-container-height: 52px;--mat-table-row-item-container-height: 52px}html{--mdc-circular-progress-active-indicator-width: 4px;--mdc-circular-progress-size: 48px}html{--mdc-circular-progress-active-indicator-color: #4caf50}html .mat-accent{--mdc-circular-progress-active-indicator-color: #ff4081}html .mat-warn{--mdc-circular-progress-active-indicator-color: #f44336}.mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform .2s ease-in-out;transform:scale(.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:Roboto,sans-serif;font-family:var(--mat-badge-text-font, Roboto, sans-serif);font-size:12px;font-size:var(--mat-badge-text-size, 12px);font-weight:600;font-weight:var(--mat-badge-text-weight, 600)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px;font-size:9px;font-size:var(--mat-badge-small-size-text-size, 9px)}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px;font-size:24px;font-size:var(--mat-badge-large-size-text-size, 24px)}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}html{--mat-badge-background-color: #4caf50;--mat-badge-text-color: rgba(0, 0, 0, .87);--mat-badge-disabled-state-background-color: #b9b9b9;--mat-badge-disabled-state-text-color: rgba(0, 0, 0, .38)}.mat-badge-accent{--mat-badge-background-color: #ff4081;--mat-badge-text-color: white}.mat-badge-warn{--mat-badge-background-color: #f44336;--mat-badge-text-color: white}html{--mat-bottom-sheet-container-shape: 4px}html{--mat-bottom-sheet-container-text-color: rgba(0, 0, 0, .87);--mat-bottom-sheet-container-background-color: white}html{--mat-legacy-button-toggle-height: 36px;--mat-legacy-button-toggle-shape: 2px;--mat-legacy-button-toggle-focus-state-layer-opacity: 1;--mat-standard-button-toggle-shape: 4px;--mat-standard-button-toggle-hover-state-layer-opacity: .04;--mat-standard-button-toggle-focus-state-layer-opacity: .12}html{--mat-legacy-button-toggle-text-color: rgba(0, 0, 0, .38);--mat-legacy-button-toggle-state-layer-color: rgba(0, 0, 0, .12);--mat-legacy-button-toggle-selected-state-text-color: rgba(0, 0, 0, .54);--mat-legacy-button-toggle-selected-state-background-color: #e0e0e0;--mat-legacy-button-toggle-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-legacy-button-toggle-disabled-state-background-color: #eeeeee;--mat-legacy-button-toggle-disabled-selected-state-background-color: #bdbdbd;--mat-standard-button-toggle-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-background-color: white;--mat-standard-button-toggle-state-layer-color: black;--mat-standard-button-toggle-selected-state-background-color: #e0e0e0;--mat-standard-button-toggle-selected-state-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-standard-button-toggle-disabled-state-background-color: white;--mat-standard-button-toggle-disabled-selected-state-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-disabled-selected-state-background-color: #bdbdbd;--mat-standard-button-toggle-divider-color: #e0e0e0}html{--mat-standard-button-toggle-height: 48px}html{--mat-datepicker-calendar-date-selected-state-text-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-selected-state-background-color: #4caf50;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(76, 175, 80, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-focus-state-background-color: rgba(76, 175, 80, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(76, 175, 80, .3);--mat-datepicker-toggle-active-state-icon-color: #4caf50;--mat-datepicker-calendar-date-in-range-state-background-color: rgba(76, 175, 80, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;--mat-datepicker-toggle-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-body-label-text-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-period-button-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-navigation-button-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-header-divider-color: rgba(0, 0, 0, .12);--mat-datepicker-calendar-header-text-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-date-today-outline-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-date-today-disabled-state-outline-color: rgba(0, 0, 0, .18);--mat-datepicker-calendar-date-text-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-outline-color: transparent;--mat-datepicker-calendar-date-disabled-state-text-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-date-preview-state-outline-color: rgba(0, 0, 0, .24);--mat-datepicker-range-input-separator-color: rgba(0, 0, 0, .87);--mat-datepicker-range-input-disabled-state-separator-color: rgba(0, 0, 0, .38);--mat-datepicker-range-input-disabled-state-text-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-container-background-color: white;--mat-datepicker-calendar-container-text-color: rgba(0, 0, 0, .87)}.mat-datepicker-content.mat-accent{--mat-datepicker-calendar-date-selected-state-text-color: white;--mat-datepicker-calendar-date-selected-state-background-color: #ff4081;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(255, 64, 129, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: white;--mat-datepicker-calendar-date-focus-state-background-color: rgba(255, 64, 129, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(255, 64, 129, .3);--mat-datepicker-calendar-date-in-range-state-background-color: rgba(255, 64, 129, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e}.mat-datepicker-content.mat-warn{--mat-datepicker-calendar-date-selected-state-text-color: white;--mat-datepicker-calendar-date-selected-state-background-color: #f44336;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(244, 67, 54, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: white;--mat-datepicker-calendar-date-focus-state-background-color: rgba(244, 67, 54, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(244, 67, 54, .3);--mat-datepicker-calendar-date-in-range-state-background-color: rgba(244, 67, 54, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e}.mat-datepicker-toggle-active.mat-accent{--mat-datepicker-toggle-active-state-icon-color: #ff4081}.mat-datepicker-toggle-active.mat-warn{--mat-datepicker-toggle-active-state-icon-color: #f44336}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size: 40px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:8px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target{display:none}html{--mat-divider-width: 1px}html{--mat-divider-color: rgba(0, 0, 0, .12)}html{--mat-expansion-container-shape: 4px}html{--mat-expansion-container-background-color: white;--mat-expansion-container-text-color: rgba(0, 0, 0, .87);--mat-expansion-actions-divider-color: rgba(0, 0, 0, .12);--mat-expansion-header-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-expansion-header-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-expansion-header-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-expansion-header-text-color: rgba(0, 0, 0, .87);--mat-expansion-header-description-color: rgba(0, 0, 0, .54);--mat-expansion-header-indicator-color: rgba(0, 0, 0, .54)}html{--mat-expansion-header-collapsed-state-height: 48px;--mat-expansion-header-expanded-state-height: 64px}html{--mat-icon-color: inherit}.mat-icon.mat-primary{--mat-icon-color: #4caf50}.mat-icon.mat-accent{--mat-icon-color: #ff4081}.mat-icon.mat-warn{--mat-icon-color: #f44336}html{--mat-sidenav-container-shape: 0}html{--mat-sidenav-container-divider-color: rgba(0, 0, 0, .12);--mat-sidenav-container-background-color: white;--mat-sidenav-container-text-color: rgba(0, 0, 0, .87);--mat-sidenav-content-background-color: #fafafa;--mat-sidenav-content-text-color: rgba(0, 0, 0, .87);--mat-sidenav-scrim-color: rgba(0, 0, 0, .6)}html{--mat-stepper-header-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-selected-state-icon-background-color: #4caf50;--mat-stepper-header-selected-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-done-state-icon-background-color: #4caf50;--mat-stepper-header-done-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-edit-state-icon-background-color: #4caf50;--mat-stepper-header-edit-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-container-color: white;--mat-stepper-line-color: rgba(0, 0, 0, .12);--mat-stepper-header-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-stepper-header-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-stepper-header-label-text-color: rgba(0, 0, 0, .54);--mat-stepper-header-optional-label-text-color: rgba(0, 0, 0, .54);--mat-stepper-header-selected-state-label-text-color: rgba(0, 0, 0, .87);--mat-stepper-header-error-state-label-text-color: #f44336;--mat-stepper-header-icon-background-color: rgba(0, 0, 0, .54);--mat-stepper-header-error-state-icon-foreground-color: #f44336;--mat-stepper-header-error-state-icon-background-color: transparent}html .mat-step-header.mat-accent{--mat-stepper-header-icon-foreground-color: white;--mat-stepper-header-selected-state-icon-background-color: #ff4081;--mat-stepper-header-selected-state-icon-foreground-color: white;--mat-stepper-header-done-state-icon-background-color: #ff4081;--mat-stepper-header-done-state-icon-foreground-color: white;--mat-stepper-header-edit-state-icon-background-color: #ff4081;--mat-stepper-header-edit-state-icon-foreground-color: white}html .mat-step-header.mat-warn{--mat-stepper-header-icon-foreground-color: white;--mat-stepper-header-selected-state-icon-background-color: #f44336;--mat-stepper-header-selected-state-icon-foreground-color: white;--mat-stepper-header-done-state-icon-background-color: #f44336;--mat-stepper-header-done-state-icon-foreground-color: white;--mat-stepper-header-edit-state-icon-background-color: #f44336;--mat-stepper-header-edit-state-icon-foreground-color: white}html{--mat-stepper-header-height: 72px}html{--mat-sort-arrow-color: #757575}html{--mat-toolbar-container-background-color: whitesmoke;--mat-toolbar-container-text-color: rgba(0, 0, 0, .87)}.mat-toolbar.mat-primary{--mat-toolbar-container-background-color: #4caf50;--mat-toolbar-container-text-color: rgba(0, 0, 0, .87)}.mat-toolbar.mat-accent{--mat-toolbar-container-background-color: #ff4081;--mat-toolbar-container-text-color: white}.mat-toolbar.mat-warn{--mat-toolbar-container-background-color: #f44336;--mat-toolbar-container-text-color: white}html{--mat-toolbar-standard-height: 64px;--mat-toolbar-mobile-height: 56px}html{--mat-tree-container-background-color: white;--mat-tree-node-text-color: rgba(0, 0, 0, .87)}html{--mat-tree-node-min-height: 48px}header{display:block;background:#202020;background-position:30px center;background-repeat:no-repeat;background-size:auto 40%;margin:0;padding-top:35px;padding-bottom:-20px;min-height:50px;text-align:center;color:#fff}header #appTitle{font-size:xx-large;font-weight:bolder;color:#65a800}body{font-family:Roboto,Helvetica Neue,sans-serif;background-color:#65a800;margin:0;padding:0;overflow-y:hidden;overflow-x:hidden;-webkit-user-select:none;user-select:none}footer{display:block;background-color:#202020;min-width:100%;width:auto;margin:0;padding:2px 0;color:#fff;font-size:smaller;text-align:left}footer .wh-text{color:#65a800;margin:0 10px}footer .infoLinks{text-align:right;position:fixed;right:0;margin-right:30px}footer .infoLinks a{color:#fff;margin-left:10px;text-decoration:none}footer .infoLinks a:hover{color:#65a800}\\n\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: FooterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-footer', standalone: true, imports: [], template: \"<footer>\\n    <span\\n    ><span>\\u00A9 {{ getCurrentYear(2023) }}</span>\\n        <span class=\\\"wh-text\\\">Westf\\u00E4lische Hochschule</span> Gelsenkirchen</span\\n    >\\n  <span class=\\\"infoLinks\\\">\\n        <a href=\\\"https://www.w-hs.de/service/impressum/\\\" target=\\\"_blank\\\"\\n        >Impressum</a\\n        >\\n        <a href=\\\"https://pi-lab2.w-hs.de/THI/Datenschutz.html\\\" target=\\\"_blank\\\"\\n        >Datenschutz</a\\n        >\\n        <a\\n          href=\\\"https://pi-lab2.w-hs.de/THI/Barrierefreiheit.html\\\"\\n          target=\\\"_blank\\\"\\n        >Barrierefreiheit</a\\n        >\\n    </span>\\n</footer>\\n\", styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0,0,.2,1);transform:scale3d(0,0,0);background-color:var(--mat-ripple-color, rgba(0, 0, 0, .1))}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:#00000052}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0!important;box-sizing:content-box!important;height:auto!important;overflow:hidden!important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0!important;box-sizing:content-box!important;height:0!important}@keyframes cdk-text-field-autofill-start{}@keyframes cdk-text-field-autofill-end{}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}.mat-focus-indicator{position:relative}.mat-focus-indicator:before{inset:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border:var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus:before{content:\\\"\\\"}.cdk-high-contrast-active{--mat-focus-indicator-display: block}.mat-mdc-focus-indicator{position:relative}.mat-mdc-focus-indicator:before{inset:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-mdc-focus-indicator-display, none);border:var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);border-radius:var(--mat-mdc-focus-indicator-border-radius, 4px)}.mat-mdc-focus-indicator:focus:before{content:\\\"\\\"}.cdk-high-contrast-active{--mat-mdc-focus-indicator-display: block}.mat-app-background{background-color:var(--mat-app-background-color, transparent);color:var(--mat-app-text-color, inherit)}html{--mat-ripple-color: rgba(0, 0, 0, .1)}html{--mat-option-selected-state-label-text-color: #4caf50;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}.mat-accent{--mat-option-selected-state-label-text-color: #ff4081;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}.mat-warn{--mat-option-selected-state-label-text-color: #f44336;--mat-option-label-text-color: rgba(0, 0, 0, .87);--mat-option-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-option-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-option-selected-state-layer-color: rgba(0, 0, 0, .04)}html{--mat-optgroup-label-text-color: rgba(0, 0, 0, .87)}.mat-primary{--mat-full-pseudo-checkbox-selected-icon-color: #4caf50;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #4caf50;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}html,.mat-accent{--mat-full-pseudo-checkbox-selected-icon-color: #ff4081;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #ff4081;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}.mat-warn{--mat-full-pseudo-checkbox-selected-icon-color: #f44336;--mat-full-pseudo-checkbox-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mat-full-pseudo-checkbox-disabled-selected-checkmark-color: #fafafa;--mat-full-pseudo-checkbox-disabled-unselected-icon-color: #b0b0b0;--mat-full-pseudo-checkbox-disabled-selected-icon-color: #b0b0b0;--mat-minimal-pseudo-checkbox-selected-checkmark-color: #f44336;--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: #b0b0b0}html{--mat-app-background-color: #fafafa;--mat-app-text-color: rgba(0, 0, 0, .87)}.mat-elevation-z0,.mat-mdc-elevation-specific.mat-elevation-z0{box-shadow:0 0 #0003,0 0 #00000024,0 0 #0000001f}.mat-elevation-z1,.mat-mdc-elevation-specific.mat-elevation-z1{box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}.mat-elevation-z2,.mat-mdc-elevation-specific.mat-elevation-z2{box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f}.mat-elevation-z3,.mat-mdc-elevation-specific.mat-elevation-z3{box-shadow:0 3px 3px -2px #0003,0 3px 4px #00000024,0 1px 8px #0000001f}.mat-elevation-z4,.mat-mdc-elevation-specific.mat-elevation-z4{box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f}.mat-elevation-z5,.mat-mdc-elevation-specific.mat-elevation-z5{box-shadow:0 3px 5px -1px #0003,0 5px 8px #00000024,0 1px 14px #0000001f}.mat-elevation-z6,.mat-mdc-elevation-specific.mat-elevation-z6{box-shadow:0 3px 5px -1px #0003,0 6px 10px #00000024,0 1px 18px #0000001f}.mat-elevation-z7,.mat-mdc-elevation-specific.mat-elevation-z7{box-shadow:0 4px 5px -2px #0003,0 7px 10px 1px #00000024,0 2px 16px 1px #0000001f}.mat-elevation-z8,.mat-mdc-elevation-specific.mat-elevation-z8{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.mat-elevation-z9,.mat-mdc-elevation-specific.mat-elevation-z9{box-shadow:0 5px 6px -3px #0003,0 9px 12px 1px #00000024,0 3px 16px 2px #0000001f}.mat-elevation-z10,.mat-mdc-elevation-specific.mat-elevation-z10{box-shadow:0 6px 6px -3px #0003,0 10px 14px 1px #00000024,0 4px 18px 3px #0000001f}.mat-elevation-z11,.mat-mdc-elevation-specific.mat-elevation-z11{box-shadow:0 6px 7px -4px #0003,0 11px 15px 1px #00000024,0 4px 20px 3px #0000001f}.mat-elevation-z12,.mat-mdc-elevation-specific.mat-elevation-z12{box-shadow:0 7px 8px -4px #0003,0 12px 17px 2px #00000024,0 5px 22px 4px #0000001f}.mat-elevation-z13,.mat-mdc-elevation-specific.mat-elevation-z13{box-shadow:0 7px 8px -4px #0003,0 13px 19px 2px #00000024,0 5px 24px 4px #0000001f}.mat-elevation-z14,.mat-mdc-elevation-specific.mat-elevation-z14{box-shadow:0 7px 9px -4px #0003,0 14px 21px 2px #00000024,0 5px 26px 4px #0000001f}.mat-elevation-z15,.mat-mdc-elevation-specific.mat-elevation-z15{box-shadow:0 8px 9px -5px #0003,0 15px 22px 2px #00000024,0 6px 28px 5px #0000001f}.mat-elevation-z16,.mat-mdc-elevation-specific.mat-elevation-z16{box-shadow:0 8px 10px -5px #0003,0 16px 24px 2px #00000024,0 6px 30px 5px #0000001f}.mat-elevation-z17,.mat-mdc-elevation-specific.mat-elevation-z17{box-shadow:0 8px 11px -5px #0003,0 17px 26px 2px #00000024,0 6px 32px 5px #0000001f}.mat-elevation-z18,.mat-mdc-elevation-specific.mat-elevation-z18{box-shadow:0 9px 11px -5px #0003,0 18px 28px 2px #00000024,0 7px 34px 6px #0000001f}.mat-elevation-z19,.mat-mdc-elevation-specific.mat-elevation-z19{box-shadow:0 9px 12px -6px #0003,0 19px 29px 2px #00000024,0 7px 36px 6px #0000001f}.mat-elevation-z20,.mat-mdc-elevation-specific.mat-elevation-z20{box-shadow:0 10px 13px -6px #0003,0 20px 31px 3px #00000024,0 8px 38px 7px #0000001f}.mat-elevation-z21,.mat-mdc-elevation-specific.mat-elevation-z21{box-shadow:0 10px 13px -6px #0003,0 21px 33px 3px #00000024,0 8px 40px 7px #0000001f}.mat-elevation-z22,.mat-mdc-elevation-specific.mat-elevation-z22{box-shadow:0 10px 14px -6px #0003,0 22px 35px 3px #00000024,0 8px 42px 7px #0000001f}.mat-elevation-z23,.mat-mdc-elevation-specific.mat-elevation-z23{box-shadow:0 11px 14px -7px #0003,0 23px 36px 3px #00000024,0 9px 44px 8px #0000001f}.mat-elevation-z24,.mat-mdc-elevation-specific.mat-elevation-z24{box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}.mat-theme-loaded-marker{display:none}html{--mdc-elevated-card-container-shape: 4px;--mdc-outlined-card-container-shape: 4px;--mdc-outlined-card-outline-width: 1px}html{--mdc-elevated-card-container-color: white;--mdc-elevated-card-container-elevation: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mdc-outlined-card-container-color: white;--mdc-outlined-card-outline-color: rgba(0, 0, 0, .12);--mdc-outlined-card-container-elevation: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mat-card-subtitle-text-color: rgba(0, 0, 0, .54)}html{--mdc-linear-progress-active-indicator-height: 4px;--mdc-linear-progress-track-height: 4px;--mdc-linear-progress-track-shape: 0}.mat-mdc-progress-bar{--mdc-linear-progress-active-indicator-color: #4caf50;--mdc-linear-progress-track-color: rgba(76, 175, 80, .25)}.mat-mdc-progress-bar.mat-accent{--mdc-linear-progress-active-indicator-color: #ff4081;--mdc-linear-progress-track-color: rgba(255, 64, 129, .25)}.mat-mdc-progress-bar.mat-warn{--mdc-linear-progress-active-indicator-color: #f44336;--mdc-linear-progress-track-color: rgba(244, 67, 54, .25)}html{--mdc-plain-tooltip-container-shape: 4px;--mdc-plain-tooltip-supporting-text-line-height: 16px}html{--mdc-plain-tooltip-container-color: #616161;--mdc-plain-tooltip-supporting-text-color: #fff}html{--mdc-filled-text-field-active-indicator-height: 1px;--mdc-filled-text-field-focus-active-indicator-height: 2px;--mdc-filled-text-field-container-shape: 4px;--mdc-outlined-text-field-outline-width: 1px;--mdc-outlined-text-field-focus-outline-width: 2px;--mdc-outlined-text-field-container-shape: 4px}html{--mdc-filled-text-field-caret-color: #4caf50;--mdc-filled-text-field-focus-active-indicator-color: #4caf50;--mdc-filled-text-field-focus-label-text-color: rgba(76, 175, 80, .87);--mdc-filled-text-field-container-color: whitesmoke;--mdc-filled-text-field-disabled-container-color: #fafafa;--mdc-filled-text-field-label-text-color: rgba(0, 0, 0, .6);--mdc-filled-text-field-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-filled-text-field-input-text-color: rgba(0, 0, 0, .87);--mdc-filled-text-field-disabled-input-text-color: rgba(0, 0, 0, .38);--mdc-filled-text-field-input-text-placeholder-color: rgba(0, 0, 0, .6);--mdc-filled-text-field-error-focus-label-text-color: #f44336;--mdc-filled-text-field-error-label-text-color: #f44336;--mdc-filled-text-field-error-caret-color: #f44336;--mdc-filled-text-field-active-indicator-color: rgba(0, 0, 0, .42);--mdc-filled-text-field-disabled-active-indicator-color: rgba(0, 0, 0, .06);--mdc-filled-text-field-hover-active-indicator-color: rgba(0, 0, 0, .87);--mdc-filled-text-field-error-active-indicator-color: #f44336;--mdc-filled-text-field-error-focus-active-indicator-color: #f44336;--mdc-filled-text-field-error-hover-active-indicator-color: #f44336;--mdc-outlined-text-field-caret-color: #4caf50;--mdc-outlined-text-field-focus-outline-color: #4caf50;--mdc-outlined-text-field-focus-label-text-color: rgba(76, 175, 80, .87);--mdc-outlined-text-field-label-text-color: rgba(0, 0, 0, .6);--mdc-outlined-text-field-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-input-text-color: rgba(0, 0, 0, .87);--mdc-outlined-text-field-disabled-input-text-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-input-text-placeholder-color: rgba(0, 0, 0, .6);--mdc-outlined-text-field-error-caret-color: #f44336;--mdc-outlined-text-field-error-focus-label-text-color: #f44336;--mdc-outlined-text-field-error-label-text-color: #f44336;--mdc-outlined-text-field-outline-color: rgba(0, 0, 0, .38);--mdc-outlined-text-field-disabled-outline-color: rgba(0, 0, 0, .06);--mdc-outlined-text-field-hover-outline-color: rgba(0, 0, 0, .87);--mdc-outlined-text-field-error-focus-outline-color: #f44336;--mdc-outlined-text-field-error-hover-outline-color: #f44336;--mdc-outlined-text-field-error-outline-color: #f44336;--mat-form-field-focus-select-arrow-color: rgba(76, 175, 80, .87);--mat-form-field-disabled-input-text-placeholder-color: rgba(0, 0, 0, .38);--mat-form-field-state-layer-color: rgba(0, 0, 0, .87);--mat-form-field-error-text-color: #f44336;--mat-form-field-select-option-text-color: inherit;--mat-form-field-select-disabled-option-text-color: GrayText;--mat-form-field-enabled-select-arrow-color: rgba(0, 0, 0, .54);--mat-form-field-disabled-select-arrow-color: rgba(0, 0, 0, .38);--mat-form-field-hover-state-layer-opacity: .04;--mat-form-field-focus-state-layer-opacity: .12}.mat-mdc-form-field.mat-accent{--mdc-filled-text-field-caret-color: #ff4081;--mdc-filled-text-field-focus-active-indicator-color: #ff4081;--mdc-filled-text-field-focus-label-text-color: rgba(255, 64, 129, .87);--mdc-outlined-text-field-caret-color: #ff4081;--mdc-outlined-text-field-focus-outline-color: #ff4081;--mdc-outlined-text-field-focus-label-text-color: rgba(255, 64, 129, .87);--mat-form-field-focus-select-arrow-color: rgba(255, 64, 129, .87)}.mat-mdc-form-field.mat-warn{--mdc-filled-text-field-caret-color: #f44336;--mdc-filled-text-field-focus-active-indicator-color: #f44336;--mdc-filled-text-field-focus-label-text-color: rgba(244, 67, 54, .87);--mdc-outlined-text-field-caret-color: #f44336;--mdc-outlined-text-field-focus-outline-color: #f44336;--mdc-outlined-text-field-focus-label-text-color: rgba(244, 67, 54, .87);--mat-form-field-focus-select-arrow-color: rgba(244, 67, 54, .87)}html{--mat-form-field-container-height: 56px;--mat-form-field-filled-label-display: block;--mat-form-field-container-vertical-padding: 16px;--mat-form-field-filled-with-label-container-padding-top: 24px;--mat-form-field-filled-with-label-container-padding-bottom: 8px}html{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(76, 175, 80, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html .mat-mdc-form-field.mat-accent{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(255, 64, 129, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html .mat-mdc-form-field.mat-warn{--mat-select-panel-background-color: white;--mat-select-enabled-trigger-text-color: rgba(0, 0, 0, .87);--mat-select-disabled-trigger-text-color: rgba(0, 0, 0, .38);--mat-select-placeholder-text-color: rgba(0, 0, 0, .6);--mat-select-enabled-arrow-color: rgba(0, 0, 0, .54);--mat-select-disabled-arrow-color: rgba(0, 0, 0, .38);--mat-select-focused-arrow-color: rgba(244, 67, 54, .87);--mat-select-invalid-arrow-color: rgba(244, 67, 54, .87)}html{--mat-autocomplete-background-color: white}html{--mdc-dialog-container-elevation-shadow: 0px 11px 15px -7px rgba(0, 0, 0, .2), 0px 24px 38px 3px rgba(0, 0, 0, .14), 0px 9px 46px 8px rgba(0, 0, 0, .12);--mdc-dialog-container-shadow-color: #000;--mdc-dialog-container-shape: 4px}html{--mdc-dialog-container-color: white;--mdc-dialog-subhead-color: rgba(0, 0, 0, .87);--mdc-dialog-supporting-text-color: rgba(0, 0, 0, .6)}.mat-mdc-standard-chip{--mdc-chip-container-shape-family: rounded;--mdc-chip-container-shape-radius: 16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family: rounded;--mdc-chip-with-avatar-avatar-shape-radius: 14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size: 28px;--mdc-chip-with-icon-icon-size: 18px}.mat-mdc-standard-chip{--mdc-chip-disabled-label-text-color: #212121;--mdc-chip-elevated-container-color: #e0e0e0;--mdc-chip-elevated-disabled-container-color: #e0e0e0;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: #212121;--mdc-chip-with-icon-icon-color: #212121;--mdc-chip-with-icon-disabled-icon-color: #212121;--mdc-chip-with-icon-selected-icon-color: #212121;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;--mdc-chip-with-trailing-icon-trailing-icon-color: #212121}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-primary,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-primary{--mdc-chip-disabled-label-text-color: rgba(0, 0, 0, .87);--mdc-chip-elevated-container-color: #4caf50;--mdc-chip-elevated-disabled-container-color: #4caf50;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-disabled-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-icon-selected-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: rgba(0, 0, 0, .87);--mdc-chip-with-trailing-icon-trailing-icon-color: rgba(0, 0, 0, .87)}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-accent,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-accent{--mdc-chip-disabled-label-text-color: white;--mdc-chip-elevated-container-color: #ff4081;--mdc-chip-elevated-disabled-container-color: #ff4081;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: white;--mdc-chip-with-icon-icon-color: white;--mdc-chip-with-icon-disabled-icon-color: white;--mdc-chip-with-icon-selected-icon-color: white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;--mdc-chip-with-trailing-icon-trailing-icon-color: white}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-warn,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-warn{--mdc-chip-disabled-label-text-color: white;--mdc-chip-elevated-container-color: #f44336;--mdc-chip-elevated-disabled-container-color: #f44336;--mdc-chip-focus-state-layer-color: black;--mdc-chip-focus-state-layer-opacity: .12;--mdc-chip-label-text-color: white;--mdc-chip-with-icon-icon-color: white;--mdc-chip-with-icon-disabled-icon-color: white;--mdc-chip-with-icon-selected-icon-color: white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;--mdc-chip-with-trailing-icon-trailing-icon-color: white}.mat-mdc-chip.mat-mdc-standard-chip{--mdc-chip-container-height: 32px}.mdc-switch{--mdc-switch-disabled-handle-opacity: .38;--mdc-switch-disabled-selected-icon-opacity: .38;--mdc-switch-disabled-track-opacity: .12;--mdc-switch-disabled-unselected-icon-opacity: .38;--mdc-switch-handle-height: 20px;--mdc-switch-handle-shape: 10px;--mdc-switch-handle-width: 20px;--mdc-switch-selected-icon-size: 18px;--mdc-switch-track-height: 14px;--mdc-switch-track-shape: 7px;--mdc-switch-track-width: 36px;--mdc-switch-unselected-icon-size: 18px;--mdc-switch-state-layer-size: 40px;--mdc-switch-selected-focus-state-layer-opacity: .12;--mdc-switch-selected-hover-state-layer-opacity: .04;--mdc-switch-selected-pressed-state-layer-opacity: .1;--mdc-switch-unselected-focus-state-layer-opacity: .12;--mdc-switch-unselected-hover-state-layer-opacity: .04;--mdc-switch-unselected-pressed-state-layer-opacity: .1}.mat-mdc-slide-toggle{--mdc-switch-selected-focus-state-layer-color: #43a047;--mdc-switch-selected-handle-color: #43a047;--mdc-switch-selected-hover-state-layer-color: #43a047;--mdc-switch-selected-pressed-state-layer-color: #43a047;--mdc-switch-selected-focus-handle-color: #1b5e20;--mdc-switch-selected-hover-handle-color: #1b5e20;--mdc-switch-selected-pressed-handle-color: #1b5e20;--mdc-switch-selected-focus-track-color: #81c784;--mdc-switch-selected-hover-track-color: #81c784;--mdc-switch-selected-pressed-track-color: #81c784;--mdc-switch-selected-track-color: #81c784;--mdc-switch-disabled-selected-handle-color: #424242;--mdc-switch-disabled-selected-icon-color: #fff;--mdc-switch-disabled-selected-track-color: #424242;--mdc-switch-disabled-unselected-handle-color: #424242;--mdc-switch-disabled-unselected-icon-color: #fff;--mdc-switch-disabled-unselected-track-color: #424242;--mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);--mdc-switch-handle-elevation-shadow: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mdc-switch-handle-shadow-color: black;--mdc-switch-disabled-handle-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mdc-switch-selected-icon-color: #fff;--mdc-switch-unselected-focus-handle-color: #212121;--mdc-switch-unselected-focus-state-layer-color: #424242;--mdc-switch-unselected-focus-track-color: #e0e0e0;--mdc-switch-unselected-handle-color: #616161;--mdc-switch-unselected-hover-handle-color: #212121;--mdc-switch-unselected-hover-state-layer-color: #424242;--mdc-switch-unselected-hover-track-color: #e0e0e0;--mdc-switch-unselected-icon-color: #fff;--mdc-switch-unselected-pressed-handle-color: #212121;--mdc-switch-unselected-pressed-state-layer-color: #424242;--mdc-switch-unselected-pressed-track-color: #e0e0e0;--mdc-switch-unselected-track-color: #e0e0e0;--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:#00000061}.mat-mdc-slide-toggle.mat-accent{--mdc-switch-selected-focus-state-layer-color: #d81b60;--mdc-switch-selected-handle-color: #d81b60;--mdc-switch-selected-hover-state-layer-color: #d81b60;--mdc-switch-selected-pressed-state-layer-color: #d81b60;--mdc-switch-selected-focus-handle-color: #880e4f;--mdc-switch-selected-hover-handle-color: #880e4f;--mdc-switch-selected-pressed-handle-color: #880e4f;--mdc-switch-selected-focus-track-color: #f06292;--mdc-switch-selected-hover-track-color: #f06292;--mdc-switch-selected-pressed-track-color: #f06292;--mdc-switch-selected-track-color: #f06292}.mat-mdc-slide-toggle.mat-warn{--mdc-switch-selected-focus-state-layer-color: #e53935;--mdc-switch-selected-handle-color: #e53935;--mdc-switch-selected-hover-state-layer-color: #e53935;--mdc-switch-selected-pressed-state-layer-color: #e53935;--mdc-switch-selected-focus-handle-color: #b71c1c;--mdc-switch-selected-hover-handle-color: #b71c1c;--mdc-switch-selected-pressed-handle-color: #b71c1c;--mdc-switch-selected-focus-track-color: #e57373;--mdc-switch-selected-hover-track-color: #e57373;--mdc-switch-selected-pressed-track-color: #e57373;--mdc-switch-selected-track-color: #e57373}.mat-mdc-slide-toggle{--mdc-switch-state-layer-size: 48px}html{--mdc-radio-disabled-selected-icon-opacity: .38;--mdc-radio-disabled-unselected-icon-opacity: .38;--mdc-radio-state-layer-size: 40px}.mat-mdc-radio-button{--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-radio-button.mat-primary{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #4caf50;--mdc-radio-selected-hover-icon-color: #4caf50;--mdc-radio-selected-icon-color: #4caf50;--mdc-radio-selected-pressed-icon-color: #4caf50;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #4caf50;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}.mat-mdc-radio-button.mat-accent{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #ff4081;--mdc-radio-selected-hover-icon-color: #ff4081;--mdc-radio-selected-icon-color: #ff4081;--mdc-radio-selected-pressed-icon-color: #ff4081;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #ff4081;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}.mat-mdc-radio-button.mat-warn{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #f44336;--mdc-radio-selected-hover-icon-color: #f44336;--mdc-radio-selected-icon-color: #f44336;--mdc-radio-selected-pressed-icon-color: #f44336;--mat-radio-ripple-color: #000;--mat-radio-checked-ripple-color: #f44336;--mat-radio-disabled-label-color: rgba(0, 0, 0, .38)}html{--mdc-radio-state-layer-size: 40px}html{--mat-slider-value-indicator-width: auto;--mat-slider-value-indicator-height: 32px;--mat-slider-value-indicator-caret-display: block;--mat-slider-value-indicator-border-radius: 4px;--mat-slider-value-indicator-padding: 0 12px;--mat-slider-value-indicator-text-transform: none;--mat-slider-value-indicator-container-transform: translateX(-50%);--mdc-slider-active-track-height: 6px;--mdc-slider-active-track-shape: 9999px;--mdc-slider-handle-height: 20px;--mdc-slider-handle-shape: 50%;--mdc-slider-handle-width: 20px;--mdc-slider-inactive-track-height: 4px;--mdc-slider-inactive-track-shape: 9999px;--mdc-slider-with-overlap-handle-outline-width: 1px;--mdc-slider-with-tick-marks-active-container-opacity: .6;--mdc-slider-with-tick-marks-container-shape: 50%;--mdc-slider-with-tick-marks-container-size: 2px;--mdc-slider-with-tick-marks-inactive-container-opacity: .6}html{--mdc-slider-handle-color: #4caf50;--mdc-slider-focus-handle-color: #4caf50;--mdc-slider-hover-handle-color: #4caf50;--mdc-slider-active-track-color: #4caf50;--mdc-slider-inactive-track-color: #4caf50;--mdc-slider-with-tick-marks-inactive-container-color: #4caf50;--mdc-slider-with-tick-marks-active-container-color: rgba(0, 0, 0, .87);--mdc-slider-disabled-active-track-color: #000;--mdc-slider-disabled-handle-color: #000;--mdc-slider-disabled-inactive-track-color: #000;--mdc-slider-label-container-color: #000;--mdc-slider-label-label-text-color: #fff;--mdc-slider-with-overlap-handle-outline-color: #fff;--mdc-slider-with-tick-marks-disabled-container-color: #000;--mdc-slider-handle-elevation: 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12);--mat-slider-ripple-color: #4caf50;--mat-slider-hover-state-layer-color: rgba(76, 175, 80, .05);--mat-slider-focus-state-layer-color: rgba(76, 175, 80, .2);--mat-slider-value-indicator-opacity: .6}html .mat-accent{--mat-slider-ripple-color: #ff4081;--mat-slider-hover-state-layer-color: rgba(255, 64, 129, .05);--mat-slider-focus-state-layer-color: rgba(255, 64, 129, .2);--mdc-slider-handle-color: #ff4081;--mdc-slider-focus-handle-color: #ff4081;--mdc-slider-hover-handle-color: #ff4081;--mdc-slider-active-track-color: #ff4081;--mdc-slider-inactive-track-color: #ff4081;--mdc-slider-with-tick-marks-inactive-container-color: #ff4081;--mdc-slider-with-tick-marks-active-container-color: white}html .mat-warn{--mat-slider-ripple-color: #f44336;--mat-slider-hover-state-layer-color: rgba(244, 67, 54, .05);--mat-slider-focus-state-layer-color: rgba(244, 67, 54, .2);--mdc-slider-handle-color: #f44336;--mdc-slider-focus-handle-color: #f44336;--mdc-slider-hover-handle-color: #f44336;--mdc-slider-active-track-color: #f44336;--mdc-slider-inactive-track-color: #f44336;--mdc-slider-with-tick-marks-inactive-container-color: #f44336;--mdc-slider-with-tick-marks-active-container-color: white}html{--mat-menu-container-shape: 4px}html{--mat-menu-item-label-text-color: rgba(0, 0, 0, .87);--mat-menu-item-icon-color: rgba(0, 0, 0, .87);--mat-menu-item-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-menu-item-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-menu-container-color: white}html{--mdc-list-list-item-container-shape: 0;--mdc-list-list-item-leading-avatar-shape: 50%;--mdc-list-list-item-container-color: transparent;--mdc-list-list-item-selected-container-color: transparent;--mdc-list-list-item-leading-avatar-color: transparent;--mdc-list-list-item-leading-icon-size: 24px;--mdc-list-list-item-leading-avatar-size: 40px;--mdc-list-list-item-trailing-icon-size: 24px;--mdc-list-list-item-disabled-state-layer-color: transparent;--mdc-list-list-item-disabled-state-layer-opacity: 0;--mdc-list-list-item-disabled-label-text-opacity: .38;--mdc-list-list-item-disabled-leading-icon-opacity: .38;--mdc-list-list-item-disabled-trailing-icon-opacity: .38}html{--mdc-list-list-item-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, .54);--mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, .38);--mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-disabled-label-text-color: black;--mdc-list-list-item-disabled-leading-icon-color: black;--mdc-list-list-item-disabled-trailing-icon-color: black;--mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, .38);--mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, .87);--mdc-list-list-item-hover-state-layer-color: black;--mdc-list-list-item-hover-state-layer-opacity: .04;--mdc-list-list-item-focus-state-layer-color: black;--mdc-list-list-item-focus-state-layer-opacity: .12}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #4caf50;--mdc-radio-selected-hover-icon-color: #4caf50;--mdc-radio-selected-icon-color: #4caf50;--mdc-radio-selected-pressed-icon-color: #4caf50}.mat-accent .mdc-list-item__start,.mat-accent .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #ff4081;--mdc-radio-selected-hover-icon-color: #ff4081;--mdc-radio-selected-icon-color: #ff4081;--mdc-radio-selected-pressed-icon-color: #ff4081}.mat-warn .mdc-list-item__start,.mat-warn .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color: #000;--mdc-radio-disabled-unselected-icon-color: #000;--mdc-radio-unselected-hover-icon-color: #212121;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-radio-selected-focus-icon-color: #f44336;--mdc-radio-selected-hover-icon-color: #f44336;--mdc-radio-selected-icon-color: #f44336;--mdc-radio-selected-pressed-icon-color: #f44336}.mat-mdc-list-option{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #000;--mdc-checkbox-selected-focus-icon-color: #4caf50;--mdc-checkbox-selected-hover-icon-color: #4caf50;--mdc-checkbox-selected-icon-color: #4caf50;--mdc-checkbox-selected-pressed-icon-color: #4caf50;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #4caf50;--mdc-checkbox-selected-hover-state-layer-color: #4caf50;--mdc-checkbox-selected-pressed-state-layer-color: #4caf50;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-option.mat-accent{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #ff4081;--mdc-checkbox-selected-hover-icon-color: #ff4081;--mdc-checkbox-selected-icon-color: #ff4081;--mdc-checkbox-selected-pressed-icon-color: #ff4081;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #ff4081;--mdc-checkbox-selected-hover-state-layer-color: #ff4081;--mdc-checkbox-selected-pressed-state-layer-color: #ff4081;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-option.mat-warn{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #f44336;--mdc-checkbox-selected-hover-icon-color: #f44336;--mdc-checkbox-selected-icon-color: #f44336;--mdc-checkbox-selected-pressed-icon-color: #f44336;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #f44336;--mdc-checkbox-selected-hover-state-layer-color: #f44336;--mdc-checkbox-selected-pressed-state-layer-color: #f44336;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:#4caf50}.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end{opacity:1}html{--mdc-list-list-item-one-line-container-height: 48px;--mdc-list-list-item-two-line-container-height: 64px;--mdc-list-list-item-three-line-container-height: 88px}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-state-layer-size: 40px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}html{--mat-paginator-container-text-color: rgba(0, 0, 0, .87);--mat-paginator-container-background-color: white;--mat-paginator-enabled-icon-color: rgba(0, 0, 0, .54);--mat-paginator-disabled-icon-color: rgba(0, 0, 0, .12)}html{--mat-paginator-container-size: 56px}.mat-mdc-paginator{--mat-form-field-container-height: 40px;--mat-form-field-filled-label-display: none;--mat-form-field-container-vertical-padding: 8px;--mat-form-field-filled-with-label-container-padding-top: 8px;--mat-form-field-filled-with-label-container-padding-bottom: 8px}html{--mdc-tab-indicator-active-indicator-height: 2px;--mdc-tab-indicator-active-indicator-shape: 0;--mdc-secondary-navigation-tab-container-height: 48px;--mat-tab-header-divider-color: transparent;--mat-tab-header-divider-height: 0}.mat-mdc-tab-group,.mat-mdc-tab-nav-bar{--mdc-tab-indicator-active-indicator-color: #4caf50;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #4caf50;--mat-tab-header-active-ripple-color: #4caf50;--mat-tab-header-inactive-ripple-color: #4caf50;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #4caf50;--mat-tab-header-active-hover-label-text-color: #4caf50;--mat-tab-header-active-focus-indicator-color: #4caf50;--mat-tab-header-active-hover-indicator-color: #4caf50}.mat-mdc-tab-group.mat-accent,.mat-mdc-tab-nav-bar.mat-accent{--mdc-tab-indicator-active-indicator-color: #ff4081;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #ff4081;--mat-tab-header-active-ripple-color: #ff4081;--mat-tab-header-inactive-ripple-color: #ff4081;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #ff4081;--mat-tab-header-active-hover-label-text-color: #ff4081;--mat-tab-header-active-focus-indicator-color: #ff4081;--mat-tab-header-active-hover-indicator-color: #ff4081}.mat-mdc-tab-group.mat-warn,.mat-mdc-tab-nav-bar.mat-warn{--mdc-tab-indicator-active-indicator-color: #f44336;--mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, .38);--mat-tab-header-pagination-icon-color: #000;--mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-label-text-color: #f44336;--mat-tab-header-active-ripple-color: #f44336;--mat-tab-header-inactive-ripple-color: #f44336;--mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, .6);--mat-tab-header-active-focus-label-text-color: #f44336;--mat-tab-header-active-hover-label-text-color: #f44336;--mat-tab-header-active-focus-indicator-color: #f44336;--mat-tab-header-active-hover-indicator-color: #f44336}.mat-mdc-tab-group.mat-background-primary,.mat-mdc-tab-nav-bar.mat-background-primary{--mat-tab-header-with-background-background-color: #4caf50;--mat-tab-header-with-background-foreground-color: rgba(0, 0, 0, .87)}.mat-mdc-tab-group.mat-background-accent,.mat-mdc-tab-nav-bar.mat-background-accent{--mat-tab-header-with-background-background-color: #ff4081;--mat-tab-header-with-background-foreground-color: white}.mat-mdc-tab-group.mat-background-warn,.mat-mdc-tab-nav-bar.mat-background-warn{--mat-tab-header-with-background-background-color: #f44336;--mat-tab-header-with-background-foreground-color: white}.mat-mdc-tab-header{--mdc-secondary-navigation-tab-container-height: 48px}html{--mdc-checkbox-disabled-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-state-layer-opacity: .16;--mdc-checkbox-selected-hover-state-layer-opacity: .04;--mdc-checkbox-selected-pressed-state-layer-opacity: .16;--mdc-checkbox-unselected-focus-state-layer-opacity: .16;--mdc-checkbox-unselected-hover-state-layer-opacity: .04;--mdc-checkbox-unselected-pressed-state-layer-opacity: .16}html{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #ff4081;--mdc-checkbox-selected-hover-icon-color: #ff4081;--mdc-checkbox-selected-icon-color: #ff4081;--mdc-checkbox-selected-pressed-icon-color: #ff4081;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #ff4081;--mdc-checkbox-selected-hover-state-layer-color: #ff4081;--mdc-checkbox-selected-pressed-state-layer-color: #ff4081;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox{--mdc-form-field-label-text-color: rgba(0, 0, 0, .87)}.mat-mdc-checkbox.mat-primary{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #000;--mdc-checkbox-selected-focus-icon-color: #4caf50;--mdc-checkbox-selected-hover-icon-color: #4caf50;--mdc-checkbox-selected-icon-color: #4caf50;--mdc-checkbox-selected-pressed-icon-color: #4caf50;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #4caf50;--mdc-checkbox-selected-hover-state-layer-color: #4caf50;--mdc-checkbox-selected-pressed-state-layer-color: #4caf50;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox.mat-warn{--mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, .38);--mdc-checkbox-selected-checkmark-color: #fff;--mdc-checkbox-selected-focus-icon-color: #f44336;--mdc-checkbox-selected-hover-icon-color: #f44336;--mdc-checkbox-selected-icon-color: #f44336;--mdc-checkbox-selected-pressed-icon-color: #f44336;--mdc-checkbox-unselected-focus-icon-color: #212121;--mdc-checkbox-unselected-hover-icon-color: #212121;--mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, .54);--mdc-checkbox-selected-focus-state-layer-color: #f44336;--mdc-checkbox-selected-hover-state-layer-color: #f44336;--mdc-checkbox-selected-pressed-state-layer-color: #f44336;--mdc-checkbox-unselected-focus-state-layer-color: black;--mdc-checkbox-unselected-hover-state-layer-color: black;--mdc-checkbox-unselected-pressed-state-layer-color: black}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{color:#00000061}html{--mdc-checkbox-state-layer-size: 40px}html{--mdc-text-button-container-shape: 4px;--mdc-text-button-keep-touch-target: false;--mdc-filled-button-container-shape: 4px;--mdc-filled-button-keep-touch-target: false;--mdc-protected-button-container-shape: 4px;--mdc-protected-button-keep-touch-target: false;--mdc-outlined-button-keep-touch-target: false;--mdc-outlined-button-outline-width: 1px;--mdc-outlined-button-container-shape: 4px}html{--mdc-text-button-label-text-color: #000;--mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mat-text-button-state-layer-color: #000;--mat-text-button-disabled-state-layer-color: #000;--mat-text-button-ripple-color: rgba(0, 0, 0, .1);--mat-text-button-hover-state-layer-opacity: .04;--mat-text-button-focus-state-layer-opacity: .12;--mat-text-button-pressed-state-layer-opacity: .12;--mdc-filled-button-container-color: white;--mdc-filled-button-label-text-color: #000;--mdc-filled-button-disabled-container-color: rgba(0, 0, 0, .12);--mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mat-filled-button-state-layer-color: #000;--mat-filled-button-disabled-state-layer-color: #000;--mat-filled-button-ripple-color: rgba(0, 0, 0, .1);--mat-filled-button-hover-state-layer-opacity: .04;--mat-filled-button-focus-state-layer-opacity: .12;--mat-filled-button-pressed-state-layer-opacity: .12;--mdc-protected-button-container-color: white;--mdc-protected-button-label-text-color: #000;--mdc-protected-button-disabled-container-color: rgba(0, 0, 0, .12);--mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-protected-button-container-elevation-shadow: 0px 3px 1px -2px rgba(0, 0, 0, .2), 0px 2px 2px 0px rgba(0, 0, 0, .14), 0px 1px 5px 0px rgba(0, 0, 0, .12);--mdc-protected-button-disabled-container-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, .2), 0px 0px 0px 0px rgba(0, 0, 0, .14), 0px 0px 0px 0px rgba(0, 0, 0, .12);--mdc-protected-button-focus-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, .2), 0px 4px 5px 0px rgba(0, 0, 0, .14), 0px 1px 10px 0px rgba(0, 0, 0, .12);--mdc-protected-button-hover-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, .2), 0px 4px 5px 0px rgba(0, 0, 0, .14), 0px 1px 10px 0px rgba(0, 0, 0, .12);--mdc-protected-button-pressed-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-protected-button-container-shadow-color: #000;--mat-protected-button-state-layer-color: #000;--mat-protected-button-disabled-state-layer-color: #000;--mat-protected-button-ripple-color: rgba(0, 0, 0, .1);--mat-protected-button-hover-state-layer-opacity: .04;--mat-protected-button-focus-state-layer-opacity: .12;--mat-protected-button-pressed-state-layer-opacity: .12;--mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, .12);--mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, .38);--mdc-outlined-button-label-text-color: #000;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #000;--mat-outlined-button-disabled-state-layer-color: #000;--mat-outlined-button-ripple-color: rgba(0, 0, 0, .1);--mat-outlined-button-hover-state-layer-opacity: .04;--mat-outlined-button-focus-state-layer-opacity: .12;--mat-outlined-button-pressed-state-layer-opacity: .12}.mat-mdc-button.mat-primary{--mdc-text-button-label-text-color: #4caf50;--mat-text-button-state-layer-color: #4caf50;--mat-text-button-ripple-color: rgba(76, 175, 80, .1)}.mat-mdc-button.mat-accent{--mdc-text-button-label-text-color: #ff4081;--mat-text-button-state-layer-color: #ff4081;--mat-text-button-ripple-color: rgba(255, 64, 129, .1)}.mat-mdc-button.mat-warn{--mdc-text-button-label-text-color: #f44336;--mat-text-button-state-layer-color: #f44336;--mat-text-button-ripple-color: rgba(244, 67, 54, .1)}.mat-mdc-unelevated-button.mat-primary{--mdc-filled-button-container-color: #4caf50;--mdc-filled-button-label-text-color: #000;--mat-filled-button-state-layer-color: #000;--mat-filled-button-ripple-color: rgba(0, 0, 0, .1)}.mat-mdc-unelevated-button.mat-accent{--mdc-filled-button-container-color: #ff4081;--mdc-filled-button-label-text-color: #fff;--mat-filled-button-state-layer-color: #fff;--mat-filled-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-unelevated-button.mat-warn{--mdc-filled-button-container-color: #f44336;--mdc-filled-button-label-text-color: #fff;--mat-filled-button-state-layer-color: #fff;--mat-filled-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-raised-button.mat-primary{--mdc-protected-button-container-color: #4caf50;--mdc-protected-button-label-text-color: #000;--mat-protected-button-state-layer-color: #000;--mat-protected-button-ripple-color: rgba(0, 0, 0, .1)}.mat-mdc-raised-button.mat-accent{--mdc-protected-button-container-color: #ff4081;--mdc-protected-button-label-text-color: #fff;--mat-protected-button-state-layer-color: #fff;--mat-protected-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-raised-button.mat-warn{--mdc-protected-button-container-color: #f44336;--mdc-protected-button-label-text-color: #fff;--mat-protected-button-state-layer-color: #fff;--mat-protected-button-ripple-color: rgba(255, 255, 255, .1)}.mat-mdc-outlined-button.mat-primary{--mdc-outlined-button-label-text-color: #4caf50;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #4caf50;--mat-outlined-button-ripple-color: rgba(76, 175, 80, .1)}.mat-mdc-outlined-button.mat-accent{--mdc-outlined-button-label-text-color: #ff4081;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #ff4081;--mat-outlined-button-ripple-color: rgba(255, 64, 129, .1)}.mat-mdc-outlined-button.mat-warn{--mdc-outlined-button-label-text-color: #f44336;--mdc-outlined-button-outline-color: rgba(0, 0, 0, .12);--mat-outlined-button-state-layer-color: #f44336;--mat-outlined-button-ripple-color: rgba(244, 67, 54, .1)}html{--mdc-text-button-container-height: 36px;--mdc-filled-button-container-height: 36px;--mdc-outlined-button-container-height: 36px;--mdc-protected-button-container-height: 36px}html{--mdc-icon-button-state-layer-size: 48px;--mdc-icon-button-icon-size: 24px}html{--mdc-icon-button-icon-color: inherit;--mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, .38);--mat-icon-button-state-layer-color: #000;--mat-icon-button-disabled-state-layer-color: #000;--mat-icon-button-ripple-color: rgba(0, 0, 0, .1);--mat-icon-button-hover-state-layer-opacity: .04;--mat-icon-button-focus-state-layer-opacity: .12;--mat-icon-button-pressed-state-layer-opacity: .12}html .mat-mdc-icon-button.mat-primary{--mdc-icon-button-icon-color: #4caf50;--mat-icon-button-state-layer-color: #4caf50;--mat-icon-button-ripple-color: rgba(76, 175, 80, .1)}html .mat-mdc-icon-button.mat-accent{--mdc-icon-button-icon-color: #ff4081;--mat-icon-button-state-layer-color: #ff4081;--mat-icon-button-ripple-color: rgba(255, 64, 129, .1)}html .mat-mdc-icon-button.mat-warn{--mdc-icon-button-icon-color: #f44336;--mat-icon-button-state-layer-color: #f44336;--mat-icon-button-ripple-color: rgba(244, 67, 54, .1)}.mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size: 48px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:12px}html{--mdc-fab-container-shape: 50%;--mdc-fab-icon-size: 24px}html{--mdc-fab-container-color: white;--mdc-fab-container-elevation-shadow: 0px 3px 5px -1px rgba(0, 0, 0, .2), 0px 6px 10px 0px rgba(0, 0, 0, .14), 0px 1px 18px 0px rgba(0, 0, 0, .12);--mdc-fab-focus-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-fab-hover-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-fab-pressed-container-elevation-shadow: 0px 7px 8px -4px rgba(0, 0, 0, .2), 0px 12px 17px 2px rgba(0, 0, 0, .14), 0px 5px 22px 4px rgba(0, 0, 0, .12);--mdc-fab-container-shadow-color: #000;--mat-fab-foreground-color: black;--mat-fab-state-layer-color: #000;--mat-fab-disabled-state-layer-color: #000;--mat-fab-ripple-color: rgba(0, 0, 0, .1);--mat-fab-hover-state-layer-opacity: .04;--mat-fab-focus-state-layer-opacity: .12;--mat-fab-pressed-state-layer-opacity: .12;--mat-fab-disabled-state-container-color: rgba(0, 0, 0, .12);--mat-fab-disabled-state-foreground-color: rgba(0, 0, 0, .38);--mdc-extended-fab-container-elevation-shadow: 0px 3px 5px -1px rgba(0, 0, 0, .2), 0px 6px 10px 0px rgba(0, 0, 0, .14), 0px 1px 18px 0px rgba(0, 0, 0, .12);--mdc-extended-fab-focus-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-extended-fab-hover-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, .2), 0px 8px 10px 1px rgba(0, 0, 0, .14), 0px 3px 14px 2px rgba(0, 0, 0, .12);--mdc-extended-fab-pressed-container-elevation-shadow: 0px 7px 8px -4px rgba(0, 0, 0, .2), 0px 12px 17px 2px rgba(0, 0, 0, .14), 0px 5px 22px 4px rgba(0, 0, 0, .12);--mdc-extended-fab-container-shadow-color: #000}html .mat-mdc-fab.mat-primary,html .mat-mdc-mini-fab.mat-primary{--mdc-fab-container-color: #4caf50;--mat-fab-foreground-color: #000;--mat-fab-state-layer-color: #000;--mat-fab-ripple-color: rgba(0, 0, 0, .1)}html .mat-mdc-fab.mat-accent,html .mat-mdc-mini-fab.mat-accent{--mdc-fab-container-color: #ff4081;--mat-fab-foreground-color: #fff;--mat-fab-state-layer-color: #fff;--mat-fab-ripple-color: rgba(255, 255, 255, .1)}html .mat-mdc-fab.mat-warn,html .mat-mdc-mini-fab.mat-warn{--mdc-fab-container-color: #f44336;--mat-fab-foreground-color: #fff;--mat-fab-state-layer-color: #fff;--mat-fab-ripple-color: rgba(255, 255, 255, .1)}html{--mdc-snackbar-container-shape: 4px}html{--mdc-snackbar-container-color: #333333;--mdc-snackbar-supporting-text-color: rgba(255, 255, 255, .87);--mat-snack-bar-button-color: #ff4081}html{--mat-table-row-item-outline-width: 1px}html{--mat-table-background-color: white;--mat-table-header-headline-color: rgba(0, 0, 0, .87);--mat-table-row-item-label-text-color: rgba(0, 0, 0, .87);--mat-table-row-item-outline-color: rgba(0, 0, 0, .12)}html{--mat-table-header-container-height: 56px;--mat-table-footer-container-height: 52px;--mat-table-row-item-container-height: 52px}html{--mdc-circular-progress-active-indicator-width: 4px;--mdc-circular-progress-size: 48px}html{--mdc-circular-progress-active-indicator-color: #4caf50}html .mat-accent{--mdc-circular-progress-active-indicator-color: #ff4081}html .mat-warn{--mdc-circular-progress-active-indicator-color: #f44336}.mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform .2s ease-in-out;transform:scale(.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:Roboto,sans-serif;font-family:var(--mat-badge-text-font, Roboto, sans-serif);font-size:12px;font-size:var(--mat-badge-text-size, 12px);font-weight:600;font-weight:var(--mat-badge-text-weight, 600)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px;font-size:9px;font-size:var(--mat-badge-small-size-text-size, 9px)}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px;font-size:24px;font-size:var(--mat-badge-large-size-text-size, 24px)}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}html{--mat-badge-background-color: #4caf50;--mat-badge-text-color: rgba(0, 0, 0, .87);--mat-badge-disabled-state-background-color: #b9b9b9;--mat-badge-disabled-state-text-color: rgba(0, 0, 0, .38)}.mat-badge-accent{--mat-badge-background-color: #ff4081;--mat-badge-text-color: white}.mat-badge-warn{--mat-badge-background-color: #f44336;--mat-badge-text-color: white}html{--mat-bottom-sheet-container-shape: 4px}html{--mat-bottom-sheet-container-text-color: rgba(0, 0, 0, .87);--mat-bottom-sheet-container-background-color: white}html{--mat-legacy-button-toggle-height: 36px;--mat-legacy-button-toggle-shape: 2px;--mat-legacy-button-toggle-focus-state-layer-opacity: 1;--mat-standard-button-toggle-shape: 4px;--mat-standard-button-toggle-hover-state-layer-opacity: .04;--mat-standard-button-toggle-focus-state-layer-opacity: .12}html{--mat-legacy-button-toggle-text-color: rgba(0, 0, 0, .38);--mat-legacy-button-toggle-state-layer-color: rgba(0, 0, 0, .12);--mat-legacy-button-toggle-selected-state-text-color: rgba(0, 0, 0, .54);--mat-legacy-button-toggle-selected-state-background-color: #e0e0e0;--mat-legacy-button-toggle-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-legacy-button-toggle-disabled-state-background-color: #eeeeee;--mat-legacy-button-toggle-disabled-selected-state-background-color: #bdbdbd;--mat-standard-button-toggle-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-background-color: white;--mat-standard-button-toggle-state-layer-color: black;--mat-standard-button-toggle-selected-state-background-color: #e0e0e0;--mat-standard-button-toggle-selected-state-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-standard-button-toggle-disabled-state-background-color: white;--mat-standard-button-toggle-disabled-selected-state-text-color: rgba(0, 0, 0, .87);--mat-standard-button-toggle-disabled-selected-state-background-color: #bdbdbd;--mat-standard-button-toggle-divider-color: #e0e0e0}html{--mat-standard-button-toggle-height: 48px}html{--mat-datepicker-calendar-date-selected-state-text-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-selected-state-background-color: #4caf50;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(76, 175, 80, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-focus-state-background-color: rgba(76, 175, 80, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(76, 175, 80, .3);--mat-datepicker-toggle-active-state-icon-color: #4caf50;--mat-datepicker-calendar-date-in-range-state-background-color: rgba(76, 175, 80, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;--mat-datepicker-toggle-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-body-label-text-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-period-button-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-navigation-button-icon-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-header-divider-color: rgba(0, 0, 0, .12);--mat-datepicker-calendar-header-text-color: rgba(0, 0, 0, .54);--mat-datepicker-calendar-date-today-outline-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-date-today-disabled-state-outline-color: rgba(0, 0, 0, .18);--mat-datepicker-calendar-date-text-color: rgba(0, 0, 0, .87);--mat-datepicker-calendar-date-outline-color: transparent;--mat-datepicker-calendar-date-disabled-state-text-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-date-preview-state-outline-color: rgba(0, 0, 0, .24);--mat-datepicker-range-input-separator-color: rgba(0, 0, 0, .87);--mat-datepicker-range-input-disabled-state-separator-color: rgba(0, 0, 0, .38);--mat-datepicker-range-input-disabled-state-text-color: rgba(0, 0, 0, .38);--mat-datepicker-calendar-container-background-color: white;--mat-datepicker-calendar-container-text-color: rgba(0, 0, 0, .87)}.mat-datepicker-content.mat-accent{--mat-datepicker-calendar-date-selected-state-text-color: white;--mat-datepicker-calendar-date-selected-state-background-color: #ff4081;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(255, 64, 129, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: white;--mat-datepicker-calendar-date-focus-state-background-color: rgba(255, 64, 129, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(255, 64, 129, .3);--mat-datepicker-calendar-date-in-range-state-background-color: rgba(255, 64, 129, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e}.mat-datepicker-content.mat-warn{--mat-datepicker-calendar-date-selected-state-text-color: white;--mat-datepicker-calendar-date-selected-state-background-color: #f44336;--mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(244, 67, 54, .4);--mat-datepicker-calendar-date-today-selected-state-outline-color: white;--mat-datepicker-calendar-date-focus-state-background-color: rgba(244, 67, 54, .3);--mat-datepicker-calendar-date-hover-state-background-color: rgba(244, 67, 54, .3);--mat-datepicker-calendar-date-in-range-state-background-color: rgba(244, 67, 54, .2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, .2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e}.mat-datepicker-toggle-active.mat-accent{--mat-datepicker-toggle-active-state-icon-color: #ff4081}.mat-datepicker-toggle-active.mat-warn{--mat-datepicker-toggle-active-state-icon-color: #f44336}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size: 40px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:8px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target{display:none}html{--mat-divider-width: 1px}html{--mat-divider-color: rgba(0, 0, 0, .12)}html{--mat-expansion-container-shape: 4px}html{--mat-expansion-container-background-color: white;--mat-expansion-container-text-color: rgba(0, 0, 0, .87);--mat-expansion-actions-divider-color: rgba(0, 0, 0, .12);--mat-expansion-header-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-expansion-header-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-expansion-header-disabled-state-text-color: rgba(0, 0, 0, .26);--mat-expansion-header-text-color: rgba(0, 0, 0, .87);--mat-expansion-header-description-color: rgba(0, 0, 0, .54);--mat-expansion-header-indicator-color: rgba(0, 0, 0, .54)}html{--mat-expansion-header-collapsed-state-height: 48px;--mat-expansion-header-expanded-state-height: 64px}html{--mat-icon-color: inherit}.mat-icon.mat-primary{--mat-icon-color: #4caf50}.mat-icon.mat-accent{--mat-icon-color: #ff4081}.mat-icon.mat-warn{--mat-icon-color: #f44336}html{--mat-sidenav-container-shape: 0}html{--mat-sidenav-container-divider-color: rgba(0, 0, 0, .12);--mat-sidenav-container-background-color: white;--mat-sidenav-container-text-color: rgba(0, 0, 0, .87);--mat-sidenav-content-background-color: #fafafa;--mat-sidenav-content-text-color: rgba(0, 0, 0, .87);--mat-sidenav-scrim-color: rgba(0, 0, 0, .6)}html{--mat-stepper-header-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-selected-state-icon-background-color: #4caf50;--mat-stepper-header-selected-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-done-state-icon-background-color: #4caf50;--mat-stepper-header-done-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-header-edit-state-icon-background-color: #4caf50;--mat-stepper-header-edit-state-icon-foreground-color: rgba(0, 0, 0, .87);--mat-stepper-container-color: white;--mat-stepper-line-color: rgba(0, 0, 0, .12);--mat-stepper-header-hover-state-layer-color: rgba(0, 0, 0, .04);--mat-stepper-header-focus-state-layer-color: rgba(0, 0, 0, .04);--mat-stepper-header-label-text-color: rgba(0, 0, 0, .54);--mat-stepper-header-optional-label-text-color: rgba(0, 0, 0, .54);--mat-stepper-header-selected-state-label-text-color: rgba(0, 0, 0, .87);--mat-stepper-header-error-state-label-text-color: #f44336;--mat-stepper-header-icon-background-color: rgba(0, 0, 0, .54);--mat-stepper-header-error-state-icon-foreground-color: #f44336;--mat-stepper-header-error-state-icon-background-color: transparent}html .mat-step-header.mat-accent{--mat-stepper-header-icon-foreground-color: white;--mat-stepper-header-selected-state-icon-background-color: #ff4081;--mat-stepper-header-selected-state-icon-foreground-color: white;--mat-stepper-header-done-state-icon-background-color: #ff4081;--mat-stepper-header-done-state-icon-foreground-color: white;--mat-stepper-header-edit-state-icon-background-color: #ff4081;--mat-stepper-header-edit-state-icon-foreground-color: white}html .mat-step-header.mat-warn{--mat-stepper-header-icon-foreground-color: white;--mat-stepper-header-selected-state-icon-background-color: #f44336;--mat-stepper-header-selected-state-icon-foreground-color: white;--mat-stepper-header-done-state-icon-background-color: #f44336;--mat-stepper-header-done-state-icon-foreground-color: white;--mat-stepper-header-edit-state-icon-background-color: #f44336;--mat-stepper-header-edit-state-icon-foreground-color: white}html{--mat-stepper-header-height: 72px}html{--mat-sort-arrow-color: #757575}html{--mat-toolbar-container-background-color: whitesmoke;--mat-toolbar-container-text-color: rgba(0, 0, 0, .87)}.mat-toolbar.mat-primary{--mat-toolbar-container-background-color: #4caf50;--mat-toolbar-container-text-color: rgba(0, 0, 0, .87)}.mat-toolbar.mat-accent{--mat-toolbar-container-background-color: #ff4081;--mat-toolbar-container-text-color: white}.mat-toolbar.mat-warn{--mat-toolbar-container-background-color: #f44336;--mat-toolbar-container-text-color: white}html{--mat-toolbar-standard-height: 64px;--mat-toolbar-mobile-height: 56px}html{--mat-tree-container-background-color: white;--mat-tree-node-text-color: rgba(0, 0, 0, .87)}html{--mat-tree-node-min-height: 48px}header{display:block;background:#202020;background-position:30px center;background-repeat:no-repeat;background-size:auto 40%;margin:0;padding-top:35px;padding-bottom:-20px;min-height:50px;text-align:center;color:#fff}header #appTitle{font-size:xx-large;font-weight:bolder;color:#65a800}body{font-family:Roboto,Helvetica Neue,sans-serif;background-color:#65a800;margin:0;padding:0;overflow-y:hidden;overflow-x:hidden;-webkit-user-select:none;user-select:none}footer{display:block;background-color:#202020;min-width:100%;width:auto;margin:0;padding:2px 0;color:#fff;font-size:smaller;text-align:left}footer .wh-text{color:#65a800;margin:0 10px}footer .infoLinks{text-align:right;position:fixed;right:0;margin-right:30px}footer .infoLinks a{color:#fff;margin-left:10px;text-decoration:none}footer .infoLinks a:hover{color:#65a800}\\n\"] }]\n        }] });\n\nclass HeaderComponent {\n    constructor() {\n        this.title = \"\";\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: HeaderComponent, isStandalone: true, selector: \"app-header\", inputs: { title: \"title\" }, ngImport: i0, template: \"<header>\\n    <span id=\\\"appTitle\\\">{{ title }}</span>\\n    <a href=\\\"/THI\\\">\\n      <img\\n        src=\\\"assets/THIOnlineLogo_BoxOffen_small.png\\\"\\n        alt=\\\"THIOnline-Logo\\\"\\n        id=\\\"THILogo\\\"\\n        style=\\\"\\n                  position: absolute;\\n                  right: 30px;\\n                  height: 50px;\\n                  width: auto;\\n                  float: right;\\n                  top: 15px;\\n              \\\"\\n        height=\\\"77\\\" width=\\\"100\\\"/>\\n    </a>\\n  </header>\\n  \", styles: [\"\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HeaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-header', standalone: true, imports: [], template: \"<header>\\n    <span id=\\\"appTitle\\\">{{ title }}</span>\\n    <a href=\\\"/THI\\\">\\n      <img\\n        src=\\\"assets/THIOnlineLogo_BoxOffen_small.png\\\"\\n        alt=\\\"THIOnline-Logo\\\"\\n        id=\\\"THILogo\\\"\\n        style=\\\"\\n                  position: absolute;\\n                  right: 30px;\\n                  height: 50px;\\n                  width: auto;\\n                  float: right;\\n                  top: 15px;\\n              \\\"\\n        height=\\\"77\\\" width=\\\"100\\\"/>\\n    </a>\\n  </header>\\n  \" }]\n        }], propDecorators: { title: [{\n                type: Input\n            }] } });\n\nclass InputComponent {\n    constructor(service) {\n        this.service = service;\n        this.title = '';\n    }\n    ngOnInit() {\n        this.setContent('');\n    }\n    setContent(tapecontent) {\n        this.service.inputChanged(tapecontent);\n    }\n    updateContent(event) {\n        this.setContent(event.target.value);\n    }\n    isReady() {\n        return this.service.isStartStateDefined();\n    }\n    isAccepting() {\n        return this.service.isAccepting();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: InputComponent, deps: [{ token: StatemachineService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: InputComponent, isStandalone: true, selector: \"app-input\", inputs: { title: \"title\" }, ngImport: i0, template: \"<span>{{ title }}:</span>\\n<input\\n  type=\\\"text\\\"\\n  autocomplete=\\\"off\\\"\\n  [ngClass]=\\\"{\\n    tapeInput: true,\\n    accepting: isReady() && isAccepting(),\\n    notAccepting: isReady() && !isAccepting() \\n  }\\\"\\n  (input)=\\\"updateContent($event)\\\"\\n/>\\n\", styles: [\":host{display:flex;flex-direction:row;justify-content:space-between;align-items:center;margin:10px;gap:10px}.tapeInput{border-radius:5px;border-width:2px;border-style:solid;box-sizing:border-box;height:30px;font-size:large}.accepting{border-color:green}.notAccepting{border-color:red}span{font-size:large}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: InputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-input', standalone: true, imports: [CommonModule], template: \"<span>{{ title }}:</span>\\n<input\\n  type=\\\"text\\\"\\n  autocomplete=\\\"off\\\"\\n  [ngClass]=\\\"{\\n    tapeInput: true,\\n    accepting: isReady() && isAccepting(),\\n    notAccepting: isReady() && !isAccepting() \\n  }\\\"\\n  (input)=\\\"updateContent($event)\\\"\\n/>\\n\", styles: [\":host{display:flex;flex-direction:row;justify-content:space-between;align-items:center;margin:10px;gap:10px}.tapeInput{border-radius:5px;border-width:2px;border-style:solid;box-sizing:border-box;height:30px;font-size:large}.accepting{border-color:green}.notAccepting{border-color:red}span{font-size:large}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }], propDecorators: { title: [{\n                type: Input\n            }] } });\n\nclass MenuComponent {\n    constructor(service, http) {\n        this.service = service;\n        this.http = http;\n        this.vorlesungsbeispiele = [];\n        this.uebungsaufgaben = [];\n    }\n    ngOnInit() {\n        this.loadConfig();\n    }\n    createNewInstance() {\n        this.service.createNewInstance();\n    }\n    loadFromBrowserCache() {\n        this.service.loadFromBrowserCache();\n    }\n    saveToBrowserCache() {\n        this.service.saveToBrowserCache();\n    }\n    createInstanceFromJSON(configuration) {\n        this.service.createInstanceFromJSON(configuration);\n    }\n    saveToLocalStorage() {\n        this.service.saveToLocalStorage();\n    }\n    openHelpDialog() {\n        this.service.openHelpDialog();\n    }\n    onFileUpload(e) {\n        const target = e.target;\n        const files = target.files;\n        const file = files[0];\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const content = reader.result;\n            this.createInstanceFromJSON(JSON.parse(content));\n        };\n        reader.readAsText(file);\n        target.value = '';\n    }\n    loadConfig() {\n        const url = `assets/config.json`;\n        this.http.get(url).subscribe({\n            next: (config) => {\n                // Hier kann man dann loadTasks etc. aufrufen\n                this.loadTasks('Vorlesungsbeispiele', this.vorlesungsbeispiele, config);\n                this.loadTasks('Uebungsaufgaben', this.uebungsaufgaben, config);\n            },\n            error: (error) => {\n                console.error('Failed to load config:', error);\n            }\n        });\n    }\n    async loadTasks(type, targetArray, config) {\n        const tasks = config[type];\n        if (tasks && Array.isArray(tasks)) {\n            for (const [index, task] of tasks.entries()) {\n                const url = `assets/${type}/${task.filename}.json`;\n                try {\n                    const data = await firstValueFrom(this.http.get(url));\n                    targetArray[index] = data;\n                }\n                catch (error) {\n                    console.error(`Failed to load ${type}/${task.filename}:`, error);\n                }\n            }\n        }\n        else {\n            console.warn(`No tasks found for type: ${type}`);\n        }\n    }\n    async fetchJSON(type, name) {\n        const response = await fetch((this.baseURL || '') + '/assets/' + type + '/' + name + '.json');\n        const json = await response.json();\n        return json;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: MenuComponent, deps: [{ token: StatemachineService }, { token: i2$1.HttpClient }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: MenuComponent, isStandalone: true, selector: \"app-menu\", inputs: { baseURL: \"baseURL\" }, ngImport: i0, template: \"<button mat-icon-button [matMenuTriggerFor]=\\\"settingsMenu\\\" aria-label=\\\"Men\\u00FC \\u00F6ffnen\\\">\\n    <mat-icon>menu</mat-icon>\\n</button>\\n\\n<mat-menu #settingsMenu class=\\\"myMenuItem\\\">\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"createNewInstance()\\\">\\n        <mat-icon>fiber_new</mat-icon>Neue Instanz\\n    </button>\\n\\n    <label for=\\\"inputTag\\\">\\n        <menu mat-menu-item class=\\\"myMenuItem\\\">\\n            <mat-icon>file_upload</mat-icon>\\n            Laden aus Datei\\n            <input (change)=\\\"onFileUpload($event)\\\" id=\\\"inputTag\\\" type=\\\"file\\\"/>\\n        </menu>\\n    </label>\\n\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"saveToLocalStorage()\\\">\\n        <mat-icon>file_download</mat-icon>Speichern in Datei\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Uebungsaufgaben\\\">\\n        <mat-icon>open_in_browser</mat-icon>\\u00DCbungsaufgaben laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Vorlesungsbeispiele\\\">\\n        <mat-icon>open_in_browser</mat-icon>Vorlesungsbeispiele laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"openHelpDialog()\\\">\\n        <mat-icon>help</mat-icon>Hilfe\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Vorlesungsbeispiele>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of vorlesungsbeispiele\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Uebungsaufgaben>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of uebungsaufgaben\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\", styles: [\"#inputTag{display:none}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"ngmodule\", type: MatButtonModule }, { kind: \"component\", type: i7.MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i5$1.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: MatMenuModule }, { kind: \"component\", type: i6$1.MatMenu, selector: \"mat-menu\", inputs: [\"backdropClass\", \"aria-label\", \"aria-labelledby\", \"aria-describedby\", \"xPosition\", \"yPosition\", \"overlapTrigger\", \"hasBackdrop\", \"class\", \"classList\"], outputs: [\"closed\", \"close\"], exportAs: [\"matMenu\"] }, { kind: \"component\", type: i6$1.MatMenuItem, selector: \"[mat-menu-item]\", inputs: [\"role\", \"disabled\", \"disableRipple\"], exportAs: [\"matMenuItem\"] }, { kind: \"directive\", type: i6$1.MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", inputs: [\"mat-menu-trigger-for\", \"matMenuTriggerFor\", \"matMenuTriggerData\", \"matMenuTriggerRestoreFocus\"], outputs: [\"menuOpened\", \"onMenuOpen\", \"menuClosed\", \"onMenuClose\"], exportAs: [\"matMenuTrigger\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: MenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-menu', standalone: true, imports: [CommonModule, MatButtonModule, MatIconModule, MatMenuModule], template: \"<button mat-icon-button [matMenuTriggerFor]=\\\"settingsMenu\\\" aria-label=\\\"Men\\u00FC \\u00F6ffnen\\\">\\n    <mat-icon>menu</mat-icon>\\n</button>\\n\\n<mat-menu #settingsMenu class=\\\"myMenuItem\\\">\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"createNewInstance()\\\">\\n        <mat-icon>fiber_new</mat-icon>Neue Instanz\\n    </button>\\n\\n    <label for=\\\"inputTag\\\">\\n        <menu mat-menu-item class=\\\"myMenuItem\\\">\\n            <mat-icon>file_upload</mat-icon>\\n            Laden aus Datei\\n            <input (change)=\\\"onFileUpload($event)\\\" id=\\\"inputTag\\\" type=\\\"file\\\"/>\\n        </menu>\\n    </label>\\n\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"saveToLocalStorage()\\\">\\n        <mat-icon>file_download</mat-icon>Speichern in Datei\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Uebungsaufgaben\\\">\\n        <mat-icon>open_in_browser</mat-icon>\\u00DCbungsaufgaben laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Vorlesungsbeispiele\\\">\\n        <mat-icon>open_in_browser</mat-icon>Vorlesungsbeispiele laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"openHelpDialog()\\\">\\n        <mat-icon>help</mat-icon>Hilfe\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Vorlesungsbeispiele>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of vorlesungsbeispiele\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Uebungsaufgaben>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of uebungsaufgaben\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\", styles: [\"#inputTag{display:none}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }, { type: i2$1.HttpClient }], propDecorators: { baseURL: [{\n                type: Input\n            }] } });\n\nclass HelpDialogComponent {\n    constructor() {\n        this.text = '';\n    }\n    ngOnInit() {\n    }\n    ngAfterViewInit() {\n        this.playVideoAtIndex(0);\n    }\n    onTabChange(index) {\n        this.playVideoAtIndex(index);\n    }\n    playVideoAtIndex(index) {\n        this.videos.forEach((vid, idx) => {\n            const videoElement = vid.nativeElement;\n            if (idx === index) {\n                videoElement.play();\n            }\n            else {\n                videoElement.pause();\n                videoElement.currentTime = 0;\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HelpDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: HelpDialogComponent, isStandalone: true, selector: \"app-help-dialog\", viewQueries: [{ propertyName: \"videos\", predicate: [\"videoRef\"], descendants: true }], ngImport: i0, template: \"<button class=\\\"button-close\\\" mat-button [mat-dialog-close]>\\n    <mat-icon>close</mat-icon>\\n</button>\\n<h1 mat-dialog-title>Bedienungsanweisungen</h1>\\n    \\n<mat-tab-group class=\\\"scrollable-tab-group\\\"  (selectedIndexChange)=\\\"onTabChange($event)\\\">\\n    <mat-tab label=\\\"Zustand hinzuf\\u00FCgen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Neue Zust\\u00E4nde k\\u00F6nnen per Doppelklick auf die Arbeitsfl\\u00E4che\\n                    hinzugef\\u00FCgt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand hinzuf\\u00FCgen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Um Zust\\u00E4nde zu \\u00E4ndern/l\\u00F6schen, muss ein Rechtsklick auf\\n                    die Mitte des Zustands ausgef\\u00FChrt werden.\\n                    Anschlie\\u00DFend kann der Zustand in einem Dialogmen\\u00FC ver\\u00E4ndert oder\\n                    gel\\u00F6scht werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand verschieben\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zust\\u00E4nde zu verschieben muss ein Linksklick auf die Mitte des Zustands \\n                    gehalten werden und zur gew\\u00FCnschten Position gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand verschieben.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang hinzuf\\u00FCgen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zust\\u00E4nde zu verbinden, muss erstmal mit einem Linksklick vom Rand des Ausgangszustands eine\\n                    Linie zum gew\\u00FCnschten Zielzustand gezogen werden.\\n                    Anschlie\\u00DFend muss ein Eingabesymbol, Schreibsymbol und die Bewegung eingegeben und best\\u00E4tigt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang hinzuf\\u00FCgen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um \\u00DCberg\\u00E4nge zu bearbeiten, muss ein Rechtsklick auf den jeweiligen \\u00DCbergang ausgef\\u00FChrt werden.\\n                    Anschlie\\u00DFend kann der \\u00DCbergang in einem Dialogmen\\u00FC bearbeitet werden.\\n                </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang + Zustand erstellen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Es ist m\\u00F6glich, gleichzeitig einen \\u00DCbergang und einen Zustand zu erstellen.\\n                    Daf\\u00FCr muss mit einem Linksklick vom Rand des Ausgangszustandes eine\\n                    Linie auf eine leere Stelle der Arbeitsfl\\u00E4che gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang mit Zustand erstellen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n</mat-tab-group>\\n\\n\\n<!-- <h2>Allgemein</h2>\\n<ul>\\n    <li>Zustand hinzuf\\u00FCgen</li>\\n    <ul>\\n        <li>\\n            Neue Zust\\u00E4nde k\\u00F6nnen per Doppelklick auf die Arbeitsfl\\u00E4che\\n            hinzugef\\u00FCgt werden.\\n        </li>\\n    </ul>\\n\\n    <li>Zust\\u00E4nde verbinden</li>\\n    <ul>\\n        <li>\\n            Um Zust\\u00E4nde zu verbinden, muss vom Rand des Ausgangszustandes eine\\n            Linie zum gew\\u00FCnschten Zielzustand gezogen werden.\\n        </li>\\n        <li>\\n            Es ist auch m\\u00F6glich, anstatt einen Zielzustand eine Stelle auf der\\n            Arbeitsfl\\u00E4che auszuw\\u00E4hlen. <br />\\n            Dadurch wird der neue Zielzustand automatisch erstellt.\\n        </li>\\n    </ul>\\n    <li>Elemente \\u00E4ndern/l\\u00F6schen</li>\\n    <ul>\\n        <li>\\n            Um Elemente zu \\u00E4ndern/l\\u00F6schen, muss ein Doppelklick auf das\\n            entsprechende Element ausgef\\u00FChrt werden. <br />\\n            Anschlie\\u00DFend kann das Element in einem Dialogmen\\u00FC ver\\u00E4ndert oder\\n            gel\\u00F6scht werden.\\n        </li>\\n    </ul>\\n    <li>Weitere Aktionen</li>\\n    <ul>\\n        <li>\\n            Durch Klicken des Men\\u00FCbuttons (oben links) sind einige weitere\\n            Aktionen m\\u00F6glich,<br />\\n            wie z.B. abspeichern und laden eines Automaten und\\n            \\u00DCbungsaufgaben/Beispielaufgaben laden.\\n        </li>\\n    </ul>\\n</ul>\\n\\n<h2>Validierung</h2>\\n<ul>\\n    <li>W\\u00F6rter validieren</li>\\n    <ul>\\n        <li>\\n            Um zu pr\\u00FCfen, ob ein bestimmtes Wort vom Automaten akzeptiert wird,\\n            muss es in das Worteingabefeld eingegeben werden.<br />\\n            Falls die Umrandung das Eingabefeldes gr\\u00FCn ist, wird der Automat\\n            akzeptiert, bei Rot wird er nicht akzeptiert.\\n        </li>\\n        <li>\\n            Es ist auch m\\u00F6glich, mehrere \\\"akzeptierende\\\" und \\\"nicht\\n            akzeptierende\\\" W\\u00F6rter gleichzeitig zu testen. <br />\\n            Die W\\u00F6rter k\\u00F6nnen durch Bet\\u00E4tigen des entsprechenden \\\"+\\\"-Buttons\\n            hinzugef\\u00FCgt und anschlie\\u00DFend bearbeitet werden.\\n        </li>\\n    </ul>\\n    <li>Wort Schritt f\\u00FCr Schritt testen</li>\\n    <ul>\\n        <li>\\n            Mittels der zwei Pfeilbuttons neben dem Worteingabefeld kann das\\n            aktuelle Wort Schritt f\\u00FCr Schritt durchgeschaltet werden. <br />\\n            Die Zust\\u00E4nde des Automaten werden daraufhin farblich markiert{{\\n                text\\n            }}.\\n        </li>\\n    </ul>\\n</ul> -->\\n\", styles: [\"@charset \\\"UTF-8\\\";.tab-content{display:flex;flex-direction:column}.video-description{width:100%;height:100%;margin-bottom:0;margin-top:10px}.mat-tab-group{max-width:800px}video{width:100%;height:auto}p{font-size:16px}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"component\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: [\"color\", \"fitInkBarToContent\", \"mat-stretch-tabs\", \"dynamicHeight\", \"selectedIndex\", \"headerPosition\", \"animationDuration\", \"contentTabIndex\", \"disablePagination\", \"disableRipple\", \"preserveContent\", \"backgroundColor\"], outputs: [\"selectedIndexChange\", \"focusChange\", \"animationDone\", \"selectedTabChange\"], exportAs: [\"matTabGroup\"] }, { kind: \"component\", type: MatTab, selector: \"mat-tab\", inputs: [\"disabled\", \"label\", \"aria-label\", \"aria-labelledby\", \"labelClass\", \"bodyClass\"], exportAs: [\"matTab\"] }, { kind: \"directive\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: [\"aria-label\", \"type\", \"mat-dialog-close\", \"matDialogClose\"], exportAs: [\"matDialogClose\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HelpDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-help-dialog', standalone: true, imports: [MatIcon, MatTabGroup, MatTab, MatTabBody, MatTabHeader, MatTabLabel, MatTabNav, MatTabLink, MatDialogClose], template: \"<button class=\\\"button-close\\\" mat-button [mat-dialog-close]>\\n    <mat-icon>close</mat-icon>\\n</button>\\n<h1 mat-dialog-title>Bedienungsanweisungen</h1>\\n    \\n<mat-tab-group class=\\\"scrollable-tab-group\\\"  (selectedIndexChange)=\\\"onTabChange($event)\\\">\\n    <mat-tab label=\\\"Zustand hinzuf\\u00FCgen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Neue Zust\\u00E4nde k\\u00F6nnen per Doppelklick auf die Arbeitsfl\\u00E4che\\n                    hinzugef\\u00FCgt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand hinzuf\\u00FCgen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Um Zust\\u00E4nde zu \\u00E4ndern/l\\u00F6schen, muss ein Rechtsklick auf\\n                    die Mitte des Zustands ausgef\\u00FChrt werden.\\n                    Anschlie\\u00DFend kann der Zustand in einem Dialogmen\\u00FC ver\\u00E4ndert oder\\n                    gel\\u00F6scht werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand verschieben\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zust\\u00E4nde zu verschieben muss ein Linksklick auf die Mitte des Zustands \\n                    gehalten werden und zur gew\\u00FCnschten Position gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand verschieben.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang hinzuf\\u00FCgen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zust\\u00E4nde zu verbinden, muss erstmal mit einem Linksklick vom Rand des Ausgangszustands eine\\n                    Linie zum gew\\u00FCnschten Zielzustand gezogen werden.\\n                    Anschlie\\u00DFend muss ein Eingabesymbol, Schreibsymbol und die Bewegung eingegeben und best\\u00E4tigt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang hinzuf\\u00FCgen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um \\u00DCberg\\u00E4nge zu bearbeiten, muss ein Rechtsklick auf den jeweiligen \\u00DCbergang ausgef\\u00FChrt werden.\\n                    Anschlie\\u00DFend kann der \\u00DCbergang in einem Dialogmen\\u00FC bearbeitet werden.\\n                </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"\\u00DCbergang + Zustand erstellen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Es ist m\\u00F6glich, gleichzeitig einen \\u00DCbergang und einen Zustand zu erstellen.\\n                    Daf\\u00FCr muss mit einem Linksklick vom Rand des Ausgangszustandes eine\\n                    Linie auf eine leere Stelle der Arbeitsfl\\u00E4che gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/\\u00DCbergang mit Zustand erstellen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterst\\u00FCtzt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n</mat-tab-group>\\n\\n\\n<!-- <h2>Allgemein</h2>\\n<ul>\\n    <li>Zustand hinzuf\\u00FCgen</li>\\n    <ul>\\n        <li>\\n            Neue Zust\\u00E4nde k\\u00F6nnen per Doppelklick auf die Arbeitsfl\\u00E4che\\n            hinzugef\\u00FCgt werden.\\n        </li>\\n    </ul>\\n\\n    <li>Zust\\u00E4nde verbinden</li>\\n    <ul>\\n        <li>\\n            Um Zust\\u00E4nde zu verbinden, muss vom Rand des Ausgangszustandes eine\\n            Linie zum gew\\u00FCnschten Zielzustand gezogen werden.\\n        </li>\\n        <li>\\n            Es ist auch m\\u00F6glich, anstatt einen Zielzustand eine Stelle auf der\\n            Arbeitsfl\\u00E4che auszuw\\u00E4hlen. <br />\\n            Dadurch wird der neue Zielzustand automatisch erstellt.\\n        </li>\\n    </ul>\\n    <li>Elemente \\u00E4ndern/l\\u00F6schen</li>\\n    <ul>\\n        <li>\\n            Um Elemente zu \\u00E4ndern/l\\u00F6schen, muss ein Doppelklick auf das\\n            entsprechende Element ausgef\\u00FChrt werden. <br />\\n            Anschlie\\u00DFend kann das Element in einem Dialogmen\\u00FC ver\\u00E4ndert oder\\n            gel\\u00F6scht werden.\\n        </li>\\n    </ul>\\n    <li>Weitere Aktionen</li>\\n    <ul>\\n        <li>\\n            Durch Klicken des Men\\u00FCbuttons (oben links) sind einige weitere\\n            Aktionen m\\u00F6glich,<br />\\n            wie z.B. abspeichern und laden eines Automaten und\\n            \\u00DCbungsaufgaben/Beispielaufgaben laden.\\n        </li>\\n    </ul>\\n</ul>\\n\\n<h2>Validierung</h2>\\n<ul>\\n    <li>W\\u00F6rter validieren</li>\\n    <ul>\\n        <li>\\n            Um zu pr\\u00FCfen, ob ein bestimmtes Wort vom Automaten akzeptiert wird,\\n            muss es in das Worteingabefeld eingegeben werden.<br />\\n            Falls die Umrandung das Eingabefeldes gr\\u00FCn ist, wird der Automat\\n            akzeptiert, bei Rot wird er nicht akzeptiert.\\n        </li>\\n        <li>\\n            Es ist auch m\\u00F6glich, mehrere \\\"akzeptierende\\\" und \\\"nicht\\n            akzeptierende\\\" W\\u00F6rter gleichzeitig zu testen. <br />\\n            Die W\\u00F6rter k\\u00F6nnen durch Bet\\u00E4tigen des entsprechenden \\\"+\\\"-Buttons\\n            hinzugef\\u00FCgt und anschlie\\u00DFend bearbeitet werden.\\n        </li>\\n    </ul>\\n    <li>Wort Schritt f\\u00FCr Schritt testen</li>\\n    <ul>\\n        <li>\\n            Mittels der zwei Pfeilbuttons neben dem Worteingabefeld kann das\\n            aktuelle Wort Schritt f\\u00FCr Schritt durchgeschaltet werden. <br />\\n            Die Zust\\u00E4nde des Automaten werden daraufhin farblich markiert{{\\n                text\\n            }}.\\n        </li>\\n    </ul>\\n</ul> -->\\n\", styles: [\"@charset \\\"UTF-8\\\";.tab-content{display:flex;flex-direction:column}.video-description{width:100%;height:100%;margin-bottom:0;margin-top:10px}.mat-tab-group{max-width:800px}video{width:100%;height:auto}p{font-size:16px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { videos: [{\n                type: ViewChildren,\n                args: ['videoRef']\n            }] } });\n\nclass TestcasebuttonComponent {\n    constructor(service) {\n        this.service = service;\n    }\n    get testCaseViewIsVisible() {\n        return this.service.testCaseViewIsVisible;\n    }\n    toggleTestcaseView() {\n        this.service.testCaseViewIsVisible = !this.service.testCaseViewIsVisible;\n        this.service.testcaseViewToggled?.();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: TestcasebuttonComponent, deps: [{ token: StatemachineService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0\", type: TestcasebuttonComponent, isStandalone: true, selector: \"app-testcasebutton\", ngImport: i0, template: \"<button mat-icon-button class=\\\"toggleTestcaseView\\\" [class.pressed]=\\\"testCaseViewIsVisible\\\" (click)=\\\"toggleTestcaseView()\\\">\\n    <img src=\\\"assets/testcases.svg\\\" alt=\\\"testcases\\\">\\n</button>\", styles: [\"button.pressed{background-color:#ddd}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatIconModule }, { kind: \"ngmodule\", type: MatButtonModule }, { kind: \"component\", type: i7.MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: TestcasebuttonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-testcasebutton', standalone: true, imports: [MatIconModule, MatButtonModule], template: \"<button mat-icon-button class=\\\"toggleTestcaseView\\\" [class.pressed]=\\\"testCaseViewIsVisible\\\" (click)=\\\"toggleTestcaseView()\\\">\\n    <img src=\\\"assets/testcases.svg\\\" alt=\\\"testcases\\\">\\n</button>\", styles: [\"button.pressed{background-color:#ddd}\\n\"] }]\n        }], ctorParameters: () => [{ type: StatemachineService }] });\n\nclass StateMachine {\n    constructor() {\n        this.title = \"New State Machine\";\n        this.description = \"\";\n        this.allStates = [];\n        this.finalStates = new Set();\n        this._input = \"\";\n    }\n    getAllStates() {\n        return this.allStates;\n    }\n    getAllTransitions() {\n        return this.allStates.flatMap((state) => [...state.transitions]);\n    }\n    addState(x, y) {\n        const newState = this.makeState(x, y, this.makeId());\n        if (this.startState == undefined) {\n            this.startState = newState;\n        }\n        this.allStates.push(newState);\n        return newState;\n    }\n    makeId() {\n        let id = 0;\n        while (this.allStates.some((state) => state.id == id)) {\n            id++;\n        }\n        return id;\n    }\n    deleteState(state) {\n        // Remove start if state is start state.\n        if (this.startState == state) {\n            this.startState = undefined;\n        }\n        // Remove state from final states.\n        this.finalStates.delete(state);\n        // Remove transitions where 'state' is the destination state\n        this.getAllTransitions().forEach((transition) => {\n            if (transition.destination === state) {\n                transition.delete();\n            }\n        });\n        let index = this.allStates.findIndex(obj => obj === state);\n        this.allStates.splice(index, 1);\n    }\n    isStartState(state) {\n        return state === this.startState;\n    }\n    isFinalState(state) {\n        return this.finalStates.has(state);\n    }\n    isDeterministic() {\n        return ![...this.getAllStates()].some((state) => !state.isDeterministic());\n    }\n}\n\nclass Result {\n    constructor(states, isAccepting) {\n        this.activeStates = new Set(states);\n        this.isAccepting = isAccepting;\n    }\n}\n\nclass StateConnection {\n    get source() {\n        return this.transition.source;\n    }\n    get destination() {\n        return this.transition.destination;\n    }\n    getCenterPoint() {\n        return this.transition.absolutCenterPoint();\n    }\n    constructor(transition) {\n        this.transition = transition;\n    }\n}\n\nclass Line {\n    constructor(p1, p2) {\n        this.sourcePoint = p1;\n        this.destinationPoint = p2;\n    }\n    // Gets a control point to draw a bezier curve.\n    //\n    // The control point with a specific `distance` to the line.\n    // The point will be on the left side of the line.\n    getBezierControlPoint(distance) {\n        // calculate the vector from the source point to the destination point\n        const vecSource = new Point(this.sourcePoint.x, this.sourcePoint.y);\n        const vecDestination = new Point(this.destinationPoint.x - this.sourcePoint.x, this.destinationPoint.y - this.sourcePoint.y);\n        // calculate the length of the vector\n        const vecDestinationLength = this.sourcePoint.distance(this.destinationPoint);\n        // calculate the unit vector in the direction of the destination point\n        let vecDestinationUnit = Point.zero;\n        if (vecDestinationLength !== 0) {\n            vecDestinationUnit = new Point(vecDestination.x / vecDestinationLength, vecDestination.y / vecDestinationLength);\n        }\n        // calculate the control point halfway between the source and destination points\n        const vecStartControl = new Point(vecSource.x + vecDestination.x / 2, vecSource.y + vecDestination.y / 2);\n        // use the unit vector and the given distance to calculate the final control point\n        const vecEndControl = new Point(vecStartControl.x + distance * vecDestinationUnit.y, vecStartControl.y - distance * vecDestinationUnit.x);\n        return vecEndControl;\n    }\n    getRectangleCenterPoint(width, height) {\n        const { x: x1, y: y1 } = this.sourcePoint;\n        const { x: x2, y: y2 } = this.vector;\n        const x3 = this.center.x +\n            (this.sourcePoint.y < this.destinationPoint.y\n                ? -width / 2\n                : width / 2);\n        const y3 = this.center.y +\n            (this.sourcePoint.x < this.destinationPoint.x\n                ? height / 2\n                : -height / 2);\n        const s = (x2 * (y3 - y1) + y2 * (x1 - x3)) / (y2 * y2 + x2 * x2);\n        const x = this.center.x + s * y2;\n        const y = this.center.y - s * x2;\n        return new Point(x, y);\n    }\n    get vector() {\n        return new Point(this.destinationPoint.x - this.sourcePoint.x, this.destinationPoint.y - this.sourcePoint.y);\n    }\n    length() {\n        return this.sourcePoint.distance(this.destinationPoint);\n    }\n    get center() {\n        return new Point((this.sourcePoint.x + this.destinationPoint.x) / 2, (this.sourcePoint.y + this.destinationPoint.y) / 2);\n    }\n    set center(newCenter) {\n        const currentCenter = this.center;\n        const deltaX = newCenter.x - currentCenter.x;\n        const deltaY = newCenter.y - currentCenter.y;\n        this.sourcePoint = new Point(this.sourcePoint.x + deltaX, this.sourcePoint.y + deltaY);\n        this.destinationPoint = new Point(this.destinationPoint.x + deltaX, this.destinationPoint.y + deltaY);\n    }\n    path() {\n        return ('M' +\n            this.sourcePoint.x +\n            ' ' +\n            this.sourcePoint.y +\n            ', ' +\n            this.destinationPoint.x +\n            ' ' +\n            this.destinationPoint.y);\n    }\n    isPointAboveLine(point) {\n        const epsilon = 1e-10; // Ein sehr kleiner Toleranzwert\n        // Vektor von start zu end\n        const lineVector = {\n            x: this.destinationPoint.x - this.sourcePoint.x,\n            y: this.destinationPoint.y - this.sourcePoint.y\n        };\n        // Vektor von start zum zu testenden Punkt\n        const pointVector = {\n            x: point.x - this.sourcePoint.x,\n            y: point.y - this.sourcePoint.y\n        };\n        // Berechnung des Kreuzprodukts\n        const crossProduct = lineVector.x * pointVector.y - lineVector.y * pointVector.x;\n        // Wenn das Kreuzprodukt > epsilon ist, liegt der Punkt oberhalb der Linie\n        if (crossProduct > epsilon) {\n            return true;\n        }\n        // Wenn das Kreuzprodukt < -epsilon ist, liegt der Punkt unterhalb der Linie\n        if (crossProduct < -epsilon) {\n            return false;\n        }\n        // Wenn das Kreuzprodukt innerhalb der Toleranz liegt, wird der Punkt als auf der Linie betrachtet\n        return false; // oder true, je nach gewünschtem Verhalten für \"auf der Linie\"\n    }\n}\n\nclass AdjustableStateConnection extends StateConnection {\n    constructor(transition, connectionType = ConnectionType.Unidirectional) {\n        super(transition);\n        this.connectionType = connectionType;\n        this.controlPoint = this.calculateControlPoint();\n        this.startEdge = this.calculateEdgePoint(this.source.origin, this.controlPoint, State.circleRadius);\n        this.endEdge = this.calculateEndEdge();\n        this.arrowBasePoint = this.calculateArrowBasePoint();\n        this.controlPoint = this.calculateNewControlPoint();\n    }\n    calculateEdgePoint(center, referencePoint, radius) {\n        const angle = Math.atan2(referencePoint.y - center.y, referencePoint.x - center.x);\n        return new Point(center.x + radius * Math.cos(angle), center.y + radius * Math.sin(angle));\n    }\n    calculateArrowBasePoint() {\n        const arrow = Arrow.transition;\n        const endCenter = this.destination.origin;\n        // Berechne den Winkel vom Zielkreismittelpunkt zum Kontrollpunkt\n        const angle = Math.atan2(this.controlPoint.y - endCenter.y, this.controlPoint.x - endCenter.x);\n        // Berechne den Basispunkt des Pfeils\n        return new Point(this.endEdge.x + arrow.width * Math.cos(angle), this.endEdge.y + arrow.width * Math.sin(angle));\n    }\n    calculateEndEdge() {\n        const endCenter = this.destination.origin;\n        // Berechne den Winkel vom Zielkreismittelpunkt zum Kontrollpunkt\n        const angle = Math.atan2(this.controlPoint.y - endCenter.y, this.controlPoint.x - endCenter.x);\n        // Berechne den Endpunkt auf dem Kreisrand\n        return new Point(endCenter.x + State.circleRadius * Math.cos(angle), endCenter.y + State.circleRadius * Math.sin(angle));\n    }\n    arrow() {\n        const arrow = Arrow.transition;\n        const dx = this.endEdge.x - this.arrowBasePoint.x;\n        const dy = this.endEdge.y - this.arrowBasePoint.y;\n        const angle = Math.atan2(dy, dx);\n        const lowerLeft = new Point(this.arrowBasePoint.x + arrow.height / 2 * Math.sin(angle), this.arrowBasePoint.y - arrow.height / 2 * Math.cos(angle));\n        const upperLeft = new Point(this.arrowBasePoint.x - arrow.height / 2 * Math.sin(angle), this.arrowBasePoint.y + arrow.height / 2 * Math.cos(angle));\n        return `M ${this.arrowBasePoint.x} ${this.arrowBasePoint.y} ` +\n            `L ${lowerLeft.x} ${lowerLeft.y} ` +\n            `L ${this.endEdge.x} ${this.endEdge.y} ` +\n            `L ${upperLeft.x} ${upperLeft.y} ` +\n            `Z`;\n    }\n    path() {\n        return `M${this.startEdge.x},${this.startEdge.y} ` +\n            `Q${this.controlPoint.x},${this.controlPoint.y} ` +\n            `${this.arrowBasePoint.x},${this.arrowBasePoint.y}`;\n    }\n    getCenterPoint() {\n        if (super.getCenterPoint()) {\n            return super.getCenterPoint();\n        }\n        const connectionLine = new Line(this.source.origin, this.destination.origin);\n        return this.connectionType === ConnectionType.Unidirectional\n            ? connectionLine.center\n            : connectionLine.getBezierControlPoint(State.circleRadius);\n    }\n    calculateControlPoint() {\n        const centerPoint = this.getCenterPoint();\n        return new Point(2 * centerPoint.x - 0.5 * (this.source.origin.x + this.destination.origin.x), 2 * centerPoint.y - 0.5 * (this.source.origin.y + this.destination.origin.y));\n    }\n    calculateNewControlPoint() {\n        const centerPoint = this.getCenterPoint();\n        return new Point(2 * centerPoint.x - 0.5 * (this.startEdge.x + this.arrowBasePoint.x), 2 * centerPoint.y - 0.5 * (this.startEdge.y + this.arrowBasePoint.y));\n    }\n    calculateRectanglePlacementAbovePath(width, height) {\n        const line = new Line(this.startEdge, this.arrowBasePoint);\n        const centerPoint = this.getCenterPoint();\n        if (line.isPointAboveLine(centerPoint)) {\n            line.sourcePoint = this.arrowBasePoint;\n            line.destinationPoint = this.startEdge;\n        }\n        line.center = this.getCenterPoint();\n        return line.getRectangleCenterPoint(width, height);\n    }\n}\nvar ConnectionType;\n(function (ConnectionType) {\n    ConnectionType[ConnectionType[\"Unidirectional\"] = 0] = \"Unidirectional\";\n    ConnectionType[ConnectionType[\"Bidirectional\"] = 1] = \"Bidirectional\";\n})(ConnectionType || (ConnectionType = {}));\n\nclass EmptyStateConnection extends StateConnection {\n    calculateRectanglePlacementAbovePath(width, height) {\n        return Point.zero;\n    }\n    path() {\n        return \"\";\n    }\n    getCenterPoint() {\n        return Point.zero;\n    }\n    arrow() {\n        return \"\";\n    }\n}\n\n// This class represents a Bezier curve.\nclass BezierCurve {\n    // The constructor initializes the points that define the curve.\n    constructor(p1, p2, p3) {\n        this.p1 = p1;\n        this.p2 = p2;\n        this.p3 = p3;\n    }\n    pointSecant(t) {\n        // We first compute two intermediate points on the curve.\n        const p12 = this.lerp(this.p1, this.p2, t);\n        const p23 = this.lerp(this.p2, this.p3, t);\n        // We then use these intermediate points to compute the final point on the curve.\n        return new Line(p12, p23);\n    }\n    // This method computes a point on the curve for a given value of \"t\".\n    pointOnCurve(t) {\n        const secant = this.pointSecant(t);\n        // We then use these intermediate points to compute the final point on the curve.\n        return this.lerp(secant.sourcePoint, secant.destinationPoint, t);\n    }\n    // This method performs linear interpolation between two points.\n    lerp(p1, p2, t) {\n        // We compute the new x-coordinate by linearly interpolating between the x-coordinates of the two input points.\n        const x = p1.x + (p2.x - p1.x) * t;\n        // We do the same for the y-coordinate.\n        const y = p1.y + (p2.y - p1.y) * t;\n        // We return a new point with the interpolated coordinates.\n        return new Point(x, y);\n    }\n    path() {\n        return 'M' +\n            this.p1.x +\n            ' ' +\n            this.p1.y +\n            ' Q' +\n            this.p2.x +\n            ' ' +\n            this.p2.y +\n            ' ' +\n            this.p3.x +\n            ' ' +\n            this.p3.y;\n    }\n}\n// This class represents a Bezier curve.\nclass CubicBezierCurve extends BezierCurve {\n    // The constructor initializes the points that define the curve.\n    constructor(p1, p2, p3, p4) {\n        super(p1, p2, p3);\n        this.p4 = p4;\n    }\n    pointSecant(t) {\n        const p12 = this.lerp(this.p1, this.p2, t);\n        const p23 = this.lerp(this.p2, this.p3, t);\n        const p34 = this.lerp(this.p3, this.p4, t);\n        const p123 = this.lerp(p12, p23, t);\n        const p234 = this.lerp(p23, p34, t);\n        return new Line(p123, p234);\n    }\n    // This method computes a point on the curve for a given value of \"t\".\n    pointOnCurve(t) {\n        const secant = this.pointSecant(t);\n        // We then use these intermediate points to compute the final point on the curve.\n        return this.lerp(secant.sourcePoint, secant.destinationPoint, t);\n    }\n    path() {\n        return 'M' +\n            this.p1.x +\n            ' ' +\n            this.p1.y +\n            ' C' +\n            this.p2.x +\n            ' ' +\n            this.p2.y +\n            ' ' +\n            this.p3.x +\n            ' ' +\n            this.p3.y +\n            ' ' +\n            this.p4.x +\n            ' ' +\n            this.p4.y;\n    }\n}\n\nclass SelfStateConnection extends StateConnection {\n    constructor(transition) {\n        super(transition);\n        const { curve, arrowBase, arrowTip } = this.createCurveAndArrow();\n        this.curve = curve;\n        this.arrowBase = arrowBase;\n        this.arrowTip = arrowTip;\n    }\n    path() {\n        return this.curve.path();\n    }\n    arrow() {\n        return this.createArrowPath(this.arrowBase, this.arrowTip);\n    }\n    calculateRectanglePlacementAbovePath(width, height) {\n        const centerPoint = this.curve.pointOnCurve(0.5);\n        return new Point(centerPoint.x, centerPoint.y - height / 2 - 10);\n    }\n    getCenterPoint() {\n        return this.curve.pointOnCurve(0.5);\n    }\n    createCurveAndArrow() {\n        const origin = this.source.origin;\n        const controlPoint1 = new Point(origin.x - 50, origin.y - 65);\n        const controlPoint2 = new Point(origin.x + 50, origin.y - 65);\n        const start = origin.moveToPoint(controlPoint1, State.circleRadius);\n        const end = origin.moveToPoint(controlPoint2, State.circleRadius + Arrow.transition.width);\n        const curve = new CubicBezierCurve(start, controlPoint1, controlPoint2, end);\n        const arrowTip = origin.moveToPoint(controlPoint2, State.circleRadius);\n        return { curve, arrowBase: end, arrowTip };\n    }\n    createArrowPath(base, tip) {\n        const arrow = Arrow.transition;\n        const angle = Math.atan2(tip.y - base.y, tip.x - base.x);\n        const sin = Math.sin(angle);\n        const cos = Math.cos(angle);\n        const halfHeight = arrow.height / 2;\n        const leftCorner = new Point(base.x + halfHeight * sin, base.y - halfHeight * cos);\n        const rightCorner = new Point(base.x - halfHeight * sin, base.y + halfHeight * cos);\n        return `M ${base.x} ${base.y} L ${leftCorner.x} ${leftCorner.y} L ${tip.x} ${tip.y} L ${rightCorner.x} ${rightCorner.y} Z`;\n    }\n}\n\nclass Label {\n    constructor(text, x, y, width, height) {\n        this.text = text;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n\nclass Size {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n}\n\nclass Transition {\n    constructor() {\n        this.fontSize = 16;\n        this.fontFamily = 'Arial';\n        this.highlight = false;\n        const canvas = document.createElement('canvas');\n        this.ctx = canvas.getContext('2d');\n        this.ctx.font = `${this.fontSize}px ${this.fontFamily}`;\n    }\n    absolutCenterPoint() {\n        if (this.relativePos) {\n            return PolarRelativePositionCalculator.toAbsolute(this.relativePos, this.source.origin, this.destination.origin);\n        }\n        return undefined;\n    }\n    set centerPoint(point) {\n        this.relativePos = PolarRelativePositionCalculator.calculate(point, this.source.origin, this.destination.origin);\n    }\n    get centerPoint() {\n        if (this.relativePos) {\n            return PolarRelativePositionCalculator.toAbsolute(this.relativePos, this.source.origin, this.destination.origin);\n        }\n        return this.connection.getCenterPoint();\n    }\n    delete() {\n        const result = this.source.transitions.filter((transition) => transition !== this);\n        this.source.transitions = result;\n    }\n    get connection() {\n        if (this.source.hasConnectionTo(this.destination)) {\n            if (this.source === this.destination) {\n                return new SelfStateConnection(this);\n            }\n            else if (this.destination.hasConnectionTo(this.source)) {\n                const transition = this.destination.getTransitionTo(this.source);\n                if (transition.relativePos) {\n                    return new AdjustableStateConnection(this);\n                }\n                return new AdjustableStateConnection(this, ConnectionType.Bidirectional);\n            }\n            return new AdjustableStateConnection(this);\n        }\n        return new EmptyStateConnection(this);\n    }\n    path() {\n        return this.connection.path();\n    }\n    arrow() {\n        return this.connection.arrow();\n    }\n    pathCenter() {\n        return this.connection.getCenterPoint() ?? Point.zero;\n    }\n    labels() {\n        let boundingBox = new Size(0, this.fontSize * this.displayText().length);\n        this.displayText().forEach((text) => {\n            const width = this.ctx.measureText(text).width;\n            boundingBox.width = Math.max(boundingBox.width, width);\n        });\n        const centerPoint = this.connection.calculateRectanglePlacementAbovePath(boundingBox.width, boundingBox.height);\n        // Calculate the left edge of the bounding box\n        const leftEdge = centerPoint.x - boundingBox.width / 2;\n        // Move rectangleCenterY to the top of the rectangle\n        const topEdge = centerPoint.y - boundingBox.height / 2;\n        return this.displayText().map((text, index) => {\n            return new Label(text, leftEdge, // x-coordinate is now at the left edge\n            topEdge + index * this.fontSize + this.fontSize / 2, boundingBox.width, boundingBox.height);\n        });\n    }\n    isEmpty() {\n        return this.displayText().length == 0;\n    }\n    toJSON() {\n        return {\n            destination: this.destination.id\n        };\n    }\n}\nclass PolarRelativePositionCalculator {\n    static calculate(point, p1, p2) {\n        const dx = p2.x - p1.x;\n        const dy = p2.y - p1.y;\n        const length = Math.sqrt(dx * dx + dy * dy);\n        // Vektor von p1 zum Punkt\n        const vx = point.x - p1.x;\n        const vy = point.y - p1.y;\n        // Projektion auf die Linie\n        const t = (vx * dx + vy * dy) / (length * length);\n        // Senkrechter Abstand\n        const px = p1.x + t * dx;\n        const py = p1.y + t * dy;\n        const r = Math.sqrt((point.x - px) ** 2 + (point.y - py) ** 2);\n        // Bestimme die Richtung (im oder gegen den Uhrzeigersinn)\n        const clockwise = (dx * (point.y - p1.y) - dy * (point.x - p1.x)) > 0;\n        return { t, r, clockwise };\n    }\n    static toAbsolute(relPos, p1, p2) {\n        const dx = p2.x - p1.x;\n        const dy = p2.y - p1.y;\n        const length = Math.sqrt(dx * dx + dy * dy);\n        // Punkt auf der Linie\n        const px = p1.x + relPos.t * dx;\n        const py = p1.y + relPos.t * dy;\n        // Senkrechter Vektor\n        let perpX = -dy / length;\n        let perpY = dx / length;\n        if (!relPos.clockwise) {\n            perpX = -perpX;\n            perpY = -perpY;\n        }\n        // Endgültige Position\n        return new Point(px + relPos.r * perpX, py + relPos.r * perpY);\n    }\n}\n\nclass Rect {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n\n/*\n * Public API Surface of commons\n */\n// Components\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdjustableStateConnection, Arrow, BezierCurve, ConnectionType, CoreComponent, CubicBezierCurve, DefaultState, EmptyStateConnection, FooterComponent, HeaderComponent, HelpDialogComponent, InputComponent, Label, Line, MenuComponent, MoveNodeState, MoveTransitionState, Point, Rect, Result, SelfStateConnection, Size, State, StateConnection, StateEditDialogComponent, StateMachine, StateMachineViewState, StatemachineService, StatemachineviewComponent, TestcasebuttonComponent, Transition, TransitionEditState, TransitionFromState, TransitionNewStateEditState, TransitionToState };\n//# sourceMappingURL=commons.mjs.map\n","map":null,"preliminaryFileName":"commons.mjs","sourcemapFileName":"commons.mjs.map"},{"fileName":"commons.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"commons.mjs\",\"sources\":[\"../../../statemachine/src/lib/statemachine/drawingprimitives/Point.ts\",\"../../../statemachine/src/lib/statemachine/drawingprimitives/Arrow.ts\",\"../../../statemachine/src/lib/statemachine/statemachine.service.ts\",\"../../../statemachine/src/lib/statemachineview/state-edit-dialog/state-edit-dialog.component.ts\",\"../../../statemachine/src/lib/statemachineview/state-edit-dialog/state-edit-dialog.component.html\",\"../../../statemachine/src/lib/statemachine/state.ts\",\"../../../statemachine/src/lib/statemachineview/interactionstate/statemachineviewstate.ts\",\"../../../statemachine/src/lib/statemachineview/interactionstate/movenodestate.ts\",\"../../../statemachine/src/lib/statemachineview/interactionstate/transtioneditstate.ts\",\"../../../statemachine/src/lib/statemachineview/interactionstate/transitiontostate.ts\",\"../../../statemachine/src/lib/statemachineview/interactionstate/transtionnewstateeditstate.ts\",\"../../../statemachine/src/lib/statemachineview/interactionstate/transitionfromstate.ts\",\"../../../statemachine/src/lib/statemachineview/interactionstate/movetransitionstate.ts\",\"../../../statemachine/src/lib/statemachineview/interactionstate/defaultstate.ts\",\"../../../statemachine/src/lib/statemachineview/statemachineview.component.ts\",\"../../../statemachine/src/lib/statemachineview/statemachineview.component.html\",\"../../../statemachine/src/lib/core.component.ts\",\"../../../statemachine/src/lib/core.component.html\",\"../../../statemachine/src/lib/footer/footer.component.ts\",\"../../../statemachine/src/lib/footer/footer.component.html\",\"../../../statemachine/src/lib/header/header.component.ts\",\"../../../statemachine/src/lib/header/header.component.html\",\"../../../statemachine/src/lib/input/input.component.ts\",\"../../../statemachine/src/lib/input/input.component.html\",\"../../../statemachine/src/lib/menu/menu.component.ts\",\"../../../statemachine/src/lib/menu/menu.component.html\",\"../../../statemachine/src/lib/menu/help-dialog/help-dialog.component.ts\",\"../../../statemachine/src/lib/menu/help-dialog/help-dialog.component.html\",\"../../../statemachine/src/lib/testcasebutton/testcasebutton.component.ts\",\"../../../statemachine/src/lib/testcasebutton/testcasebutton.component.html\",\"../../../statemachine/src/lib/statemachine/statemachine.ts\",\"../../../statemachine/src/lib/statemachine/Result.ts\",\"../../../statemachine/src/lib/statemachine/stateconnections/StateConnection.ts\",\"../../../statemachine/src/lib/statemachine/drawingprimitives/Line.ts\",\"../../../statemachine/src/lib/statemachine/stateconnections/AdjustableStateConnection.ts\",\"../../../statemachine/src/lib/statemachine/stateconnections/EmptyStateConnection.ts\",\"../../../statemachine/src/lib/statemachine/drawingprimitives/BezierCurve.ts\",\"../../../statemachine/src/lib/statemachine/stateconnections/SelfStateConnection.ts\",\"../../../statemachine/src/lib/statemachine/stateconnections/Label.ts\",\"../../../statemachine/src/lib/statemachine/drawingprimitives/Size.ts\",\"../../../statemachine/src/lib/statemachine/stateconnections/Transition.ts\",\"../../../statemachine/src/lib/statemachine/drawingprimitives/Rect.ts\",\"../../../statemachine/src/public-api.ts\",\"../../../statemachine/src/commons.ts\"],\"sourcesContent\":[\"export class Point {\\n    x: number;\\n    y: number;\\n\\n    constructor(x: number, y: number) {\\n        this.x = x;\\n        this.y = y;\\n    }\\n\\n    static get zero(): Point {\\n        return new Point(0, 0);\\n    }\\n\\n    distance(point: Point): number {\\n        const deltaX = this.x - point.x;\\n        const deltaY = this.y - point.y;\\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\\n    }\\n\\n    // Moves this point into the direction of the given point, by a specific amount.\\n    moveToPoint(point: Point, amount: number): Point {\\n        const distance = this.distance(point);\\n\\n        const newDistance = distance - amount;\\n\\n        const vecP1P2x = point.x - this.x;\\n        const vecP1P2y = point.y - this.y;\\n\\n        let unitVecX = 0;\\n        let unitVecY = 0;\\n\\n        if (distance != 0) {\\n            unitVecX = vecP1P2x / distance;\\n            unitVecY = vecP1P2y / distance;\\n        }\\n\\n        const newPointX = point.x - newDistance * unitVecX;\\n        const newPointY = point.y - newDistance * unitVecY;\\n\\n        return new Point(newPointX, newPointY);\\n    }\\n\\n    addPoint(point: Point): Point {\\n        return new Point(this.x + point.x, this.y + point.y);\\n    }\\n\\n    get perpendicular(): Point {\\n        return new Point(this.y, -this.x);\\n    }\\n\\n    toJSON(): any {\\n        return {\\n            x: this.x,\\n            y: this.y,\\n        };\\n    }\\n}\\n\",\"import { Point } from './Point';\\nimport { Shape } from './Shape';\\n\\nexport class Arrow implements Shape {\\n    width: number;\\n    height: number;\\n\\n    refX: number;\\n    refY: number;\\n\\n    private lowerLeft: Point;\\n    private upperLeft: Point;\\n    private centerRight: Point;\\n\\n    constructor(width: number, height: number) {\\n        this.width = width;\\n        this.height = height;\\n        this.lowerLeft = new Point(0, 0);\\n        this.upperLeft = new Point(0, this.height);\\n        this.centerRight = new Point(this.width, this.height / 2);\\n        this.refX = 0;\\n        this.refY = this.centerRight.y;\\n    }\\n\\n    /// Returns an arrow for a transition\\n    static transition: Arrow = new Arrow(7.5 * 2, 5 * 2);\\n\\n    path(): string {\\n        return (\\n            this.lowerLeft.x +\\n            ' ' +\\n            this.lowerLeft.y +\\n            ', ' +\\n            this.upperLeft.x +\\n            ' ' +\\n            this.upperLeft.y +\\n            ', ' +\\n            this.centerRight.x +\\n            ' ' +\\n            this.centerRight.y\\n        );\\n    }\\n}\\n\",\"// Erweiterte Version von statemachine.service.ts mit Auto-Load und Observable\\n\\nimport { Injectable } from '@angular/core';\\nimport { StateMachine } from './statemachine';\\nimport { State } from './state';\\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\\nimport { Transition } from './stateconnections/Transition';\\n// Tutorial Dialog muss von der Anwendung bereitgestellt werden\\nimport { Subject } from 'rxjs';\\n\\n@Injectable({\\n  providedIn: 'root'\\n})\\nexport class StatemachineService {\\n\\n  public stateMachine!: StateMachine;\\n  private automatonChangedSubject = new Subject<void>();\\n  public onAutomatonChanged = this.automatonChangedSubject.asObservable();\\n\\n  showDeterministicStates: boolean = false;\\n  testCaseViewIsVisible: boolean = true;\\n  testcaseViewToggled?: () => void;\\n\\n  constructor(public dialog: MatDialog) {\\n    // Auto-load from browser cache on service initialization\\n    this.loadFromBrowserCacheOnInit();\\n  }\\n\\n  private loadFromBrowserCacheOnInit(): void {\\n    try {\\n      const savedData = localStorage.getItem('endlicherautomat');\\n      if (savedData && this.stateMachine) {\\n        const json = JSON.parse(savedData);\\n        this.stateMachine = this.stateMachine.createInstanceFromJSON(json);\\n        console.log('Automatisch aus Browser-Cache geladen');\\n        this.automatonChangedSubject.next();\\n      }\\n    } catch (error) {\\n      console.error('Fehler beim automatischen Laden aus Browser-Cache:', error);\\n    }\\n  }\\n\\n  get input(): string {\\n    return this.stateMachine.input;\\n  }\\n\\n  get states(): State[] {\\n    return this.stateMachine.getAllStates();\\n  }\\n\\n  isFinalState(state: State): boolean {\\n    return this.stateMachine.isFinalState(state);\\n  }\\n\\n  isStartState(state: State): boolean {\\n    return this.stateMachine.isStartState(state);\\n  }\\n\\n  addState(x: number, y: number): State {\\n    const newState = this.stateMachine.addState(x, y);\\n    this.automatonChangedSubject.next();\\n    return newState;\\n  }\\n\\n  deleteState(state: State): void {\\n    this.stateMachine.deleteState(state);\\n    this.automatonChangedSubject.next();\\n  }\\n\\n  addTransition(source: State, destination: State): Transition {\\n    const transition = source.addTransition(destination);\\n    this.automatonChangedSubject.next();\\n    return transition;\\n  }\\n\\n  removeTransition(transition: Transition): void {\\n    transition.delete();\\n    this.automatonChangedSubject.next();\\n  }\\n\\n  get transitions(): Transition[] {\\n    return this.stateMachine.getAllTransitions();\\n  }\\n\\n  openStateEditDialog(state: State, dialog: MatDialog): MatDialogRef<any, any> {\\n    const dialogRef = state.openEditDialog(dialog);\\n    dialogRef.afterClosed().subscribe(() => {\\n      this.automatonChangedSubject.next();\\n    });\\n    return dialogRef;\\n  }\\n\\n  openTransitionEditDialog(source: State, destination: State, dialog: MatDialog): MatDialogRef<any, any> {\\n    const dialogRef = source.addTransition(destination).openTransitionDialog(dialog);\\n    dialogRef.afterClosed().subscribe(() => {\\n      this.automatonChangedSubject.next();\\n    });\\n    return dialogRef;\\n  }\\n\\n  isActiveState(state: State): boolean {\\n    return this.stateMachine.activeStates(this.stateMachine.input).has(state);\\n  }\\n\\n  isDeterministic(): boolean {\\n    return this.stateMachine.isDeterministic();\\n  }\\n\\n  isStartStateDefined(): boolean {\\n    return this.stateMachine.startState != undefined;\\n  }\\n\\n  createNewInstance() {\\n    this.stateMachine = this.stateMachine.createNewInstance();\\n    this.automatonChangedSubject.next();\\n    // Clear localStorage when creating new instance\\n    localStorage.removeItem('endlicherautomat');\\n  }\\n\\n  loadFromBrowserCache() {\\n    try {\\n      this.stateMachine = this.stateMachine.loadFromBrowserCache();\\n      this.automatonChangedSubject.next();\\n      console.log('Manuell aus Browser-Cache geladen');\\n    } catch (error) {\\n      console.error('Fehler beim Laden aus Browser-Cache:', error);\\n      alert('Fehler beim Laden aus dem Browser-Cache. Möglicherweise sind keine gespeicherten Daten vorhanden.');\\n    }\\n  }\\n\\n  saveToBrowserCache() {\\n    try {\\n      this.stateMachine.saveToBrowserCache();\\n      console.log('In Browser-Cache gespeichert');\\n    } catch (error) {\\n      console.error('Fehler beim Speichern in Browser-Cache:', error);\\n    }\\n  }\\n\\n  createInstanceFromJSON(configuration: any) {\\n    this.stateMachine = this.stateMachine.createInstanceFromJSON(configuration);\\n    this.automatonChangedSubject.next();\\n  }\\n\\n  saveToLocalStorage() {\\n    this.stateMachine.saveToLocalStorage();\\n  }\\n\\n  inputChanged(input: string) {\\n    this.stateMachine.input = input;\\n  }\\n\\n  isAccepting(): boolean | undefined {\\n    return this.stateMachine.isAcceptingWord(this.stateMachine.input).isAccepting;\\n  }\\n\\n  // Dialog-Komponente für Hilfe/Tutorial\\n  private helpDialogComponent: any;\\n\\n  setHelpDialogComponent(component: any): void {\\n    this.helpDialogComponent = component;\\n  }\\n\\n  openHelpDialog(): void {\\n    if (this.helpDialogComponent) {\\n      this.dialog.open(this.helpDialogComponent, {\\n        maxWidth: '70vw',\\n        maxHeight: '90vh',\\n      });\\n    }\\n  }\\n}\",\"import { Component, Inject } from '@angular/core';\\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\\nimport { MatIcon } from '@angular/material/icon';\\nimport { CommonModule } from '@angular/common';\\nimport { MatFormFieldModule } from '@angular/material/form-field';\\nimport { FormsModule } from '@angular/forms';\\nimport { MatInputModule } from '@angular/material/input';\\nimport { MatTableModule } from '@angular/material/table';\\nimport { MatDialogModule } from '@angular/material/dialog';\\nimport { StatemachineService } from '../../statemachine/statemachine.service';\\nimport { MatCheckboxModule } from '@angular/material/checkbox';\\nimport { State } from '../../statemachine/state';\\nimport { MatButtonModule } from '@angular/material/button';\\n\\n@Component({\\n  selector: 'app-state-edit-dialog',\\n  standalone: true,\\n  imports: [MatIcon, CommonModule, MatFormFieldModule, FormsModule, MatInputModule, MatTableModule, MatDialogModule, MatCheckboxModule, MatButtonModule],\\n  templateUrl: './state-edit-dialog.component.html',\\n  styleUrl: './state-edit-dialog.component.scss'\\n})\\nexport class StateEditDialogComponent {\\n  constructor(\\n    public service: StatemachineService,\\n    public dialogRef: MatDialogRef<StateEditDialogComponent>,\\n    @Inject(MAT_DIALOG_DATA) public data: State) {\\n  }\\n\\n  onEnter() {\\n    this.dialogRef.close();\\n  }\\n\\n  deleteState() {\\n    this.service.deleteState(this.data);\\n    this.dialogRef.close();\\n  }\\n\\n  isStartState(): boolean {\\n    return this.service.isStartState(this.data);\\n  }\\n\\n  isFinalState(): boolean {\\n    return this.service.isFinalState(this.data);\\n  }\\n\\n  toggleStart(isChecked: boolean) {\\n    this.service.stateMachine.startState = isChecked ? this.data : undefined;\\n  }\\n  \\n  toggleFinal(isChecked: boolean) {\\n    if (isChecked) {\\n        this.service.stateMachine.finalStates = new Set([\\n            ...this.service.stateMachine.finalStates,\\n            this.data,\\n        ]);\\n    } else {\\n        this.service.stateMachine.finalStates.delete(this.data);\\n        this.service.stateMachine.finalStates = new Set([\\n            ...this.service.stateMachine.finalStates\\n        ]);\\n    }\\n  }\\n}\\n\",\"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Zustand {{ data.name }} bearbeiten</h3>\\n    <div mat-dialog-content>\\n        <form>\\n            <mat-form-field>\\n                <mat-label>Zustandsname</mat-label>\\n                <input title=\\\"Zustandsname\\\" matInput type=\\\"text\\\" autocomplete=\\\"off\\\" value=\\\"{{ data.name }}\\\"\\n                    [(ngModel)]=\\\"data.name\\\" maxlength=\\\"12\\\" name=\\\"stateName-input\\\" (keydown.enter)=\\\"onEnter()\\\">\\n            </mat-form-field>\\n            <section>\\n                <mat-checkbox (change)=\\\"toggleStart($event.checked)\\\" [checked]=\\\"isStartState()\\\" name=\\\"startState\\\">\\n                    Startzustand\\n                </mat-checkbox>\\n                <br />\\n                <mat-checkbox (change)=\\\"toggleFinal($event.checked)\\\" [checked]=\\\"isFinalState()\\\" name=\\\"endState\\\">\\n                    Endzustand\\n                </mat-checkbox>\\n            </section>\\n        </form>\\n\\n        <div class=\\\"action-buttons\\\" mat-dialog-actions>\\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" (click)=\\\"deleteState()\\\" class=\\\"button-delete\\\" color=\\\"warn\\\">\\n                Löschen\\n            </button>\\n    \\n            <button mat-stroked-button [mat-dialog-close]=\\\"\\\" class=\\\"button-ok\\\">\\n                Ok\\n            </button>\\n        </div>\\n    </div>\\n    \\n</div>\",\"import { MatDialog, MatDialogRef } from \\\"@angular/material/dialog\\\";\\nimport { Point } from \\\"./drawingprimitives/Point\\\";\\nimport { Transition } from \\\"./stateconnections/Transition\\\";\\nimport { StateEditDialogComponent } from \\\"../statemachineview/state-edit-dialog/state-edit-dialog.component\\\";\\n\\nexport abstract class State {\\n  origin: Point;\\n\\n  name: string;\\n\\n  id: number;\\n\\n  innerCircleHovered: boolean = false;\\n\\n  outerCircleHovered: boolean = false;\\n\\n  highlight = false;\\n\\n  abstract transitions: Transition[];\\n\\n  get x(): number {\\n    return this.origin.x;\\n  }\\n\\n  set x(x: number) {\\n    this.origin.x = x;\\n  }\\n\\n  get y(): number {\\n    return this.origin.y;\\n  }\\n\\n  set y(y: number) {\\n    this.origin.y = y;\\n  }\\n\\n  static get circleRadius(): number {\\n    return 30;\\n  }\\n\\n  get r(): number {\\n    return State.circleRadius;\\n  }\\n\\n  static get innerCircleRadius(): number {\\n    return State.circleRadius / 2;\\n  }\\n\\n  constructor(origin: Point, id: number) {\\n    this.origin = origin;\\n    this.name = `S${id}`;\\n    this.id = id;\\n  }\\n\\n  getConnectionPointToState(destination: State): Point {\\n    return destination.origin.moveToPoint(this.origin, State.circleRadius);\\n  }\\n\\n  hasConnectionTo(state: State): boolean {\\n    return [...this.transitions].some((transition) => {\\n      return transition.destination === state;\\n    });\\n  }\\n\\n  getTransitionTo(state: State): Transition | undefined {\\n    // Wenn this.transitions ein Set ist, konvertieren Sie es zu einem Array\\n    return [...this.transitions].find(\\n      (transition) => transition.destination === state\\n    );\\n  }\\n\\n  toJSON(): Object {\\n    return {\\n      id: this.id,\\n      origin: this.origin,\\n      name: this.name,\\n      transitions: this.transitions,\\n    };\\n  }\\n\\n  abstract makeTransition(destination: State): Transition;\\n\\n  abstract isDeterministic(): boolean;\\n\\n  openEditDialog(dialog: MatDialog): MatDialogRef<any, any> {\\n    return dialog.open(StateEditDialogComponent, { data: this });\\n  }\\n\\n  addTransition(destination: State): Transition {\\n    // Check if transition already exists.\\n    let transition = [...this.transitions].find(\\n      (transition) => transition.destination == destination\\n    );\\n\\n    // If transition does not exist, create it.\\n    if (transition == undefined) {\\n      transition = this.makeTransition(destination);\\n      this.transitions = [...this.transitions, transition];\\n    }\\n\\n    return transition;\\n  }\\n}\\n\",\"import { Point } from \\\"../../statemachine/drawingprimitives/Point\\\";\\nimport { State } from \\\"../../statemachine/state\\\";\\nimport { StatemachineviewComponent } from \\\"../statemachineview.component\\\";\\nimport {Transition} from \\\"../../statemachine/stateconnections/Transition\\\";\\n\\nexport abstract class StateMachineViewState {\\n\\n  protected statemachineviewComponent: StatemachineviewComponent;\\n\\n    protected get boundary(): DOMRect {\\n      return this.statemachineviewComponent.svgFieldElementRef.nativeElement.getBoundingClientRect() as DOMRect;\\n    }\\n\\n    constructor(statemachineviewComponent: StatemachineviewComponent) {\\n        this.statemachineviewComponent = statemachineviewComponent;\\n    }\\n\\n    changeState(state: StateMachineViewState) {\\n      this.statemachineviewComponent.changeState(state);\\n    }\\n\\n    onMouseDown(event: MouseEvent): void {}\\n    onMouseUp(event: MouseEvent): void {}\\n    onMouseMove(event: MouseEvent): void {}\\n    onInnerCircleMouseDown(event: MouseEvent, state: State): void {}\\n    onInnerCircleMouseUp(event: MouseEvent, state: State): void {}\\n    onOuterCircleMouseDown(event: MouseEvent, state: State): void {}\\n    onOuterCircleMouseUp(event: MouseEvent, state: State): void {}\\n    onEntireCircleMouseDown(event: MouseEvent, state: State): void {}\\n    onEntireCircleMouseUp(event: MouseEvent, state: State): void {}\\n    onCircleEnter(event: MouseEvent, state: State): void {}\\n    onCircleLeave(event: MouseEvent, state: State): void {}\\n    onInnerCircleEnter(event: MouseEvent, state: State): void {}\\n    onInnerCircleLeave(event: MouseEvent, state: State): void {}\\n    onOuterCircleEnter(event: MouseEvent, state: State): void {}\\n    onOuterCircleLeave(event: MouseEvent, state: State): void {}\\n\\n    onAdjustableCircleMouseDown(event: MouseEvent, transition: Transition): void {}\\n    onAdjustableCircleMouseUp(event: MouseEvent, transition: Transition): void {}\\n\\n    showStartConnection(state: State): boolean { return false }\\n    showEndConnection(state: State): boolean { return false }\\n\\n    showDrawingTransition(): boolean { return false }\\n    drawingTransitionOrigin(): Point { return Point.zero }\\n    drawingTransitionDestination(): Point { return Point.zero }\\n}\\n\",\"import { State } from \\\"../../statemachine/state\\\";\\nimport { StatemachineviewComponent } from \\\"../statemachineview.component\\\";\\nimport { DefaultState } from \\\"./defaultstate\\\";\\nimport { StateMachineViewState } from \\\"./statemachineviewstate\\\";\\n\\nexport class MoveNodeState extends StateMachineViewState {\\n\\n    private movingState: State;\\n  \\n    private set movingStateX(value: number) {\\n      this.statemachineviewComponent.zone.run(() => this.movingState.x = value);\\n    }\\n  \\n    private set movingStateY(value: number) {\\n      this.statemachineviewComponent.zone.run(() => this.movingState.y = value);\\n    }\\n  \\n    constructor(statemachineviewComponent: StatemachineviewComponent, movingState: State) {\\n      super(statemachineviewComponent);\\n      this.movingState = movingState;\\n    }\\n  \\n    override onMouseUp(event: MouseEvent): void {\\n      this.movingState.innerCircleHovered = false;\\n      this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\\n    }\\n  \\n    override onMouseMove(event: MouseEvent): void {\\n      const boundary = this.boundary;\\n      if (event.x > boundary.left + State.circleRadius && event.x < boundary.right - State.circleRadius) {\\n        this.movingStateX = event.clientX - boundary.left;\\n      }\\n      if (event.y > boundary.top + State.circleRadius && event.y < boundary.bottom - State.circleRadius) {\\n        this.movingStateY = event.clientY - boundary.top;\\n      }\\n    }\\n  }\",\"import { State } from \\\"../../statemachine/state\\\";\\nimport { Transition } from \\\"../../statemachine/stateconnections/Transition\\\";\\nimport { StatemachineviewComponent } from \\\"../statemachineview.component\\\";\\nimport { DefaultState } from \\\"./defaultstate\\\";\\nimport { StateMachineViewState } from \\\"./statemachineviewstate\\\";\\n\\nexport class TransitionEditState extends StateMachineViewState {\\n\\n  transitionFrom: State;\\n  transitionTo: State;\\n  dummyTransition: Transition;\\n\\n  constructor(\\n    statemachineviewComponent: StatemachineviewComponent, \\n    transitionFrom: State,\\n    transitionTo: State,\\n    dummyTransition: Transition)\\n  {\\n    super(statemachineviewComponent);\\n    this.transitionFrom = transitionFrom;\\n    this.transitionTo = transitionTo;\\n    this.dummyTransition = dummyTransition;\\n\\n    const transitionState = new DefaultState(this.statemachineviewComponent);\\n\\n    const dialogRef = this.statemachineviewComponent\\n      .statemachineService\\n      .openTransitionEditDialog(\\n        this.transitionFrom,\\n        this.transitionTo,\\n        this.statemachineviewComponent.dialog);\\n\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result) {\\n        this.dummyTransition.delete();\\n      }\\n      this.statemachineviewComponent.changeState(transitionState);\\n      this.transitionFrom.outerCircleHovered = false;\\n      this.transitionTo.outerCircleHovered = false;\\n      this.transitionTo.outerCircleHovered = false;\\n    });\\n  }\\n\\n  override onMouseUp(event: MouseEvent): void {}\\n  override onCircleLeave(event: MouseEvent, state: State): void {}\\n  override showDrawingTransition(): boolean { return false }\\n\\n  override showStartConnection(state: State): boolean {\\n    return this.transitionFrom === state;\\n  }\\n\\n  override showEndConnection(state: State): boolean {\\n    return this.transitionTo === state;\\n  }\\n}\",\"import { State } from \\\"../../statemachine/state\\\";\\nimport { Transition } from \\\"../../statemachine/stateconnections/Transition\\\";\\nimport { StatemachineviewComponent } from \\\"../statemachineview.component\\\";\\nimport { StateMachineViewState } from \\\"./statemachineviewstate\\\";\\nimport { TransitionFromState } from \\\"./transitionfromstate\\\";\\nimport { TransitionEditState } from \\\"./transtioneditstate\\\";\\n\\nexport class TransitionToState extends StateMachineViewState {\\n\\n    protected transitionFrom: State;\\n    protected transitionTo: State;\\n    protected dummyTransition: Transition;\\n  \\n    constructor(\\n      statemachineviewComponent: StatemachineviewComponent, \\n      transitionFrom: State,\\n      transitionTo: State)\\n    {\\n      super(statemachineviewComponent);\\n      this.transitionFrom = transitionFrom;\\n      this.transitionTo = transitionTo;\\n      this.dummyTransition = transitionFrom.addTransition(transitionTo);\\n    }\\n  \\n    override onMouseUp(event: MouseEvent): void {\\n      const transitionState = new TransitionEditState(this.statemachineviewComponent, this.transitionFrom, this.transitionTo, this.dummyTransition);\\n      this.statemachineviewComponent.changeState(transitionState);\\n    }\\n  \\n    override onCircleLeave(event: MouseEvent, state: State): void {\\n      if (this.dummyTransition.isEmpty()) {\\n        this.dummyTransition.delete();\\n      }\\n      const transitionState = new TransitionFromState(this.statemachineviewComponent, this.transitionFrom);\\n      this.statemachineviewComponent.changeState(transitionState);\\n    }\\n  \\n    override showStartConnection(state: State): boolean {\\n      return this.transitionFrom === state;\\n    }\\n  \\n    override showEndConnection(state: State): boolean {\\n      return this.transitionTo === state;\\n    }\\n  }\",\"import { State } from \\\"../../statemachine/state\\\";\\nimport { Transition } from \\\"../../statemachine/stateconnections/Transition\\\";\\nimport { StatemachineviewComponent } from \\\"../statemachineview.component\\\";\\nimport { DefaultState } from \\\"./defaultstate\\\";\\nimport { StateMachineViewState } from \\\"./statemachineviewstate\\\";\\n\\nexport class TransitionNewStateEditState extends StateMachineViewState {\\n\\n    transitionFrom: State;\\n    transitionTo: State;\\n    dummyTransition: Transition;\\n  \\n    constructor(\\n      statemachineviewComponent: StatemachineviewComponent, \\n      transitionFrom: State,\\n      transitionTo: State)\\n    {\\n      super(statemachineviewComponent);\\n      this.transitionFrom = transitionFrom;\\n      this.transitionTo = transitionTo;\\n      this.dummyTransition = transitionFrom.addTransition(transitionTo);\\n      \\n      const dialogRef = this.statemachineviewComponent\\n      .statemachineService\\n      .openTransitionEditDialog(\\n        this.transitionFrom,\\n        this.transitionTo,\\n        this.statemachineviewComponent.dialog);\\n  \\n      dialogRef.afterClosed().subscribe(transitionIsEmpty => {\\n        if (transitionIsEmpty) {\\n          this.statemachineviewComponent.statemachineService.deleteState(this.transitionTo);\\n        }\\n        this.transitionFrom.outerCircleHovered = false;\\n        this.transitionTo.outerCircleHovered = false;\\n        this.transitionTo.innerCircleHovered = false;\\n        this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\\n      });\\n    }\\n  \\n    override showStartConnection(state: State): boolean {\\n      return this.transitionFrom === state;\\n    }\\n  \\n    override showEndConnection(state: State): boolean {\\n      return this.transitionTo === state;\\n    }\\n  }\",\"import { Arrow } from \\\"../../statemachine/drawingprimitives/Arrow\\\";\\nimport { Point } from \\\"../../statemachine/drawingprimitives/Point\\\";\\nimport { State } from \\\"../../statemachine/state\\\";\\nimport { StatemachineviewComponent } from \\\"../statemachineview.component\\\";\\nimport { DefaultState } from \\\"./defaultstate\\\";\\nimport { StateMachineViewState } from \\\"./statemachineviewstate\\\";\\nimport { TransitionToState } from \\\"./transitiontostate\\\";\\nimport { TransitionNewStateEditState } from \\\"./transtionnewstateeditstate\\\";\\n\\nexport class TransitionFromState extends StateMachineViewState {\\n\\n    private transitionFrom: State;\\n    private drawingDestination: Point = Point.zero;\\n  \\n    constructor(statemachineviewComponent: StatemachineviewComponent, transitionFrom: State) {\\n      super(statemachineviewComponent);\\n      this.transitionFrom = transitionFrom;\\n    }\\n  \\n    override onMouseUp(event: MouseEvent): void {\\n      const newState = this.statemachineviewComponent.statemachineService.addState(this.drawingDestination.x, this.drawingDestination.y);\\n      const transitionState = new TransitionNewStateEditState(this.statemachineviewComponent, this.transitionFrom, newState);\\n      this.statemachineviewComponent.changeState(transitionState);\\n    }\\n  \\n    override onEntireCircleMouseDown(event: MouseEvent, state: State): void {\\n      const boundary = this.boundary;\\n      this.drawingDestination.x = event.clientX - boundary.left;\\n      this.drawingDestination.y = event.clientY - boundary.top;\\n    }\\n  \\n    override onCircleEnter(event: MouseEvent, state: State): void {\\n      const transitionToState = new TransitionToState(this.statemachineviewComponent, this.transitionFrom, state);\\n      this.changeState(transitionToState);\\n    }\\n  \\n    override onEntireCircleMouseUp(event: MouseEvent, state: State): void {\\n      this.statemachineviewComponent.changeState(new DefaultState(this.statemachineviewComponent));\\n    }\\n  \\n    override onMouseMove(event: MouseEvent): void {\\n      const boundary = this.boundary;\\n      this.drawingDestination.x = event.clientX - boundary.left;\\n      this.drawingDestination.y = event.clientY - boundary.top;\\n    }\\n  \\n    override drawingTransitionOrigin(): Point {\\n      return this.transitionFrom.origin;\\n    }\\n  \\n    override drawingTransitionDestination(): Point {\\n      return this.drawingDestination.moveToPoint(this.transitionFrom.origin, Arrow.transition.width * 2);\\n    }\\n  \\n    override showStartConnection(state: State): boolean {\\n      return this.transitionFrom === state;\\n    }\\n  \\n    override showDrawingTransition(): boolean {\\n      return true;\\n    }\\n  }\",\"import {StateMachineViewState} from \\\"./statemachineviewstate\\\";\\nimport {Transition} from \\\"../../statemachine/stateconnections/Transition\\\";\\nimport {StatemachineviewComponent} from \\\"../statemachineview.component\\\";\\nimport {DefaultState} from \\\"./defaultstate\\\";\\nimport {Point} from \\\"../../statemachine/drawingprimitives/Point\\\";\\n\\nexport class MoveTransitionState extends StateMachineViewState {\\n\\n    private transition: Transition\\n\\n    constructor(statemachineviewComponent: StatemachineviewComponent, transition: Transition) {\\n        super(statemachineviewComponent);\\n        this.transition = transition;\\n    }\\n\\n    override onMouseMove(event: MouseEvent) {\\n        const svgElement = this.statemachineviewComponent.svgFieldElementRef.nativeElement;\\n        const svgRect = svgElement.getBoundingClientRect();\\n        const newX = event.clientX - svgRect.left;\\n        const newY = event.clientY - svgRect.top;\\n        this.transition.centerPoint = new Point(newX, newY);\\n    }\\n\\n    override onMouseUp(event: MouseEvent) {\\n        const defaultState = new DefaultState(this.statemachineviewComponent);\\n        this.statemachineviewComponent.changeState(defaultState);\\n    }\\n\\n    override onAdjustableCircleMouseUp(event: MouseEvent, transition: Transition) {\\n        const defaultState = new DefaultState(this.statemachineviewComponent);\\n        this.statemachineviewComponent.changeState(defaultState);\\n    }\\n}\",\"import { State } from \\\"../../statemachine/state\\\";\\nimport { MoveNodeState } from \\\"./movenodestate\\\";\\nimport { StateMachineViewState } from \\\"./statemachineviewstate\\\";\\nimport { TransitionFromState } from \\\"./transitionfromstate\\\";\\nimport {Transition} from \\\"../../statemachine/stateconnections/Transition\\\";\\nimport {MoveTransitionState} from \\\"./movetransitionstate\\\";\\n\\nexport class DefaultState extends StateMachineViewState {\\n  \\n    override onInnerCircleMouseDown(event: MouseEvent, state: State): void {\\n      state.innerCircleHovered = true;\\n      const moveNodeState = new MoveNodeState(this.statemachineviewComponent, state);\\n      this.statemachineviewComponent.changeState(moveNodeState);\\n    }\\n  \\n    override onOuterCircleMouseDown(event: MouseEvent, state: State): void {\\n      const transitionState = new TransitionFromState(this.statemachineviewComponent, state);\\n      this.statemachineviewComponent.changeState(transitionState);\\n    }\\n  \\n    override onInnerCircleEnter(event: MouseEvent, state: State): void {\\n      this.statemachineviewComponent.zone.run(() => state.innerCircleHovered = true);\\n    }\\n  \\n    override onInnerCircleLeave(event: MouseEvent, state: State): void {\\n      this.statemachineviewComponent.zone.run(() => state.innerCircleHovered = false);\\n    }\\n  \\n    override onOuterCircleEnter(event: MouseEvent, state: State): void {\\n      this.statemachineviewComponent.zone.run(() => state.outerCircleHovered = true);\\n    }\\n  \\n    override onOuterCircleLeave(event: MouseEvent, state: State): void {\\n      this.statemachineviewComponent.zone.run(() => state.outerCircleHovered = false);\\n    }\\n\\n    override onAdjustableCircleMouseDown(event: MouseEvent, transition: Transition) {\\n        const moveTransitionState = new MoveTransitionState(this.statemachineviewComponent, transition);\\n        this.statemachineviewComponent.changeState(moveTransitionState);\\n    }\\n}\",\"// Angular imports\\nimport { Component, ElementRef, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { MatDialog } from '@angular/material/dialog';\\n// Service imports\\nimport { StatemachineService } from '../statemachine/statemachine.service';\\n// Model and utility imports\\nimport { Arrow } from '../statemachine/drawingprimitives/Arrow';\\nimport { State } from '../statemachine/state';\\nimport { Point } from '../statemachine/drawingprimitives/Point';\\nimport { StateMachineViewState } from './interactionstate/statemachineviewstate';\\nimport { DefaultState } from './interactionstate/defaultstate';\\nimport { Transition } from '../statemachine/stateconnections/Transition';\\n\\n@Component({\\n  selector: 'app-statemachineview',\\n  standalone: true,\\n  imports: [ CommonModule ],\\n  templateUrl: './statemachineview.component.html',\\n  styleUrl: './statemachineview.component.scss'\\n})\\nexport class StatemachineviewComponent implements OnInit, OnDestroy {\\n\\n  START_TRANSITION_ARROW_LENGTH: number = 55;\\n  ARROW_LENGTH: number = 5;\\n  @ViewChild('svgField') svgFieldElementRef!: ElementRef;\\n\\n  constructor(\\n    public statemachineService: StatemachineService, \\n    public dialog: MatDialog,\\n    public zone: NgZone,\\n  ) {}\\n\\n  private mouseMoveListener: any;\\n  private mouseUpListener: any;\\n  private readonly circleRadius = State.circleRadius;\\n\\n  get outerCircleRadius(): number {\\n    return this.circleRadius + 15;\\n  }\\n\\n  ngOnInit() {\\n    this.addEventListeners();\\n  }\\n\\n  ngOnDestroy() {\\n    this.removeEventListeners();\\n  }\\n\\n  onRightClick(event: MouseEvent) {\\n    event.preventDefault()\\n  }\\n\\n  private addEventListeners() {\\n    this.mouseMoveListener = this.onMouseMove.bind(this);\\n    document.addEventListener('mousemove', this.mouseMoveListener);\\n    this.mouseUpListener = this.onMouseUp.bind(this);\\n    document.addEventListener('mouseup', this.mouseUpListener);\\n  }\\n\\n  private removeEventListeners() {\\n    document.removeEventListener('mousemove', this.mouseMoveListener);\\n    document.removeEventListener('mouseup', this.mouseUpListener);\\n  }\\n\\n  private onMouseMove(event: MouseEvent) {\\n    this.stateMachineViewState.onMouseMove(event);\\n  }\\n\\n  private onMouseUp(event: MouseEvent) {\\n    this.stateMachineViewState.onMouseUp(event);\\n  }\\n\\n  protected onInnerCircleMouseDown(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onInnerCircleMouseDown(event, state);\\n  }\\n\\n  protected onInnerCircleMouseUp(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onInnerCircleMouseUp(event, state);\\n  }\\n\\n  protected onOuterCircleMouseDown(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onOuterCircleMouseDown(event, state);\\n  }\\n\\n  protected onOuterCircleMouseUp(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onOuterCircleMouseUp(event, state);\\n  }\\n\\n  protected onEntireCircleMouseDown(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onEntireCircleMouseDown(event, state);\\n  }\\n\\n  protected onEntireCircleMouseUp(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onEntireCircleMouseUp(event, state);\\n  }\\n\\n  protected onCircleEnter(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onCircleEnter(event, state);\\n  }\\n\\n  protected onCircleLeave(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onCircleLeave(event, state);\\n  }\\n\\n  protected onInnerCircleEnter(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onInnerCircleEnter(event, state);\\n  }\\n\\n  protected onInnerCircleLeave(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onInnerCircleLeave(event, state);\\n  }\\n\\n  protected onOuterCircleEnter(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onOuterCircleEnter(event, state);\\n  }\\n\\n  protected onOuterCircleLeave(event: MouseEvent, state: State): void {\\n    this.stateMachineViewState.onOuterCircleLeave(event, state);\\n  }\\n\\n  protected onAdjustableCircleMouseDown(event: MouseEvent, transition: Transition): void {\\n    this.stateMachineViewState.onAdjustableCircleMouseDown(event, transition);\\n  }\\n\\n  protected onAdjustableCircleMouseUp(event: MouseEvent, transition: Transition): void {\\n    this.stateMachineViewState.onAdjustableCircleMouseUp(event, transition);\\n  }\\n\\n  /// Returns true, if the transition from the given state is currently being drawn.\\n  protected showStartConnection(state: State): boolean {\\n    return this.stateMachineViewState.showStartConnection(state);\\n  }\\n\\n  /// Returns true, if the transition to the given state is currently being drawn.\\n  protected showEndConnection(state: State): boolean {\\n    return this.stateMachineViewState.showEndConnection(state);\\n  }\\n\\n  protected showDrawingTransition(): boolean {\\n    return this.stateMachineViewState.showDrawingTransition();\\n  }\\n\\n  protected drawingTransitionOrigin(): Point {\\n    return this.stateMachineViewState.drawingTransitionOrigin();\\n  }\\n\\n  protected drawingTransitionDestination(): Point {\\n    return this.stateMachineViewState.drawingTransitionDestination();\\n  }\\n\\n  get arrow(): Arrow {\\n    return Arrow.transition;\\n  }\\n\\n  get transitions(): Transition[] {\\n    return this.statemachineService.transitions;\\n  }\\n  \\n  editTransition(transition: Transition, event: MouseEvent): void {\\n    event.preventDefault();\\n    const source = transition.source;\\n    const destination = transition.destination;\\n    const dialogRef = this.statemachineService.openTransitionEditDialog(source, destination, this.dialog);\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result) {\\n        transition.delete();\\n      }\\n    });\\n  }\\n\\n  openStateEditDialog(state: State, event: MouseEvent): void {\\n    event.preventDefault();\\n    this.statemachineService.openStateEditDialog(state, this.dialog);\\n  }\\n\\n  drawState(event: MouseEvent) {\\n    const x = (event.clientX - (event.target as SVGElement).getBoundingClientRect().left);\\n    const y = (event.clientY - (event.target as SVGElement).getBoundingClientRect().top);\\n    this.statemachineService.addState(x, y);\\n  }\\n\\n  getStates(): State[] {\\n    return this.statemachineService.states;\\n  }\\n  \\n  isFinalState(state: State): boolean {\\n    return this.statemachineService.isFinalState(state);\\n  }\\n\\n  isStartState(state: State): boolean {\\n    return this.statemachineService.isStartState(state);\\n  }\\n\\n  isActiveState(state: State): boolean {\\n    return this.statemachineService.isActiveState(state);\\n  }\\n\\n  get showDeterministicStates(): boolean {\\n    return this.statemachineService.showDeterministicStates;\\n  }\\n\\n  public stateMachineViewState: StateMachineViewState = new DefaultState(this);\\n\\n  changeState(state: StateMachineViewState) {\\n    this.stateMachineViewState = state;\\n  }\\n}\",\"<svg id=\\\"svg-field\\\" #svgField>\\n\\n    <marker\\n    id=\\\"startStateArrowHead\\\"\\n    markerWidth=\\\"10\\\"\\n    markerHeight=\\\"7\\\"\\n    refX=\\\"6\\\"\\n    refY=\\\"2.5\\\"\\n    orient=\\\"auto\\\"\\n    fill=\\\"black\\\"\\n    >\\n    <polygon points=\\\"0 0, 7.5 2.5, 0 5\\\" />\\n    </marker>\\n\\n    <!-- Responds to double-click events on empty canvas areas -->\\n    <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"transparent\\\" (dblclick)=\\\"drawState($event)\\\"></rect>\\n\\n    <!-- Draw straight arrow from one point to another if a transition is being drawn -->\\n    <line\\n    *ngIf=\\\"showDrawingTransition()\\\"\\n    [attr.x1]=\\\"drawingTransitionOrigin().x\\\"\\n    [attr.y1]=\\\"drawingTransitionOrigin().y\\\"\\n    [attr.x2]=\\\"drawingTransitionDestination().x\\\"\\n    [attr.y2]=\\\"drawingTransitionDestination().y\\\"\\n    marker-end=\\\"url(#arrowhead)\\\"\\n    stroke=\\\"black\\\"\\n    style=\\\"stroke-width: 2px;\\\"\\n    ></line>\\n\\n    <marker\\n            id=\\\"arrowhead\\\"\\n            [attr.markerWidth]=\\\"arrow.width\\\"\\n            [attr.markerHeight]=\\\"arrow.height\\\"\\n            [attr.refX]=\\\"arrow.refX\\\"\\n            [attr.refY]=\\\"arrow.refY\\\"\\n            orient=\\\"auto\\\"\\n            fill=\\\"black\\\"\\n            markerUnits=\\\"userSpaceOnUse\\\"\\n    >\\n        <polygon [attr.points]=\\\"arrow.path()\\\" />\\n    </marker>\\n\\n    <g *ngFor=\\\"let state of getStates()\\\">\\n        <circle\\n        *ngIf=\\\"(!state.isDeterministic() && showDeterministicStates) || state.highlight\\\"\\n        [ngClass]=\\\"{\\n            'deterministic': !state.isDeterministic() && showDeterministicStates,\\n            'highlightState': state.highlight\\n          }\\\"\\n        [attr.r]=\\\"outerCircleRadius\\\"\\n        [attr.cx]=\\\"state.origin.x\\\"\\n        [attr.cy]=\\\"state.origin.y\\\"\\n        />\\n\\n        <g\\n        (mouseup)=\\\"onEntireCircleMouseUp($event, state)\\\"\\n        (mousedown)=\\\"onEntireCircleMouseDown($event, state)\\\"\\n        (mouseenter)=\\\"onCircleEnter($event, state)\\\"\\n        (mouseleave)=\\\"onCircleLeave($event, state)\\\"\\n        >\\n            <g\\n            [ngClass]=\\\"{\\n                outerCircle: true,\\n                isActive: isActiveState(state),\\n                startConnection: showStartConnection(state) || state.outerCircleHovered,\\n                endConnection: showEndConnection(state)\\n            }\\\"\\n            (mouseup)=\\\"onOuterCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onOuterCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onOuterCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onOuterCircleLeave($event, state)\\\"\\n            >\\n                <circle\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\"\\n                [attr.r]=\\\"state.r\\\">\\n                </circle>\\n\\n                <circle\\n                *ngIf=\\\"isFinalState(state)\\\"\\n                [attr.r]=\\\"state.r - 5\\\"\\n                [attr.cx]=\\\"state.x\\\"\\n                [attr.cy]=\\\"state.y\\\">\\n                </circle>\\n            </g>\\n\\n            <circle\\n            [ngClass]=\\\"{\\n                innerCircle: true,\\n                isActive: isActiveState(state),\\n                endConnection: showEndConnection(state) || state.innerCircleHovered\\n            }\\\"\\n            [attr.cx]=\\\"state.x\\\"\\n            [attr.cy]=\\\"state.y\\\"\\n            [attr.r]=\\\"state.r * 0.5\\\"\\n            (mouseup)=\\\"onInnerCircleMouseUp($event, state)\\\"\\n            (mousedown)=\\\"onInnerCircleMouseDown($event, state)\\\"\\n            (mouseenter)=\\\"onInnerCircleEnter($event, state)\\\"\\n            (mouseleave)=\\\"onInnerCircleLeave($event, state)\\\"\\n            (contextmenu)=\\\"openStateEditDialog(state, $event)\\\"\\n            >\\n            </circle>\\n        </g>\\n\\n        <text\\n        text-anchor=\\\"middle\\\"\\n        dominant-baseline=\\\"middle\\\"\\n        [attr.x]=\\\"state.x\\\"\\n        [attr.y]=\\\"state.y\\\"\\n        >\\n        {{ state.name }}\\n        </text>\\n\\n        <line\\n        *ngIf=\\\"isStartState(state)\\\"\\n        [attr.x1]=\\\"state.origin.x - state.r - START_TRANSITION_ARROW_LENGTH\\\"\\n        [attr.x2]=\\\"state.origin.x - state.r - ARROW_LENGTH\\\"\\n        [attr.y1]=\\\"state.origin.y\\\"\\n        [attr.y2]=\\\"state.origin.y\\\"\\n        marker-end=\\\"url(#startStateArrowHead)\\\"\\n        ></line>\\n    </g>\\n\\n    <g *ngFor=\\\"let transition of transitions; let i = index\\\">\\n\\n        <path\\n            [attr.d]=\\\"transition.arrow()\\\"\\n            fill=\\\"black\\\"\\n        ></path>\\n\\n        <path\\n            [attr.d]=\\\"transition.path()\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path\\n            class=\\\"invisiblePathClickable\\\"\\n            fill=\\\"none\\\"\\n            stroke=\\\"black\\\"\\n            stroke-width=\\\"2\\\"\\n            [attr.d]=\\\"transition.path()\\\"\\n            [id]=\\\"'transition'+ i\\\"\\n            (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n            (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n            (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <path *ngIf=\\\"transition.highlight\\\"\\n              class=\\\"highlightPath\\\"\\n          fill=\\\"none\\\"\\n          [attr.d]=\\\"transition.path()\\\"\\n          [id]=\\\"'transition'+ i\\\"\\n          (contextmenu)=\\\"editTransition(transition, $event)\\\"\\n          (mousedown)=\\\"onAdjustableCircleMouseDown($event, transition)\\\"\\n          (mouseup)=\\\"onAdjustableCircleMouseUp($event, transition)\\\"\\n        ></path>\\n\\n        <text\\n            *ngFor=\\\"let label of transition.labels(); let j = index\\\"\\n            [attr.x]=\\\"label.x\\\"\\n            [attr.y]=\\\"label.y\\\"\\n            [attr.font-family]=\\\"transition.fontFamily\\\"\\n            [attr.font-size]=\\\"transition.fontSize\\\"\\n            dominant-baseline=\\\"middle\\\"\\n            text-anchor=\\\"start\\\"\\n            >\\n            {{ label.text }}\\n        </text>\\n    </g>\\n</svg>\\n\\n\\n\\n\",\"import { Component } from '@angular/core';\\nimport { StatemachineviewComponent } from \\\"./statemachineview/statemachineview.component\\\";\\n\\n@Component({\\n    selector: 'app-core',\\n    standalone: true,\\n    templateUrl: './core.component.html',\\n    styleUrl: './core.component.scss',\\n    imports: [StatemachineviewComponent]\\n})\\nexport class CoreComponent {\\n\\n}\\n\",\"<app-statemachineview class=\\\"graph\\\"></app-statemachineview>\",\"import { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-footer',\\n  standalone: true,\\n  imports: [],\\n  templateUrl: './footer.component.html',\\n  styleUrl: './footer.component.scss'\\n})\\nexport class FooterComponent {\\n  getCurrentYear(startYear: number): string {\\n    const currentYear = new Date().getFullYear();\\n    return startYear == currentYear\\n      ? currentYear + ''\\n      : startYear + ' - ' + currentYear;\\n  }\\n}\\n\",\"<footer>\\n    <span\\n    ><span>© {{ getCurrentYear(2023) }}</span>\\n        <span class=\\\"wh-text\\\">Westfälische Hochschule</span> Gelsenkirchen</span\\n    >\\n  <span class=\\\"infoLinks\\\">\\n        <a href=\\\"https://www.w-hs.de/service/impressum/\\\" target=\\\"_blank\\\"\\n        >Impressum</a\\n        >\\n        <a href=\\\"https://pi-lab2.w-hs.de/THI/Datenschutz.html\\\" target=\\\"_blank\\\"\\n        >Datenschutz</a\\n        >\\n        <a\\n          href=\\\"https://pi-lab2.w-hs.de/THI/Barrierefreiheit.html\\\"\\n          target=\\\"_blank\\\"\\n        >Barrierefreiheit</a\\n        >\\n    </span>\\n</footer>\\n\",\"import { Component, Input } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-header',\\n  standalone: true,\\n  imports: [],\\n  templateUrl: './header.component.html',\\n  styleUrl: './header.component.scss'\\n})\\nexport class HeaderComponent {\\n  @Input() title: string = \\\"\\\";\\n}\\n\",\"<header>\\n    <span id=\\\"appTitle\\\">{{ title }}</span>\\n    <a href=\\\"/THI\\\">\\n      <img\\n        src=\\\"assets/THIOnlineLogo_BoxOffen_small.png\\\"\\n        alt=\\\"THIOnline-Logo\\\"\\n        id=\\\"THILogo\\\"\\n        style=\\\"\\n                  position: absolute;\\n                  right: 30px;\\n                  height: 50px;\\n                  width: auto;\\n                  float: right;\\n                  top: 15px;\\n              \\\"\\n        height=\\\"77\\\" width=\\\"100\\\"/>\\n    </a>\\n  </header>\\n  \",\"import { Component, Input, OnInit } from '@angular/core';\\nimport { StatemachineService } from '../statemachine/statemachine.service';\\nimport { CommonModule } from '@angular/common';\\n\\n@Component({\\n  selector: 'app-input',\\n  standalone: true,\\n  imports: [CommonModule],\\n  templateUrl: './input.component.html',\\n  styleUrl: './input.component.scss'\\n})\\nexport class InputComponent implements OnInit {\\n\\n  @Input() title: string = '';\\n\\n  constructor(public service: StatemachineService) {}\\n\\n  ngOnInit(): void {\\n    this.setContent('');\\n  }\\n\\n  setContent(tapecontent: string) {\\n    this.service.inputChanged(tapecontent);\\n  }\\n\\n  updateContent(event: any) {\\n    this.setContent(event.target.value);\\n  }\\n\\n  isReady(): boolean {\\n    return this.service.isStartStateDefined();\\n  }\\n\\n  isAccepting(): boolean {\\n    return this.service.isAccepting()!;\\n  }\\n}\\n\",\"<span>{{ title }}:</span>\\n<input\\n  type=\\\"text\\\"\\n  autocomplete=\\\"off\\\"\\n  [ngClass]=\\\"{\\n    tapeInput: true,\\n    accepting: isReady() && isAccepting(),\\n    notAccepting: isReady() && !isAccepting() \\n  }\\\"\\n  (input)=\\\"updateContent($event)\\\"\\n/>\\n\",\"import {Component, Input, OnInit} from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { StatemachineService } from '../statemachine/statemachine.service';\\nimport { MatButtonModule } from '@angular/material/button';\\nimport { MatIconModule } from '@angular/material/icon';\\nimport { MatMenuModule } from '@angular/material/menu';\\n// Environment wird von der Anwendung bereitgestellt\\nimport {HttpClient} from \\\"@angular/common/http\\\";\\nimport {firstValueFrom} from \\\"rxjs\\\";\\n\\n@Component({\\n  selector: 'app-menu',\\n  standalone: true,\\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatMenuModule],\\n  templateUrl: './menu.component.html',\\n  styleUrl: './menu.component.scss'\\n})\\nexport class MenuComponent implements OnInit {\\n\\n  @Input() baseURL!: string;\\n\\n  public vorlesungsbeispiele: any[] = [];\\n  public uebungsaufgaben: any[] = [];\\n\\n  constructor(\\n      public service: StatemachineService,\\n      private http: HttpClient,\\n  ) {\\n\\n  }\\n\\n  ngOnInit() {\\n    this.loadConfig()\\n  }\\n\\n  createNewInstance() {\\n    this.service.createNewInstance();\\n  }\\n\\n  loadFromBrowserCache() {\\n    this.service.loadFromBrowserCache();\\n  }\\n\\n  saveToBrowserCache() {\\n    this.service.saveToBrowserCache();\\n  }\\n\\n  createInstanceFromJSON(configuration: any) {\\n    this.service.createInstanceFromJSON(configuration);\\n  }\\n\\n  saveToLocalStorage() {\\n    this.service.saveToLocalStorage();\\n  }\\n\\n  openHelpDialog() {\\n    this.service.openHelpDialog();\\n  }\\n\\n  onFileUpload(e: Event) {\\n    const target = e.target as HTMLInputElement;\\n    const files = target.files as FileList;\\n    const file = files[0];\\n    const reader = new FileReader();\\n    reader.onload = (e) => {\\n      const content = reader.result as string;\\n      this.createInstanceFromJSON(JSON.parse(content));\\n    };\\n    reader.readAsText(file);\\n    target.value = '';\\n  }\\n\\n  loadConfig(): void {\\n    const url = `assets/config.json`;\\n    this.http.get<any>(url).subscribe({\\n      next: (config) => {\\n        // Hier kann man dann loadTasks etc. aufrufen\\n        this.loadTasks('Vorlesungsbeispiele', this.vorlesungsbeispiele, config);\\n        this.loadTasks('Uebungsaufgaben', this.uebungsaufgaben, config);\\n      },\\n      error: (error) => {\\n        console.error('Failed to load config:', error);\\n      }\\n    });\\n  }\\n\\n  async loadTasks(type: string, targetArray: any[], config: any): Promise<void> {\\n    const tasks = config[type];\\n    if (tasks && Array.isArray(tasks)) {\\n      for (const [index, task] of tasks.entries()) {\\n        const url = `assets/${type}/${task.filename}.json`;\\n        try {\\n          const data = await firstValueFrom(this.http.get(url));\\n          targetArray[index] = data;\\n        } catch (error) {\\n          console.error(`Failed to load ${type}/${task.filename}:`, error);\\n        }\\n      }\\n    } else {\\n      console.warn(`No tasks found for type: ${type}`);\\n    }\\n  }\\n\\n  async fetchJSON(type: string, name: string) {\\n    const response = await fetch(\\n      (this.baseURL || '') + '/assets/' + type + '/' + name + '.json'\\n    );\\n    const json = await response.json();\\n    return json;\\n  }\\n}\\n\",\"<button mat-icon-button [matMenuTriggerFor]=\\\"settingsMenu\\\" aria-label=\\\"Menü öffnen\\\">\\n    <mat-icon>menu</mat-icon>\\n</button>\\n\\n<mat-menu #settingsMenu class=\\\"myMenuItem\\\">\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"createNewInstance()\\\">\\n        <mat-icon>fiber_new</mat-icon>Neue Instanz\\n    </button>\\n\\n    <label for=\\\"inputTag\\\">\\n        <menu mat-menu-item class=\\\"myMenuItem\\\">\\n            <mat-icon>file_upload</mat-icon>\\n            Laden aus Datei\\n            <input (change)=\\\"onFileUpload($event)\\\" id=\\\"inputTag\\\" type=\\\"file\\\"/>\\n        </menu>\\n    </label>\\n\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"saveToLocalStorage()\\\">\\n        <mat-icon>file_download</mat-icon>Speichern in Datei\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Uebungsaufgaben\\\">\\n        <mat-icon>open_in_browser</mat-icon>Übungsaufgaben laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" [matMenuTriggerFor]=\\\"Vorlesungsbeispiele\\\">\\n        <mat-icon>open_in_browser</mat-icon>Vorlesungsbeispiele laden\\n    </button>\\n\\n    <button mat-menu-item class=\\\"myMenuItem\\\" (click)=\\\"openHelpDialog()\\\">\\n        <mat-icon>help</mat-icon>Hilfe\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Vorlesungsbeispiele>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of vorlesungsbeispiele\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\\n<mat-menu #Uebungsaufgaben>\\n    <button mat-menu-item class=\\\"myMenuItem\\\" *ngFor=\\\"let aufgabe of uebungsaufgaben\\\" (click)=\\\"createInstanceFromJSON(aufgabe)\\\">\\n        {{ aufgabe.title }}\\n    </button>\\n</mat-menu>\\n\",\"import { Component, ElementRef, OnInit, QueryList, ViewChildren } from '@angular/core';\\nimport { MatDialogRef } from '@angular/material/dialog';\\nimport { MatIcon } from '@angular/material/icon';\\nimport { MatTab, MatTabBody, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLink, MatTabNav } from '@angular/material/tabs';\\nimport { MatDialogClose } from '@angular/material/dialog';\\n\\n@Component({\\n  selector: 'app-help-dialog',\\n  standalone: true,\\n  imports: [ MatIcon, MatTabGroup, MatTab, MatTabBody, MatTabHeader, MatTabLabel, MatTabNav, MatTabLink , MatDialogClose],\\n  templateUrl: './help-dialog.component.html',\\n  styleUrl: './help-dialog.component.scss'\\n})\\nexport class HelpDialogComponent {\\n  constructor() {}\\n\\n  text: String = '';\\n\\n  @ViewChildren('videoRef') videos!: QueryList<ElementRef>;\\n\\n  ngOnInit(): void {\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.playVideoAtIndex(0);\\n  }\\n\\n  onTabChange(index: number): void {\\n    this.playVideoAtIndex(index);\\n  }\\n\\n  private playVideoAtIndex(index: number): void {\\n    this.videos.forEach((vid, idx) => {\\n      const videoElement = vid.nativeElement as HTMLVideoElement;\\n      if (idx === index) {\\n        videoElement.play();\\n      } else {\\n        videoElement.pause();\\n        videoElement.currentTime = 0;\\n      }\\n    });\\n  }\\n}\\n\",\"<button class=\\\"button-close\\\" mat-button [mat-dialog-close]>\\n    <mat-icon>close</mat-icon>\\n</button>\\n<h1 mat-dialog-title>Bedienungsanweisungen</h1>\\n    \\n<mat-tab-group class=\\\"scrollable-tab-group\\\"  (selectedIndexChange)=\\\"onTabChange($event)\\\">\\n    <mat-tab label=\\\"Zustand hinzufügen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Neue Zustände können per Doppelklick auf die Arbeitsfläche\\n                    hinzugefügt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand hinzufügen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterstützt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p> Um Zustände zu ändern/löschen, muss ein Rechtsklick auf\\n                    die Mitte des Zustands ausgeführt werden.\\n                    Anschließend kann der Zustand in einem Dialogmenü verändert oder\\n                    gelöscht werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterstützt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Zustand verschieben\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zustände zu verschieben muss ein Linksklick auf die Mitte des Zustands \\n                    gehalten werden und zur gewünschten Position gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Zustand verschieben.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterstützt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Übergang hinzufügen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Zustände zu verbinden, muss erstmal mit einem Linksklick vom Rand des Ausgangszustands eine\\n                    Linie zum gewünschten Zielzustand gezogen werden.\\n                    Anschließend muss ein Eingabesymbol, Schreibsymbol und die Bewegung eingegeben und bestätigt werden. </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Übergang hinzufügen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterstützt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Übergang bearbeiten\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Um Übergänge zu bearbeiten, muss ein Rechtsklick auf den jeweiligen Übergang ausgeführt werden.\\n                    Anschließend kann der Übergang in einem Dialogmenü bearbeitet werden.\\n                </p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Übergang bearbeiten.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterstützt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Übergang + Zustand erstellen\\\">\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"video-description\\\">\\n                <p>Es ist möglich, gleichzeitig einen Übergang und einen Zustand zu erstellen.\\n                    Dafür muss mit einem Linksklick vom Rand des Ausgangszustandes eine\\n                    Linie auf eine leere Stelle der Arbeitsfläche gezogen werden.</p>\\n            </div>\\n            <video #videoRef loop muted>\\n                <source src=\\\"../../../assets/Videos/Übergang mit Zustand erstellen.mp4\\\" type=\\\"video/mp4\\\">\\n                Ihr Browser unterstützt kein Video.\\n            </video>\\n        </div>\\n    </mat-tab>\\n</mat-tab-group>\\n\\n\\n<!-- <h2>Allgemein</h2>\\n<ul>\\n    <li>Zustand hinzufügen</li>\\n    <ul>\\n        <li>\\n            Neue Zustände können per Doppelklick auf die Arbeitsfläche\\n            hinzugefügt werden.\\n        </li>\\n    </ul>\\n\\n    <li>Zustände verbinden</li>\\n    <ul>\\n        <li>\\n            Um Zustände zu verbinden, muss vom Rand des Ausgangszustandes eine\\n            Linie zum gewünschten Zielzustand gezogen werden.\\n        </li>\\n        <li>\\n            Es ist auch möglich, anstatt einen Zielzustand eine Stelle auf der\\n            Arbeitsfläche auszuwählen. <br />\\n            Dadurch wird der neue Zielzustand automatisch erstellt.\\n        </li>\\n    </ul>\\n    <li>Elemente ändern/löschen</li>\\n    <ul>\\n        <li>\\n            Um Elemente zu ändern/löschen, muss ein Doppelklick auf das\\n            entsprechende Element ausgeführt werden. <br />\\n            Anschließend kann das Element in einem Dialogmenü verändert oder\\n            gelöscht werden.\\n        </li>\\n    </ul>\\n    <li>Weitere Aktionen</li>\\n    <ul>\\n        <li>\\n            Durch Klicken des Menübuttons (oben links) sind einige weitere\\n            Aktionen möglich,<br />\\n            wie z.B. abspeichern und laden eines Automaten und\\n            Übungsaufgaben/Beispielaufgaben laden.\\n        </li>\\n    </ul>\\n</ul>\\n\\n<h2>Validierung</h2>\\n<ul>\\n    <li>Wörter validieren</li>\\n    <ul>\\n        <li>\\n            Um zu prüfen, ob ein bestimmtes Wort vom Automaten akzeptiert wird,\\n            muss es in das Worteingabefeld eingegeben werden.<br />\\n            Falls die Umrandung das Eingabefeldes grün ist, wird der Automat\\n            akzeptiert, bei Rot wird er nicht akzeptiert.\\n        </li>\\n        <li>\\n            Es ist auch möglich, mehrere \\\"akzeptierende\\\" und \\\"nicht\\n            akzeptierende\\\" Wörter gleichzeitig zu testen. <br />\\n            Die Wörter können durch Betätigen des entsprechenden \\\"+\\\"-Buttons\\n            hinzugefügt und anschließend bearbeitet werden.\\n        </li>\\n    </ul>\\n    <li>Wort Schritt für Schritt testen</li>\\n    <ul>\\n        <li>\\n            Mittels der zwei Pfeilbuttons neben dem Worteingabefeld kann das\\n            aktuelle Wort Schritt für Schritt durchgeschaltet werden. <br />\\n            Die Zustände des Automaten werden daraufhin farblich markiert{{\\n                text\\n            }}.\\n        </li>\\n    </ul>\\n</ul> -->\\n\",\"import { Component } from '@angular/core';\\nimport { StatemachineService } from '../statemachine/statemachine.service';\\nimport { MatIconModule } from '@angular/material/icon';\\nimport { MatButtonModule } from '@angular/material/button';\\n\\n@Component({\\n  selector: 'app-testcasebutton',\\n  standalone: true,\\n  imports: [MatIconModule, MatButtonModule],\\n  templateUrl: './testcasebutton.component.html',\\n  styleUrl: './testcasebutton.component.scss'\\n})\\nexport class TestcasebuttonComponent {\\n  constructor(public service: StatemachineService) { }\\n\\n  get testCaseViewIsVisible(): boolean {\\n    return this.service.testCaseViewIsVisible;\\n  }\\n\\n  toggleTestcaseView(): void {\\n    this.service.testCaseViewIsVisible = !this.service.testCaseViewIsVisible;\\n    this.service.testcaseViewToggled?.();\\n  }\\n}\\n\",\"<button mat-icon-button class=\\\"toggleTestcaseView\\\" [class.pressed]=\\\"testCaseViewIsVisible\\\" (click)=\\\"toggleTestcaseView()\\\">\\n    <img src=\\\"assets/testcases.svg\\\" alt=\\\"testcases\\\">\\n</button>\",\"import { Result } from \\\"./Result\\\";\\nimport { State } from \\\"./state\\\";\\nimport { Transition } from \\\"./stateconnections/Transition\\\";\\n\\nexport abstract class StateMachine {\\n\\n    title: string = \\\"New State Machine\\\";\\n\\n    description: string = \\\"\\\";\\n\\n    startState?: State\\n\\n    protected allStates: State[] = [];\\n\\n    finalStates: Set<State> = new Set();\\n\\n    abstract makeState(x: number, y: number, id: number): State;\\n\\n    _input: string = \\\"\\\";\\n\\n    abstract input: string;\\n\\n    getAllStates(): State[] {\\n        return this.allStates;\\n    }\\n\\n    getAllTransitions(): Transition[] {\\n        return this.allStates.flatMap((state) => [...state.transitions]);\\n    }\\n\\n    addState(x: number, y: number): State {\\n        const newState = this.makeState(x, y, this.makeId());\\n        if (this.startState == undefined) { this.startState = newState; }\\n        this.allStates.push(newState);\\n        return newState;\\n    }\\n\\n    private makeId(): number {\\n        let id = 0;\\n        while (this.allStates.some((state) => state.id == id)) {\\n            id++;\\n        }\\n        return id;\\n    }\\n\\n    deleteState(state: State): void {\\n\\n        // Remove start if state is start state.\\n        if (this.startState == state) {\\n            this.startState = undefined;\\n        }\\n\\n        // Remove state from final states.\\n        this.finalStates.delete(state);\\n\\n        // Remove transitions where 'state' is the destination state\\n        this.getAllTransitions().forEach((transition) => {\\n            if (transition.destination === state) {\\n                transition.delete();\\n            }\\n        });\\n\\n        let index = this.allStates.findIndex(obj => obj === state);\\n        this.allStates.splice(index, 1);\\n    }\\n\\n    isStartState(state: State): boolean {\\n        return state === this.startState;\\n    }\\n\\n    isFinalState(state: State): boolean {\\n        return this.finalStates.has(state);\\n    }\\n\\n    isDeterministic(): boolean {\\n        return ![...this.getAllStates()].some((state) => !state.isDeterministic());\\n    }\\n\\n    abstract isAcceptingWord(word: string): Result;\\n\\n    abstract activeStates(word: string): Set<State>;\\n\\n    abstract createNewInstance(): StateMachine;\\n  \\n    abstract loadFromBrowserCache(): StateMachine;\\n  \\n    abstract saveToBrowserCache(): void;\\n  \\n    abstract createInstanceFromJSON(configuration: any): StateMachine;\\n  \\n    abstract saveToLocalStorage(): void;\\n}\\n\",\"import { State } from \\\"./state\\\";\\n\\nexport class Result {\\n\\n    activeStates: Set<State>;\\n    isAccepting?: boolean;\\n\\n    constructor(states: State[], isAccepting?: boolean) {\\n        this.activeStates = new Set(states);\\n        this.isAccepting = isAccepting;\\n    }\\n}\",\"import { Point } from \\\"../drawingprimitives/Point\\\";\\nimport { State } from \\\"../state\\\";\\nimport {Transition} from \\\"./Transition\\\";\\n\\nexport abstract class StateConnection {\\n\\n    get source(): State {\\n        return this.transition.source;\\n    }\\n\\n    get destination(): State {\\n        return this.transition.destination;\\n    }\\n\\n    getCenterPoint(): Point | undefined {\\n        return this.transition.absolutCenterPoint();\\n    }\\n\\n    constructor(public transition: Transition) {}\\n\\n    abstract path(): string;\\n\\n    abstract arrow(): string;\\n\\n    abstract calculateRectanglePlacementAbovePath(width: number, height: number): Point;\\n}\",\"import { Point } from './Point';\\nimport { Shape } from './Shape';\\n\\nexport class Line implements Shape {\\n    sourcePoint: Point;\\n    destinationPoint: Point;\\n\\n    constructor(p1: Point, p2: Point) {\\n        this.sourcePoint = p1;\\n        this.destinationPoint = p2;\\n    }\\n\\n    // Gets a control point to draw a bezier curve.\\n    //\\n    // The control point with a specific `distance` to the line.\\n    // The point will be on the left side of the line.\\n    getBezierControlPoint(distance: number): Point {\\n        // calculate the vector from the source point to the destination point\\n        const vecSource = new Point(this.sourcePoint.x, this.sourcePoint.y);\\n        const vecDestination = new Point(\\n            this.destinationPoint.x - this.sourcePoint.x,\\n            this.destinationPoint.y - this.sourcePoint.y\\n        );\\n\\n        // calculate the length of the vector\\n        const vecDestinationLength = this.sourcePoint.distance(\\n            this.destinationPoint\\n        );\\n\\n        // calculate the unit vector in the direction of the destination point\\n        let vecDestinationUnit = Point.zero;\\n\\n        if (vecDestinationLength !== 0) {\\n            vecDestinationUnit = new Point(\\n                vecDestination.x / vecDestinationLength,\\n                vecDestination.y / vecDestinationLength\\n            );\\n        }\\n\\n        // calculate the control point halfway between the source and destination points\\n        const vecStartControl = new Point(\\n            vecSource.x + vecDestination.x / 2,\\n            vecSource.y + vecDestination.y / 2\\n        );\\n\\n        // use the unit vector and the given distance to calculate the final control point\\n        const vecEndControl = new Point(\\n            vecStartControl.x + distance * vecDestinationUnit.y,\\n            vecStartControl.y - distance * vecDestinationUnit.x\\n        );\\n\\n        return vecEndControl;\\n    }\\n\\n    getRectangleCenterPoint(width: number, height: number): Point {\\n        const { x: x1, y: y1 } = this.sourcePoint;\\n        const { x: x2, y: y2 } = this.vector;\\n\\n        const x3 =\\n            this.center.x +\\n            (this.sourcePoint.y < this.destinationPoint.y\\n                ? -width / 2\\n                : width / 2);\\n        const y3 =\\n            this.center.y +\\n            (this.sourcePoint.x < this.destinationPoint.x\\n                ? height / 2\\n                : -height / 2);\\n\\n        const s = (x2 * (y3 - y1) + y2 * (x1 - x3)) / (y2 * y2 + x2 * x2);\\n\\n        const x = this.center.x + s * y2;\\n        const y = this.center.y - s * x2;\\n\\n        return new Point(x, y);\\n    }\\n\\n    get vector(): Point {\\n        return new Point(\\n            this.destinationPoint.x - this.sourcePoint.x,\\n            this.destinationPoint.y - this.sourcePoint.y\\n        );\\n    }\\n\\n    length(): number {\\n        return this.sourcePoint.distance(this.destinationPoint);\\n    }\\n\\n    get center(): Point {\\n        return new Point(\\n            (this.sourcePoint.x + this.destinationPoint.x) / 2,\\n            (this.sourcePoint.y + this.destinationPoint.y) / 2\\n        );\\n    }\\n\\n    set center(newCenter: Point) {\\n        const currentCenter = this.center;\\n        const deltaX = newCenter.x - currentCenter.x;\\n        const deltaY = newCenter.y - currentCenter.y;\\n\\n        this.sourcePoint = new Point(this.sourcePoint.x + deltaX, this.sourcePoint.y + deltaY);\\n        this.destinationPoint = new Point(this.destinationPoint.x + deltaX, this.destinationPoint.y + deltaY);\\n    }\\n\\n    path(): string {\\n        return (\\n            'M' +\\n            this.sourcePoint.x +\\n            ' ' +\\n            this.sourcePoint.y +\\n            ', ' +\\n            this.destinationPoint.x +\\n            ' ' +\\n            this.destinationPoint.y\\n        );\\n    }\\n\\n    isPointAboveLine(point: Point): boolean {\\n        const epsilon = 1e-10;  // Ein sehr kleiner Toleranzwert\\n\\n        // Vektor von start zu end\\n        const lineVector = {\\n            x: this.destinationPoint.x - this.sourcePoint.x,\\n            y: this.destinationPoint.y - this.sourcePoint.y\\n        };\\n\\n        // Vektor von start zum zu testenden Punkt\\n        const pointVector = {\\n            x: point.x - this.sourcePoint.x,\\n            y: point.y - this.sourcePoint.y\\n        };\\n\\n        // Berechnung des Kreuzprodukts\\n        const crossProduct = lineVector.x * pointVector.y - lineVector.y * pointVector.x;\\n\\n        // Wenn das Kreuzprodukt > epsilon ist, liegt der Punkt oberhalb der Linie\\n        if (crossProduct > epsilon) {\\n            return true;\\n        }\\n\\n        // Wenn das Kreuzprodukt < -epsilon ist, liegt der Punkt unterhalb der Linie\\n        if (crossProduct < -epsilon) {\\n            return false;\\n        }\\n\\n        // Wenn das Kreuzprodukt innerhalb der Toleranz liegt, wird der Punkt als auf der Linie betrachtet\\n        return false; // oder true, je nach gewünschtem Verhalten für \\\"auf der Linie\\\"\\n    }\\n}\\n\",\"import { Arrow } from \\\"../drawingprimitives/Arrow\\\";\\nimport { Point } from \\\"../drawingprimitives/Point\\\";\\nimport { State } from \\\"../state\\\";\\nimport { StateConnection } from \\\"./StateConnection\\\";\\nimport {Transition} from \\\"./Transition\\\";\\nimport {Line} from \\\"../drawingprimitives/Line\\\";\\n\\nexport class AdjustableStateConnection extends StateConnection {\\n    private connectionType: ConnectionType;\\n    private controlPoint: Point;\\n    private startEdge: Point;\\n    private endEdge: Point;\\n    private arrowBasePoint: Point;\\n\\n    constructor(transition: Transition, connectionType: ConnectionType = ConnectionType.Unidirectional) {\\n        super(transition);\\n        this.connectionType = connectionType;\\n        this.controlPoint = this.calculateControlPoint();\\n        this.startEdge = this.calculateEdgePoint(this.source.origin, this.controlPoint, State.circleRadius);\\n        this.endEdge = this.calculateEndEdge();\\n        this.arrowBasePoint = this.calculateArrowBasePoint();\\n        this.controlPoint = this.calculateNewControlPoint();\\n    }\\n\\n    private calculateEdgePoint(center: Point, referencePoint: Point, radius: number): Point {\\n        const angle = Math.atan2(referencePoint.y - center.y, referencePoint.x - center.x);\\n        return new Point(\\n            center.x + radius * Math.cos(angle),\\n            center.y + radius * Math.sin(angle)\\n        );\\n    }\\n\\n    private calculateArrowBasePoint(): Point {\\n        const arrow = Arrow.transition;\\n        const endCenter = this.destination.origin;\\n\\n        // Berechne den Winkel vom Zielkreismittelpunkt zum Kontrollpunkt\\n        const angle = Math.atan2(this.controlPoint.y - endCenter.y, this.controlPoint.x - endCenter.x);\\n\\n        // Berechne den Basispunkt des Pfeils\\n        return new Point(\\n            this.endEdge.x + arrow.width * Math.cos(angle),\\n            this.endEdge.y + arrow.width * Math.sin(angle)\\n        );\\n    }\\n\\n    private calculateEndEdge(): Point {\\n        const endCenter = this.destination.origin;\\n\\n        // Berechne den Winkel vom Zielkreismittelpunkt zum Kontrollpunkt\\n        const angle = Math.atan2(this.controlPoint.y - endCenter.y, this.controlPoint.x - endCenter.x);\\n\\n        // Berechne den Endpunkt auf dem Kreisrand\\n        return new Point(\\n            endCenter.x + State.circleRadius * Math.cos(angle),\\n            endCenter.y + State.circleRadius * Math.sin(angle)\\n        );\\n    }\\n\\n    arrow(): string {\\n        const arrow = Arrow.transition;\\n        const dx = this.endEdge.x - this.arrowBasePoint.x;\\n        const dy = this.endEdge.y - this.arrowBasePoint.y;\\n        const angle = Math.atan2(dy, dx);\\n\\n        const lowerLeft = new Point(\\n            this.arrowBasePoint.x + arrow.height / 2 * Math.sin(angle),\\n            this.arrowBasePoint.y - arrow.height / 2 * Math.cos(angle)\\n        );\\n        const upperLeft = new Point(\\n            this.arrowBasePoint.x - arrow.height / 2 * Math.sin(angle),\\n            this.arrowBasePoint.y + arrow.height / 2 * Math.cos(angle)\\n        );\\n\\n        return `M ${this.arrowBasePoint.x} ${this.arrowBasePoint.y} ` +\\n            `L ${lowerLeft.x} ${lowerLeft.y} ` +\\n            `L ${this.endEdge.x} ${this.endEdge.y} ` +\\n            `L ${upperLeft.x} ${upperLeft.y} ` +\\n            `Z`;\\n    }\\n\\n    override path(): string {\\n        return `M${this.startEdge.x},${this.startEdge.y} ` +\\n            `Q${this.controlPoint.x},${this.controlPoint.y} ` +\\n            `${this.arrowBasePoint.x},${this.arrowBasePoint.y}`;\\n    }\\n\\n    override getCenterPoint(): Point {\\n        if (super.getCenterPoint()) {\\n            return super.getCenterPoint()!;\\n        }\\n\\n        const connectionLine = new Line(this.source.origin, this.destination.origin);\\n        return this.connectionType === ConnectionType.Unidirectional\\n            ? connectionLine.center\\n            : connectionLine.getBezierControlPoint(State.circleRadius);\\n    }\\n\\n    private calculateControlPoint(): Point {\\n        const centerPoint = this.getCenterPoint();\\n        return new Point(\\n            2 * centerPoint.x - 0.5 * (this.source.origin.x + this.destination.origin.x),\\n            2 * centerPoint.y - 0.5 * (this.source.origin.y + this.destination.origin.y)\\n        );\\n    }\\n\\n    private calculateNewControlPoint(): Point {\\n        const centerPoint = this.getCenterPoint();\\n        return new Point(\\n            2 * centerPoint.x - 0.5 * (this.startEdge.x + this.arrowBasePoint.x),\\n            2 * centerPoint.y - 0.5 * (this.startEdge.y + this.arrowBasePoint.y)\\n        );\\n    }\\n\\n    override calculateRectanglePlacementAbovePath(width: number, height: number): Point {\\n        const line = new Line(this.startEdge, this.arrowBasePoint);\\n        const centerPoint = this.getCenterPoint();\\n\\n        if (line.isPointAboveLine(centerPoint)) {\\n            line.sourcePoint = this.arrowBasePoint;\\n            line.destinationPoint = this.startEdge;\\n        }\\n\\n        line.center = this.getCenterPoint();\\n        return line.getRectangleCenterPoint(width, height);\\n    }\\n}\\n\\nexport enum ConnectionType {\\n    Unidirectional,\\n    Bidirectional\\n}\",\"import { Point } from \\\"../drawingprimitives/Point\\\";\\nimport { StateConnection } from \\\"./StateConnection\\\";\\n\\nexport class EmptyStateConnection extends StateConnection {\\n    override calculateRectanglePlacementAbovePath(width: number, height: number): Point {\\n        return Point.zero\\n    }\\n    override path(): string {\\n        return \\\"\\\"\\n    }\\n\\n    override getCenterPoint(): Point {\\n        return Point.zero;\\n    }\\n\\n    arrow(): string {\\n        return \\\"\\\";\\n    }\\n}\",\"import { Line } from './Line';\\nimport { Point } from './Point';\\nimport { Shape } from './Shape';\\n\\n// This class represents a Bezier curve.\\nexport class BezierCurve implements Shape {\\n    // These are the three points that define the curve.\\n    p1: Point;\\n    p2: Point;\\n    p3: Point;\\n\\n    // The constructor initializes the points that define the curve.\\n    constructor(p1: Point, p2: Point, p3: Point) {\\n        this.p1 = p1;\\n        this.p2 = p2;\\n        this.p3 = p3;\\n    }\\n\\n    pointSecant(t: number): Line {\\n        // We first compute two intermediate points on the curve.\\n        const p12 = this.lerp(this.p1, this.p2, t);\\n        const p23 = this.lerp(this.p2, this.p3, t);\\n        // We then use these intermediate points to compute the final point on the curve.\\n        return new Line(p12, p23);\\n    }\\n\\n    // This method computes a point on the curve for a given value of \\\"t\\\".\\n    pointOnCurve(t: number): Point {\\n        const secant = this.pointSecant(t);\\n        // We then use these intermediate points to compute the final point on the curve.\\n        return this.lerp(secant.sourcePoint, secant.destinationPoint, t);\\n    }\\n\\n    // This method performs linear interpolation between two points.\\n    lerp(p1: Point, p2: Point, t: number): Point {\\n        // We compute the new x-coordinate by linearly interpolating between the x-coordinates of the two input points.\\n        const x = p1.x + (p2.x - p1.x) * t;\\n        // We do the same for the y-coordinate.\\n        const y = p1.y + (p2.y - p1.y) * t;\\n        // We return a new point with the interpolated coordinates.\\n        return new Point(x, y);\\n    }\\n\\n    path(): string {\\n        return 'M' +\\n            this.p1.x +\\n            ' ' +\\n            this.p1.y +\\n            ' Q' +\\n            this.p2.x +\\n            ' ' +\\n            this.p2.y +\\n            ' ' +\\n            this.p3.x +\\n            ' ' +\\n            this.p3.y\\n    }\\n}\\n\\n// This class represents a Bezier curve.\\nexport class CubicBezierCurve extends BezierCurve {\\n    p4: Point;\\n\\n    // The constructor initializes the points that define the curve.\\n    constructor(p1: Point, p2: Point, p3: Point, p4: Point) {\\n        super(p1, p2, p3);\\n        this.p4 = p4;\\n    }\\n\\n    override pointSecant(t: number): Line {\\n        const p12 = this.lerp(this.p1, this.p2, t);\\n        const p23 = this.lerp(this.p2, this.p3, t);\\n        const p34 = this.lerp(this.p3, this.p4, t);\\n        const p123 = this.lerp(p12, p23, t);\\n        const p234 = this.lerp(p23, p34, t);\\n        return new Line(p123, p234);\\n    }\\n\\n    // This method computes a point on the curve for a given value of \\\"t\\\".\\n    override pointOnCurve(t: number): Point {\\n        const secant = this.pointSecant(t);\\n        // We then use these intermediate points to compute the final point on the curve.\\n        return this.lerp(secant.sourcePoint, secant.destinationPoint, t);\\n    }\\n\\n    override path(): string {\\n        return 'M' +\\n            this.p1.x +\\n            ' ' +\\n            this.p1.y +\\n            ' C' +\\n            this.p2.x +\\n            ' ' +\\n            this.p2.y +\\n            ' ' +\\n            this.p3.x +\\n            ' ' +\\n            this.p3.y +\\n            ' ' +\\n            this.p4.x +\\n            ' ' +\\n            this.p4.y\\n    }\\n}\\n\",\"import { Arrow } from \\\"../drawingprimitives/Arrow\\\";\\nimport { CubicBezierCurve } from \\\"../drawingprimitives/BezierCurve\\\";\\nimport { Point } from \\\"../drawingprimitives/Point\\\";\\nimport { State } from \\\"../state\\\";\\nimport { StateConnection } from \\\"./StateConnection\\\";\\nimport {Transition} from \\\"./Transition\\\";\\n\\nexport class SelfStateConnection extends StateConnection {\\n    private curve: CubicBezierCurve;\\n    private arrowTip: Point;\\n    private arrowBase: Point;\\n\\n    constructor(transition: Transition) {\\n        super(transition);\\n        const { curve, arrowBase, arrowTip } = this.createCurveAndArrow();\\n        this.curve = curve;\\n        this.arrowBase = arrowBase;\\n        this.arrowTip = arrowTip;\\n    }\\n\\n    override path(): string {\\n        return this.curve.path();\\n    }\\n\\n    override arrow(): string {\\n        return this.createArrowPath(this.arrowBase, this.arrowTip);\\n    }\\n\\n    override calculateRectanglePlacementAbovePath(width: number, height: number): Point {\\n        const centerPoint = this.curve.pointOnCurve(0.5);\\n        return new Point(centerPoint.x, centerPoint.y - height / 2 - 10);\\n    }\\n\\n    override getCenterPoint(): Point {\\n        return this.curve.pointOnCurve(0.5);\\n    }\\n\\n    private createCurveAndArrow(): { curve: CubicBezierCurve, arrowBase: Point, arrowTip: Point } {\\n        const origin = this.source.origin;\\n        const controlPoint1 = new Point(origin.x - 50, origin.y - 65);\\n        const controlPoint2 = new Point(origin.x + 50, origin.y - 65);\\n\\n        const start = origin.moveToPoint(controlPoint1, State.circleRadius);\\n        const end = origin.moveToPoint(controlPoint2, State.circleRadius + Arrow.transition.width);\\n\\n        const curve = new CubicBezierCurve(start, controlPoint1, controlPoint2, end);\\n        const arrowTip = origin.moveToPoint(controlPoint2, State.circleRadius);\\n\\n        return { curve, arrowBase: end, arrowTip };\\n    }\\n\\n    private createArrowPath(base: Point, tip: Point): string {\\n        const arrow = Arrow.transition;\\n        const angle = Math.atan2(tip.y - base.y, tip.x - base.x);\\n        const sin = Math.sin(angle);\\n        const cos = Math.cos(angle);\\n        const halfHeight = arrow.height / 2;\\n\\n        const leftCorner = new Point(\\n            base.x + halfHeight * sin,\\n            base.y - halfHeight * cos\\n        );\\n        const rightCorner = new Point(\\n            base.x - halfHeight * sin,\\n            base.y + halfHeight * cos\\n        );\\n\\n        return `M ${base.x} ${base.y} L ${leftCorner.x} ${leftCorner.y} L ${tip.x} ${tip.y} L ${rightCorner.x} ${rightCorner.y} Z`;\\n    }\\n}\",\"\\nexport class Label {\\n    constructor(public text: string, public x: number, public y: number, public width: number, public height: number) { }\\n}\",\"export class Size {\\n    width: number;\\n    height: number;\\n\\n    constructor(width: number, height: number) {\\n        this.width = width;\\n        this.height = height;\\n    }\\n}\",\"import {MatDialog, MatDialogRef} from '@angular/material/dialog';\\nimport {State} from '../state';\\nimport {Label} from './Label';\\nimport {StateConnection} from './StateConnection';\\nimport {SelfStateConnection} from './SelfStateConnection';\\nimport {EmptyStateConnection} from './EmptyStateConnection';\\nimport {Size} from '../drawingprimitives/Size';\\nimport {Point} from \\\"../drawingprimitives/Point\\\";\\nimport {AdjustableStateConnection, ConnectionType} from \\\"./AdjustableStateConnection\\\";\\n\\nexport abstract class Transition {\\n\\n    private ctx: CanvasRenderingContext2D;\\n    public fontSize: number = 16;\\n    public fontFamily: string = 'Arial';\\n\\n    abstract source: State;\\n    abstract destination: State;\\n    relativePos?: PolarRelativePosition\\n    highlight = false\\n\\n    protected constructor() {\\n        const canvas = document.createElement('canvas');\\n        this.ctx = canvas.getContext('2d')!;\\n        this.ctx.font = `${this.fontSize}px ${this.fontFamily}`;\\n    }\\n\\n    absolutCenterPoint(): Point | undefined {\\n        if (this.relativePos) {\\n            return PolarRelativePositionCalculator.toAbsolute(this.relativePos, this.source.origin, this.destination.origin) ;\\n        }\\n        return undefined;\\n    }\\n\\n    set centerPoint(point: Point) {\\n        this.relativePos = PolarRelativePositionCalculator.calculate(point, this.source.origin, this.destination.origin);\\n    }\\n\\n    get centerPoint(): Point | undefined {\\n        if (this.relativePos) {\\n            return PolarRelativePositionCalculator.toAbsolute(this.relativePos, this.source.origin, this.destination.origin) ;\\n        }\\n        return this.connection.getCenterPoint();\\n    }\\n\\n    delete(): void {\\n        const result = this.source.transitions.filter((transition) => transition !== this)\\n        this.source.transitions = result;\\n    }\\n\\n    get connection(): StateConnection {\\n        if (this.source.hasConnectionTo(this.destination)) {\\n            if (this.source === this.destination) {\\n                return new SelfStateConnection(this);\\n            } else if (this.destination.hasConnectionTo(this.source)) {\\n                const transition = this.destination.getTransitionTo(this.source)!\\n\\n                if (transition.relativePos) {\\n                    return new AdjustableStateConnection(this);\\n                }\\n\\n                return new AdjustableStateConnection(this, ConnectionType.Bidirectional);\\n            }\\n            return new AdjustableStateConnection(this);\\n        }\\n        return new EmptyStateConnection(this);\\n    }\\n\\n    path(): string {\\n        return this.connection.path();\\n    }\\n\\n    arrow(): string {\\n        return this.connection.arrow();\\n    }\\n\\n    pathCenter(): Point {\\n        return this.connection.getCenterPoint() ?? Point.zero;\\n    }\\n\\n    labels(): Label[] {\\n        let boundingBox = new Size(0, this.fontSize * this.displayText().length);\\n\\n        this.displayText().forEach((text) => {\\n            const width = this.ctx.measureText(text).width;\\n            boundingBox.width = Math.max(boundingBox.width, width);\\n        });\\n\\n        const centerPoint = this.connection.calculateRectanglePlacementAbovePath(boundingBox.width, boundingBox.height);\\n\\n        // Calculate the left edge of the bounding box\\n        const leftEdge = centerPoint.x - boundingBox.width / 2;\\n\\n        // Move rectangleCenterY to the top of the rectangle\\n        const topEdge = centerPoint.y - boundingBox.height / 2;\\n\\n        return this.displayText().map((text, index) => {\\n            return new Label(\\n                text,\\n                leftEdge, // x-coordinate is now at the left edge\\n                topEdge + index * this.fontSize + this.fontSize / 2,\\n                boundingBox.width,\\n                boundingBox.height\\n            );\\n        });\\n    }\\n\\n    isEmpty(): boolean {\\n        return this.displayText().length == 0;\\n    }\\n\\n    toJSON(): Object {\\n        return {\\n            destination: this.destination.id\\n        }\\n    }\\n\\n    abstract displayText(): string[];\\n\\n    abstract openTransitionDialog(dialog: MatDialog): MatDialogRef<any, any>;\\n}\\n\\ninterface PolarRelativePosition {\\n    t: number;        // Position entlang der Linie (0 bis 1)\\n    r: number;        // Abstand von der Linie\\n    clockwise: boolean; // Richtung (im oder gegen den Uhrzeigersinn)\\n}\\n\\nclass PolarRelativePositionCalculator {\\n    static calculate(point: Point, p1: Point, p2: Point): PolarRelativePosition {\\n        const dx = p2.x - p1.x;\\n        const dy = p2.y - p1.y;\\n        const length = Math.sqrt(dx * dx + dy * dy);\\n\\n        // Vektor von p1 zum Punkt\\n        const vx = point.x - p1.x;\\n        const vy = point.y - p1.y;\\n\\n        // Projektion auf die Linie\\n        const t = (vx * dx + vy * dy) / (length * length);\\n\\n        // Senkrechter Abstand\\n        const px = p1.x + t * dx;\\n        const py = p1.y + t * dy;\\n        const r = Math.sqrt((point.x - px) ** 2 + (point.y - py) ** 2);\\n\\n        // Bestimme die Richtung (im oder gegen den Uhrzeigersinn)\\n        const clockwise = (dx * (point.y - p1.y) - dy * (point.x - p1.x)) > 0;\\n\\n        return { t, r, clockwise };\\n    }\\n\\n    static toAbsolute(relPos: PolarRelativePosition, p1: Point, p2: Point): Point {\\n        const dx = p2.x - p1.x;\\n        const dy = p2.y - p1.y;\\n        const length = Math.sqrt(dx * dx + dy * dy);\\n\\n        // Punkt auf der Linie\\n        const px = p1.x + relPos.t * dx;\\n        const py = p1.y + relPos.t * dy;\\n\\n        // Senkrechter Vektor\\n        let perpX = -dy / length;\\n        let perpY = dx / length;\\n\\n        if (!relPos.clockwise) {\\n            perpX = -perpX;\\n            perpY = -perpY;\\n        }\\n\\n        // Endgültige Position\\n        return new Point(\\n            px + relPos.r * perpX,\\n            py + relPos.r * perpY\\n        );\\n    }\\n}\\n\",\"export class Rect {\\n    constructor(public x: number, public y: number, public width: number, public height: number) {}\\n}\",\"/*\\n * Public API Surface of commons\\n */\\n\\n// Components\\nexport * from './lib/core.component';\\nexport * from './lib/footer/footer.component';\\nexport * from './lib/header/header.component';\\nexport * from './lib/input/input.component';\\nexport * from './lib/menu/menu.component';\\nexport * from './lib/menu/help-dialog/help-dialog.component';\\nexport * from './lib/statemachineview/statemachineview.component';\\nexport * from './lib/statemachineview/state-edit-dialog/state-edit-dialog.component';\\nexport * from './lib/testcasebutton/testcasebutton.component';\\n\\n// Services\\nexport * from './lib/statemachine/statemachine.service';\\n\\n// Core State Machine Classes\\nexport * from './lib/statemachine/statemachine';\\nexport * from './lib/statemachine/state';\\nexport * from './lib/statemachine/Result';\\n\\n// State Connections\\nexport * from './lib/statemachine/stateconnections/StateConnection';\\nexport * from './lib/statemachine/stateconnections/AdjustableStateConnection';\\nexport * from './lib/statemachine/stateconnections/EmptyStateConnection';\\nexport * from './lib/statemachine/stateconnections/SelfStateConnection';\\nexport * from './lib/statemachine/stateconnections/Transition';\\nexport * from './lib/statemachine/stateconnections/Label';\\n\\n// Drawing Primitives\\nexport * from './lib/statemachine/drawingprimitives/Shape';\\nexport * from './lib/statemachine/drawingprimitives/Arrow';\\nexport * from './lib/statemachine/drawingprimitives/BezierCurve';\\nexport * from './lib/statemachine/drawingprimitives/Line';\\nexport * from './lib/statemachine/drawingprimitives/Point';\\nexport * from './lib/statemachine/drawingprimitives/Rect';\\nexport * from './lib/statemachine/drawingprimitives/Size';\\n\\n// Interaction States\\nexport * from './lib/statemachineview/interactionstate/statemachineviewstate';\\nexport * from './lib/statemachineview/interactionstate/defaultstate';\\nexport * from './lib/statemachineview/interactionstate/movenodestate';\\nexport * from './lib/statemachineview/interactionstate/movetransitionstate';\\nexport * from './lib/statemachineview/interactionstate/transitionfromstate';\\nexport * from './lib/statemachineview/interactionstate/transitiontostate';\\nexport * from './lib/statemachineview/interactionstate/transtioneditstate';\\nexport * from './lib/statemachineview/interactionstate/transtionnewstateeditstate';\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"i1\",\"i1.StatemachineService\",\"i3\",\"i2\",\"i4\",\"i5\",\"i6\"],\"mappings\":\"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\"}","type":"asset"}]}